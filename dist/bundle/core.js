(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@angular/common"), require("@angular/core"), require("@angular/forms"), require("@angular/platform-browser"), require("rxjs"), require("rxjs/operators"));
	else if(typeof define === 'function' && define.amd)
		define(["@angular/common", "@angular/core", "@angular/forms", "@angular/platform-browser", "rxjs", "rxjs/operators"], factory);
	else if(typeof exports === 'object')
		exports["angularMdlCore"] = factory(require("@angular/common"), require("@angular/core"), require("@angular/forms"), require("@angular/platform-browser"), require("rxjs"), require("rxjs/operators"));
	else
		root["angularMdlCore"] = factory(root["ng"]["common"], root["ng"]["core"], root["ng"]["forms"], root["ng"]["platformBrowser"], root["rxjs"], root["rxjs"]["operators"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE__angular_common__, __WEBPACK_EXTERNAL_MODULE__angular_core__, __WEBPACK_EXTERNAL_MODULE__angular_forms__, __WEBPACK_EXTERNAL_MODULE__angular_platform_browser__, __WEBPACK_EXTERNAL_MODULE_rxjs__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/lib/components/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/lib/components/index.ts":
/*!**************************************************!*\
  !*** ./src/lib/components/index.ts + 64 modules ***!
  \**************************************************/
/*! exports provided: Private1, Private2, Private3, MdlModule, MdlNonRootModule, MdlRippleDirective, MdlButtonRippleDirective, MdlCheckboxRippleDirective, MdlRadioRippleDirective, MdlIconToggleRippleDirective, MdlSwitchRippleDirective, MdlMenuItemRippleDirective, MdlAnchorRippleDirective, MdlRippleModule, MdlBadgeDirective, MdlBadgeOverlapDirective, MdlBadgeNoBackgroundDirective, MdlBadgeModule, MdlUnsupportedButtonTypeError, MdlUnsupportedColoredTypeError, MdlButtonComponent, MdlButtonModule, MdlCardComponent, MdlCardChildStructure, MdlCardTitleComponent, MdlCardSupportingTextComponent, MdlCardMediaComponent, MdlCardActionsComponent, MdlCardMenuComponent, MdlCardTitleTextDirective, MdlCardBorderDirective, MdlCardExpandDirective, MdlCardModule, CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR, MdlCheckboxComponent, MdlCheckboxModule, MdlChipModule, MdlDialogModule, MdlDialogOutletModule, MdlIconComponent, MdlIconModule, MdlUnsupportedCountOfListItemLinesError, MdlListComponent, MdlListItemComponent, MdlListItemPrimaryContentComponent, MdlListItemSecondaryContentComponent, MdlListItemSecondaryActionComponent, MdlListItemSubTitleComponent, MdlListItemSecondaryInfoComponent, MdlListItemTextBodyComponent, MdlListItemIconDirective, MdlListItemAvatarDirective, MdlListModule, MdlIconToggleComponent, MdlIconToggleModule, MdlProgressComponent, MdlProgressModule, MdlRadioGroupRegisty, MdlRadioComponent, MdlRadioModule, MdlUnsupportedShadowValueError, MdlShadowDirective, MdlShadowModule, MdlSpinnerComponent, MdlSpinnerModule, MdlSliderComponent, MdlSliderModule, MdlSnackbarComponent, MdlSnackbarService, MdlSnackbarModule, MdlSwitchComponent, MdlSwitchModule, MdlTableModule, MdlTooltipModule, MdlMenuModule, MdlLayoutModule, MdlTabsModule, DISABLE_NATIVE_VALIDITY_CHECKING, MdlTextFieldComponent, MdlTextFieldModule, MdlChipComponent, MdlChipContactDirective, MdlDialogComponent, MDL_CONFIGUARTION, MIN_DIALOG_Z_INDEX, MdlDialogReference, MdlDialogService, MdlAlertComponent, MdlDialogOutletComponent, MdlDialogInnerOutletComponent, MdlDialogOutletService, MdlDefaultTableModel, MdlTableComponent, MdlSelectableTableComponent, MdlSimpleTooltipComponent, MdlTooltipComponent, AbstractMdlTooltipDirective, MdlTooltipDirective, MdlTooltipLargeDirective, MdlMenuError, MdlMenuRegisty, MdlMenuComponent, MdlMenuItemComponent, MdlMenuItemFullBleedDeviderComponent, LAYOUT_SCREEN_SIZE_THRESHOLD, MdLUnsupportedLayoutTypeError, MdlScreenSizeService, MdlLayoutComponent, MdlLayoutHeaderComponent, MdlLayoutDrawerComponent, MdlLayoutContentComponent, MdlLayoutHeaderTransparentDirective, MdlLayoutHeaderRowComponent, MdlLayoutTitleComponent, MdlLayoutSpacerComponent, MdlLayoutTabPanelComponent, MdlTabsComponent, MdlTabPanelContent, MdlTabPanelComponent, MdlTabPanelTitleComponent */
/*! ModuleConcatenation bailout: Cannot concat with external {"root":["ng","common"],"commonjs":"@angular/common","commonjs2":"@angular/common","amd":"@angular/common"} (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with external {"root":["ng","core"],"commonjs":"@angular/core","commonjs2":"@angular/core","amd":"@angular/core"} (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with external {"root":["ng","forms"],"commonjs":"@angular/forms","commonjs2":"@angular/forms","amd":"@angular/forms"} (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with external {"root":["ng","platformBrowser"],"commonjs":"@angular/platform-browser","commonjs2":"@angular/platform-browser","amd":"@angular/platform-browser"} (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with external {"root":["rxjs","operators"],"commonjs":"rxjs/operators","commonjs2":"rxjs/operators","amd":"rxjs/operators"} (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with external {"root":["rxjs"],"commonjs":"rxjs","commonjs2":"rxjs","amd":"rxjs"} (<- Module is not an ECMAScript module) */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}\nvar core_ = __webpack_require__(\"@angular/core\");\n\n// CONCATENATED MODULE: ./src/lib/components/common/ripple.vendor.ts\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Ripple MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @constructor\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRipple(renderer, element) {\n    this.renderer_ = renderer;\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n}\n;\n/**\n * Store constants in one place so they can be updated easily.\n *\n * @enum {string | number}\n * @private\n */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n *\n * @enum {string}\n * @private\n */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n * Handle mouse / finger down on element.\n *\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width +\n            rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.renderer_.addClass(this.rippleElement_, this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    }\n    else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        }\n        else {\n            var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n * Handle mouse / finger up on element.\n *\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        setTimeout(function () {\n            this.renderer_.removeClass(this.rippleElement_, this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n * Initialize element.\n */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' +\n                this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n             * Getter for frameCount_.\n             * @return {number} the frame count.\n             */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n             * Setter for frameCount_.\n             * @param {number} fC the frame count.\n             */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n             * Getter for rippleElement_.\n             * @return {Element} the ripple element.\n             */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n             * Sets the ripple X and Y coordinates.\n             * @param  {number} newX the new X coordinate\n             * @param  {number} newY the new Y coordinate\n             */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n             * Sets the ripple styles.\n             * @param  {boolean} start whether or not this is the start frame.\n             */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    }\n                    else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' +\n                                this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.renderer_.removeClass(this.rippleElement_, this.CssClasses_.IS_ANIMATING);\n                    }\n                    else {\n                        this.renderer_.addClass(this.rippleElement_, this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n             * Handles an animation frame.\n             */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                }\n                else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n\n// CONCATENATED MODULE: ./src/lib/components/common/mdl-ripple.directive.ts\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n// known bugs: https://github.com/google/material-design-lite/issues/4215\nvar mdl_ripple_directive_MdlRippleDirective = /** @class */ (function () {\n    function MdlRippleDirective(elementRef, renderer, cssContainerClasses) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.cssContainerClasses = cssContainerClasses;\n        this.RIPPLE = 'mdl-ripple';\n        this.rippleActive = true;\n        this.el = elementRef.nativeElement;\n    }\n    MdlRippleDirective.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        // remove any existing ripple container\n        if (this.rippleContainer) {\n            this.el.removeChild(this.rippleContainer);\n            delete this.rippleContainer;\n            delete this.ripple;\n        }\n        // if used as mdl-ripple without property binding it is an empty string\n        // otherwise (e.g. [mdl-ripple] it is a boolean - may be with the default value true.\n        if (this.rippleActive === '' || this.rippleActive) {\n            this.rippleContainer = this.renderer.createElement('span');\n            this.cssContainerClasses.forEach(function (cssClass) {\n                _this.renderer.addClass(_this.rippleContainer, cssClass);\n            });\n            var rippleElement = this.renderer.createElement('span');\n            this.renderer.addClass(rippleElement, this.RIPPLE);\n            this.rippleContainer.appendChild(rippleElement);\n            this.el.appendChild(this.rippleContainer);\n            this.ripple = new MaterialRipple(this.renderer, this.el);\n        }\n    };\n    return MdlRippleDirective;\n}());\n\nvar mdl_ripple_directive_MdlButtonRippleDirective = /** @class */ (function (_super) {\n    __extends(MdlButtonRippleDirective, _super);\n    function MdlButtonRippleDirective(elementRef, renderer) {\n        var _this = _super.call(this, elementRef, renderer, ['mdl-button__ripple-container']) || this;\n        _this.rippleActive = true;\n        return _this;\n    }\n    // AOT is not able to call lifecycle hooks if a base class :(\n    MdlButtonRippleDirective.prototype.ngOnChanges = function (changes) { _super.prototype.ngOnChanges.call(this, changes); };\n    __decorate([\n        Object(core_[\"Input\"])('mdl-ripple'),\n        __metadata(\"design:type\", Object)\n    ], MdlButtonRippleDirective.prototype, \"rippleActive\", void 0);\n    MdlButtonRippleDirective = __decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'mdl-button[mdl-ripple], button[mdl-ripple]'\n        }),\n        __metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlButtonRippleDirective);\n    return MdlButtonRippleDirective;\n}(mdl_ripple_directive_MdlRippleDirective));\n\nvar mdl_ripple_directive_MdlCheckboxRippleDirective = /** @class */ (function (_super) {\n    __extends(MdlCheckboxRippleDirective, _super);\n    function MdlCheckboxRippleDirective(elementRef, renderer) {\n        var _this = _super.call(this, elementRef, renderer, ['mdl-checkbox__ripple-container', 'mdl-ripple--center']) || this;\n        _this.rippleActive = true;\n        return _this;\n    }\n    // AOT is not able to call lifecycle hooks if a base class :(\n    MdlCheckboxRippleDirective.prototype.ngOnChanges = function (changes) { _super.prototype.ngOnChanges.call(this, changes); };\n    __decorate([\n        Object(core_[\"Input\"])('mdl-ripple'),\n        __metadata(\"design:type\", Object)\n    ], MdlCheckboxRippleDirective.prototype, \"rippleActive\", void 0);\n    MdlCheckboxRippleDirective = __decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'mdl-checkbox[mdl-ripple]'\n        }),\n        __metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlCheckboxRippleDirective);\n    return MdlCheckboxRippleDirective;\n}(mdl_ripple_directive_MdlRippleDirective));\n\nvar mdl_ripple_directive_MdlRadioRippleDirective = /** @class */ (function (_super) {\n    __extends(MdlRadioRippleDirective, _super);\n    function MdlRadioRippleDirective(elementRef, renderer) {\n        var _this = _super.call(this, elementRef, renderer, ['mdl-radio__ripple-container', 'mdl-ripple--center']) || this;\n        _this.rippleActive = true;\n        return _this;\n    }\n    // AOT is not able to call lifecycle hooks if a base class :(\n    MdlRadioRippleDirective.prototype.ngOnChanges = function (changes) { _super.prototype.ngOnChanges.call(this, changes); };\n    __decorate([\n        Object(core_[\"Input\"])('mdl-ripple'),\n        __metadata(\"design:type\", Object)\n    ], MdlRadioRippleDirective.prototype, \"rippleActive\", void 0);\n    MdlRadioRippleDirective = __decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'mdl-radio[mdl-ripple]'\n        }),\n        __metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlRadioRippleDirective);\n    return MdlRadioRippleDirective;\n}(mdl_ripple_directive_MdlRippleDirective));\n\nvar mdl_ripple_directive_MdlIconToggleRippleDirective = /** @class */ (function (_super) {\n    __extends(MdlIconToggleRippleDirective, _super);\n    function MdlIconToggleRippleDirective(elementRef, renderer) {\n        var _this = _super.call(this, elementRef, renderer, ['mdl-icon-toggle__ripple-container', 'mdl-ripple--center']) || this;\n        _this.rippleActive = true;\n        return _this;\n    }\n    // AOT is not able to call lifecycle hooks if a base class :(\n    MdlIconToggleRippleDirective.prototype.ngOnChanges = function (changes) { _super.prototype.ngOnChanges.call(this, changes); };\n    __decorate([\n        Object(core_[\"Input\"])('mdl-ripple'),\n        __metadata(\"design:type\", Object)\n    ], MdlIconToggleRippleDirective.prototype, \"rippleActive\", void 0);\n    MdlIconToggleRippleDirective = __decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'mdl-icon-toggle[mdl-ripple]'\n        }),\n        __metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlIconToggleRippleDirective);\n    return MdlIconToggleRippleDirective;\n}(mdl_ripple_directive_MdlRippleDirective));\n\nvar mdl_ripple_directive_MdlSwitchRippleDirective = /** @class */ (function (_super) {\n    __extends(MdlSwitchRippleDirective, _super);\n    function MdlSwitchRippleDirective(elementRef, renderer) {\n        var _this = _super.call(this, elementRef, renderer, ['mdl-switch__ripple-container', 'mdl-ripple--center']) || this;\n        _this.rippleActive = true;\n        return _this;\n    }\n    // AOT is not able to call lifecycle hooks if a base class :(\n    MdlSwitchRippleDirective.prototype.ngOnChanges = function (changes) { _super.prototype.ngOnChanges.call(this, changes); };\n    __decorate([\n        Object(core_[\"Input\"])('mdl-ripple'),\n        __metadata(\"design:type\", Object)\n    ], MdlSwitchRippleDirective.prototype, \"rippleActive\", void 0);\n    MdlSwitchRippleDirective = __decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'mdl-switch[mdl-ripple]'\n        }),\n        __metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlSwitchRippleDirective);\n    return MdlSwitchRippleDirective;\n}(mdl_ripple_directive_MdlRippleDirective));\n\nvar mdl_ripple_directive_MdlMenuItemRippleDirective = /** @class */ (function (_super) {\n    __extends(MdlMenuItemRippleDirective, _super);\n    function MdlMenuItemRippleDirective(elementRef, renderer) {\n        var _this = _super.call(this, elementRef, renderer, ['mdl-menu__item--ripple-container']) || this;\n        _this.rippleActive = true;\n        return _this;\n    }\n    // AOT is not able to call lifecycle hooks if a base class :(\n    MdlMenuItemRippleDirective.prototype.ngOnChanges = function (changes) { _super.prototype.ngOnChanges.call(this, changes); };\n    __decorate([\n        Object(core_[\"Input\"])('mdl-ripple'),\n        __metadata(\"design:type\", Object)\n    ], MdlMenuItemRippleDirective.prototype, \"rippleActive\", void 0);\n    MdlMenuItemRippleDirective = __decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'mdl-menu-item[mdl-ripple]'\n        }),\n        __metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlMenuItemRippleDirective);\n    return MdlMenuItemRippleDirective;\n}(mdl_ripple_directive_MdlRippleDirective));\n\nvar mdl_ripple_directive_MdlAnchorRippleDirective = /** @class */ (function (_super) {\n    __extends(MdlAnchorRippleDirective, _super);\n    function MdlAnchorRippleDirective(elementRef, renderer) {\n        var _this = _super.call(this, elementRef, renderer, ['mdl-tabs__ripple-container', 'mdl-layout__tab-ripple-container']) || this;\n        _this.rippleActive = true;\n        return _this;\n    }\n    // AOT is not able to call lifecycle hooks if a base class :(\n    MdlAnchorRippleDirective.prototype.ngOnChanges = function (changes) { _super.prototype.ngOnChanges.call(this, changes); };\n    __decorate([\n        Object(core_[\"Input\"])('mdl-ripple'),\n        __metadata(\"design:type\", Object)\n    ], MdlAnchorRippleDirective.prototype, \"rippleActive\", void 0);\n    MdlAnchorRippleDirective = __decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'a[mdl-ripple],div[mdl-ripple]'\n        }),\n        __metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlAnchorRippleDirective);\n    return MdlAnchorRippleDirective;\n}(mdl_ripple_directive_MdlRippleDirective));\n\nvar MDL_COMMON_DIRECTIVES = [\n    mdl_ripple_directive_MdlCheckboxRippleDirective,\n    mdl_ripple_directive_MdlButtonRippleDirective,\n    mdl_ripple_directive_MdlRadioRippleDirective,\n    mdl_ripple_directive_MdlIconToggleRippleDirective,\n    mdl_ripple_directive_MdlSwitchRippleDirective,\n    mdl_ripple_directive_MdlMenuItemRippleDirective,\n    mdl_ripple_directive_MdlAnchorRippleDirective\n];\nvar mdl_ripple_directive_MdlRippleModule = /** @class */ (function () {\n    function MdlRippleModule() {\n    }\n    MdlRippleModule_1 = MdlRippleModule;\n    MdlRippleModule.forRoot = function () {\n        return {\n            ngModule: MdlRippleModule_1,\n            providers: []\n        };\n    };\n    var MdlRippleModule_1;\n    MdlRippleModule = MdlRippleModule_1 = __decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: MDL_COMMON_DIRECTIVES,\n            declarations: MDL_COMMON_DIRECTIVES,\n        })\n    ], MdlRippleModule);\n    return MdlRippleModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/common/mdl-error.ts\nvar mdl_error_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Wrapper for mdl error messages.\n */\nvar MdlError = /** @class */ (function (_super) {\n    mdl_error_extends(MdlError, _super);\n    function MdlError(value) {\n        /* istanbul ignore next */\n        return _super.call(this, value) || this;\n    }\n    return MdlError;\n}(Error));\n\nvar MdlStructureError = /** @class */ (function (_super) {\n    mdl_error_extends(MdlStructureError, _super);\n    function MdlStructureError(child, requiredParent) {\n        /* istanbul ignore next */\n        return _super.call(this, \"\\\"\" + child + \"\\\" requires \\\"\" + requiredParent + \"\\\" as a parent.\") || this;\n    }\n    return MdlStructureError;\n}(MdlError));\n\n\n// CONCATENATED MODULE: ./src/lib/components/common/boolean-property.ts\nfunction toBoolean(value) {\n    return value != null && \"\" + value !== 'false';\n}\n\n// CONCATENATED MODULE: ./src/lib/components/common/native-support.ts\nfunction callNative(el, method, arg) {\n    if (arg === void 0) { arg = null; }\n    /* istanbul ignore next */ // if this code runs in browser this is allways true!\n    if (el[method]) {\n        el[method](arg);\n    }\n}\n\n// CONCATENATED MODULE: ./src/lib/components/button/mdl-button.component.ts\nvar mdl_button_component_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_button_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_button_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\nvar MdlUnsupportedButtonTypeError = /** @class */ (function (_super) {\n    mdl_button_component_extends(MdlUnsupportedButtonTypeError, _super);\n    function MdlUnsupportedButtonTypeError(type) {\n        /* istanbul ignore next */\n        return _super.call(this, \"Button type \\\"\" + type + \"\\\" isn't supported (allowed: raised, fab, mini-fab, icon, '').\") || this;\n    }\n    return MdlUnsupportedButtonTypeError;\n}(MdlError));\n\nvar MdlUnsupportedColoredTypeError = /** @class */ (function (_super) {\n    mdl_button_component_extends(MdlUnsupportedColoredTypeError, _super);\n    function MdlUnsupportedColoredTypeError(type) {\n        /* istanbul ignore next */\n        return _super.call(this, \"Colored type \\\"\" + type + \"\\\" isn't supported (allowed: primary, accent, '').\") || this;\n    }\n    return MdlUnsupportedColoredTypeError;\n}(MdlError));\n\nvar MDL_BUTTON_TYPES = [\n    'raised',\n    'fab',\n    'mini-fab',\n    'icon',\n    ''\n];\nvar MDL_COLORED_TYPES = [\n    'primary',\n    'accent',\n    ''\n];\nvar mdl_button_component_MdlButtonComponent = /** @class */ (function () {\n    function MdlButtonComponent(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this._disabled = false;\n        this.element = elementRef.nativeElement;\n    }\n    Object.defineProperty(MdlButtonComponent.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlButtonComponent.prototype.ngOnChanges = function (changes) {\n        if (this.mdlButtonType && MDL_BUTTON_TYPES.indexOf(this.mdlButtonType) === -1) {\n            throw new MdlUnsupportedButtonTypeError(this.mdlButtonType);\n        }\n        if (this.mdlColoredType && MDL_COLORED_TYPES.indexOf(this.mdlColoredType) === -1) {\n            throw new MdlUnsupportedColoredTypeError(this.mdlColoredType);\n        }\n    };\n    MdlButtonComponent.prototype.onMouseUp = function () {\n        this.blurIt();\n    };\n    MdlButtonComponent.prototype.onMouseLeave = function () {\n        this.blurIt();\n    };\n    MdlButtonComponent.prototype.blurIt = function () {\n        callNative(this.element, 'blur');\n    };\n    mdl_button_component_decorate([\n        Object(core_[\"Input\"])('mdl-button-type'),\n        mdl_button_component_metadata(\"design:type\", String)\n    ], MdlButtonComponent.prototype, \"mdlButtonType\", void 0);\n    mdl_button_component_decorate([\n        Object(core_[\"Input\"])('mdl-colored'),\n        mdl_button_component_metadata(\"design:type\", String)\n    ], MdlButtonComponent.prototype, \"mdlColoredType\", void 0);\n    mdl_button_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_button_component_metadata(\"design:type\", Boolean),\n        mdl_button_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlButtonComponent.prototype, \"disabled\", null);\n    MdlButtonComponent = mdl_button_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-button, button[mdl-button], a[mdl-button]',\n            host: {\n                '[attr.disabled]': 'disabled ? \"disabled\" : null',\n                '(mouseup)': 'onMouseUp()',\n                '(mouseleave)': 'onMouseLeave()',\n                '[class.mdl-button]': 'true',\n                '[class.mdl-button--raised]': 'mdlButtonType == \"raised\"',\n                '[class.mdl-button--fab]': 'mdlButtonType == \"fab\" || mdlButtonType == \"mini-fab\"',\n                '[class.mdl-button--mini-fab]': 'mdlButtonType == \"mini-fab\"',\n                '[class.mdl-button--icon]': 'mdlButtonType == \"icon\"',\n                '[class.mdl-button--primary]': 'mdlColoredType == \"primary\"',\n                '[class.mdl-button--accent]': 'mdlColoredType == \"accent\"'\n            },\n            exportAs: 'mdlButton',\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_button_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlButtonComponent);\n    return MdlButtonComponent;\n}());\n\nvar MDL_BUTTON_DIRECTIVES = [mdl_button_component_MdlButtonComponent];\nvar mdl_button_component_MdlButtonModule = /** @class */ (function () {\n    function MdlButtonModule() {\n    }\n    MdlButtonModule_1 = MdlButtonModule;\n    MdlButtonModule.forRoot = function () {\n        return {\n            ngModule: MdlButtonModule_1,\n            providers: []\n        };\n    };\n    var MdlButtonModule_1;\n    MdlButtonModule = MdlButtonModule_1 = mdl_button_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: MDL_BUTTON_DIRECTIVES,\n            declarations: MDL_BUTTON_DIRECTIVES,\n        })\n    ], MdlButtonModule);\n    return MdlButtonModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/badge/mdl-badge.directive.ts\nvar mdl_badge_directive_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_badge_directive_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar DATA_BADE_ATTR = 'data-badge';\nvar mdl_badge_directive_MdlBadgeDirective = /** @class */ (function () {\n    function MdlBadgeDirective(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.el = elementRef.nativeElement;\n    }\n    MdlBadgeDirective.prototype.ngOnChanges = function (changes) {\n        if (this.mdlBadgeContent === null || typeof this.mdlBadgeContent === 'undefined') {\n            this.renderer.removeAttribute(this.el, DATA_BADE_ATTR);\n            return;\n        }\n        this.renderer.setAttribute(this.el, DATA_BADE_ATTR, this.mdlBadgeContent);\n    };\n    mdl_badge_directive_decorate([\n        Object(core_[\"Input\"])('mdl-badge'),\n        mdl_badge_directive_metadata(\"design:type\", String)\n    ], MdlBadgeDirective.prototype, \"mdlBadgeContent\", void 0);\n    MdlBadgeDirective = mdl_badge_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-badge]',\n            host: {\n                '[class.mdl-badge]': 'true'\n            }\n        }),\n        mdl_badge_directive_metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlBadgeDirective);\n    return MdlBadgeDirective;\n}());\n\nvar mdl_badge_directive_MdlBadgeOverlapDirective = /** @class */ (function () {\n    function MdlBadgeOverlapDirective() {\n    }\n    MdlBadgeOverlapDirective = mdl_badge_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-badge-overlap]',\n            host: {\n                '[class.mdl-badge--overlap]': 'true'\n            }\n        })\n    ], MdlBadgeOverlapDirective);\n    return MdlBadgeOverlapDirective;\n}());\n\nvar mdl_badge_directive_MdlBadgeNoBackgroundDirective = /** @class */ (function () {\n    function MdlBadgeNoBackgroundDirective() {\n    }\n    MdlBadgeNoBackgroundDirective = mdl_badge_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-badge-no-background]',\n            host: {\n                '[class.mdl-badge--no-background]': 'true'\n            }\n        })\n    ], MdlBadgeNoBackgroundDirective);\n    return MdlBadgeNoBackgroundDirective;\n}());\n\nvar MDL_BADGE_DIRECTIVES = [mdl_badge_directive_MdlBadgeDirective, mdl_badge_directive_MdlBadgeOverlapDirective, mdl_badge_directive_MdlBadgeNoBackgroundDirective];\nvar mdl_badge_directive_MdlBadgeModule = /** @class */ (function () {\n    function MdlBadgeModule() {\n    }\n    MdlBadgeModule_1 = MdlBadgeModule;\n    MdlBadgeModule.forRoot = function () {\n        return {\n            ngModule: MdlBadgeModule_1,\n            providers: []\n        };\n    };\n    var MdlBadgeModule_1;\n    MdlBadgeModule = MdlBadgeModule_1 = mdl_badge_directive_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: MDL_BADGE_DIRECTIVES,\n            declarations: MDL_BADGE_DIRECTIVES,\n        })\n    ], MdlBadgeModule);\n    return MdlBadgeModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/common/number.property.ts\nfunction toNumber(value) {\n    if (typeof value === 'undefined') {\n        return null;\n    }\n    else if (typeof value === 'string') {\n        return parseInt(value);\n    }\n    return value;\n}\n\n// CONCATENATED MODULE: ./src/lib/components/shadow/mdl-shadow.directive.ts\nvar mdl_shadow_directive_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_shadow_directive_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_shadow_directive_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\nvar MdlUnsupportedShadowValueError = /** @class */ (function (_super) {\n    mdl_shadow_directive_extends(MdlUnsupportedShadowValueError, _super);\n    function MdlUnsupportedShadowValueError(value) {\n        /* istanbul ignore next */\n        return _super.call(this, \"Shadow value \\\"\" + value + \"\\\" isn't supported (allowed: 2,3,4,6,8,16,24).\") || this;\n    }\n    return MdlUnsupportedShadowValueError;\n}(MdlError));\n\nvar MDL_SHADOW_VALUES = [0, 2, 3, 4, 6, 8, 16, 24];\nvar mdl_shadow_directive_MdlShadowDirective = /** @class */ (function () {\n    function MdlShadowDirective(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this._mdlShadow = 2;\n        this.el = elementRef.nativeElement;\n    }\n    Object.defineProperty(MdlShadowDirective.prototype, \"mdlShadow\", {\n        get: function () { return this._mdlShadow; },\n        set: function (value) { this._mdlShadow = toNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlShadowDirective.prototype.ngOnChanges = function (changes) {\n        if (MDL_SHADOW_VALUES.indexOf(Number(this.mdlShadow)) === -1) {\n            throw new MdlUnsupportedShadowValueError(this.mdlShadow);\n        }\n        var change = changes['mdlShadow'];\n        if (!change.isFirstChange()) {\n            this.renderer.removeClass(this.el, \"mdl-shadow--\" + change.previousValue + \"dp\");\n        }\n        this.renderer.addClass(this.el, \"mdl-shadow--\" + change.currentValue + \"dp\");\n    };\n    mdl_shadow_directive_decorate([\n        Object(core_[\"Input\"])('mdl-shadow'),\n        mdl_shadow_directive_metadata(\"design:type\", Object),\n        mdl_shadow_directive_metadata(\"design:paramtypes\", [Object])\n    ], MdlShadowDirective.prototype, \"mdlShadow\", null);\n    MdlShadowDirective = mdl_shadow_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-shadow]'\n        }),\n        mdl_shadow_directive_metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlShadowDirective);\n    return MdlShadowDirective;\n}());\n\nvar MDL_SHADOW_DIRECTIVES = [mdl_shadow_directive_MdlShadowDirective];\nvar mdl_shadow_directive_MdlShadowModule = /** @class */ (function () {\n    function MdlShadowModule() {\n    }\n    MdlShadowModule_1 = MdlShadowModule;\n    MdlShadowModule.forRoot = function () {\n        return {\n            ngModule: MdlShadowModule_1,\n            providers: []\n        };\n    };\n    var MdlShadowModule_1;\n    MdlShadowModule = MdlShadowModule_1 = mdl_shadow_directive_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: MDL_SHADOW_DIRECTIVES,\n            declarations: MDL_SHADOW_DIRECTIVES,\n        })\n    ], MdlShadowModule);\n    return MdlShadowModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/card/mdl-card.component.ts\nvar mdl_card_component_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_card_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_card_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\nvar mdl_card_component_MdlCardComponent = /** @class */ (function () {\n    function MdlCardComponent() {\n    }\n    MdlCardComponent = mdl_card_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-card',\n            host: {\n                '[class.mdl-card]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlCardComponent);\n    return MdlCardComponent;\n}());\n\nvar mdl_card_component_MdlCardChildStructure = /** @class */ (function () {\n    function MdlCardChildStructure(mdlCardComponent, childComponentName) {\n        this.mdlCardComponent = mdlCardComponent;\n        this.childComponentName = childComponentName;\n    }\n    MdlCardChildStructure.prototype.ngOnInit = function () {\n        if (this.mdlCardComponent === null) {\n            throw new MdlStructureError(this.childComponentName, 'mdl-card');\n        }\n    };\n    return MdlCardChildStructure;\n}());\n\nvar mdl_card_component_MdlCardTitleComponent = /** @class */ (function (_super) {\n    mdl_card_component_extends(MdlCardTitleComponent, _super);\n    function MdlCardTitleComponent(mdlCardComponent) {\n        return _super.call(this, mdlCardComponent, 'mdl-card-title') || this;\n    }\n    MdlCardTitleComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };\n    MdlCardTitleComponent = mdl_card_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-card-title',\n            host: {\n                '[class.mdl-card__title]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        __param(0, Object(core_[\"Optional\"])()),\n        mdl_card_component_metadata(\"design:paramtypes\", [mdl_card_component_MdlCardComponent])\n    ], MdlCardTitleComponent);\n    return MdlCardTitleComponent;\n}(mdl_card_component_MdlCardChildStructure));\n\nvar mdl_card_component_MdlCardSupportingTextComponent = /** @class */ (function (_super) {\n    mdl_card_component_extends(MdlCardSupportingTextComponent, _super);\n    function MdlCardSupportingTextComponent(mdlCardComponent) {\n        return _super.call(this, mdlCardComponent, 'mdl-card-supporting-text') || this;\n    }\n    MdlCardSupportingTextComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };\n    MdlCardSupportingTextComponent = mdl_card_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-card-supporting-text',\n            host: {\n                '[class.mdl-card__supporting-text]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        __param(0, Object(core_[\"Optional\"])()),\n        mdl_card_component_metadata(\"design:paramtypes\", [mdl_card_component_MdlCardComponent])\n    ], MdlCardSupportingTextComponent);\n    return MdlCardSupportingTextComponent;\n}(mdl_card_component_MdlCardChildStructure));\n\nvar mdl_card_component_MdlCardMediaComponent = /** @class */ (function (_super) {\n    mdl_card_component_extends(MdlCardMediaComponent, _super);\n    function MdlCardMediaComponent(mdlCardComponent) {\n        return _super.call(this, mdlCardComponent, 'mdl-card-media') || this;\n    }\n    MdlCardMediaComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };\n    MdlCardMediaComponent = mdl_card_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-card-media',\n            host: {\n                '[class.mdl-card__media]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        __param(0, Object(core_[\"Optional\"])()),\n        mdl_card_component_metadata(\"design:paramtypes\", [mdl_card_component_MdlCardComponent])\n    ], MdlCardMediaComponent);\n    return MdlCardMediaComponent;\n}(mdl_card_component_MdlCardChildStructure));\n\nvar mdl_card_component_MdlCardActionsComponent = /** @class */ (function (_super) {\n    mdl_card_component_extends(MdlCardActionsComponent, _super);\n    function MdlCardActionsComponent(mdlCardComponent) {\n        return _super.call(this, mdlCardComponent, 'mdl-card-actions') || this;\n    }\n    MdlCardActionsComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };\n    MdlCardActionsComponent = mdl_card_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-card-actions',\n            host: {\n                '[class.mdl-card__actions]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        __param(0, Object(core_[\"Optional\"])()),\n        mdl_card_component_metadata(\"design:paramtypes\", [mdl_card_component_MdlCardComponent])\n    ], MdlCardActionsComponent);\n    return MdlCardActionsComponent;\n}(mdl_card_component_MdlCardChildStructure));\n\nvar mdl_card_component_MdlCardMenuComponent = /** @class */ (function (_super) {\n    mdl_card_component_extends(MdlCardMenuComponent, _super);\n    function MdlCardMenuComponent(mdlCardComponent) {\n        return _super.call(this, mdlCardComponent, 'mdl-card-menu') || this;\n    }\n    MdlCardMenuComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };\n    MdlCardMenuComponent = mdl_card_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-card-menu',\n            host: {\n                '[class.mdl-card__menu]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        __param(0, Object(core_[\"Optional\"])()),\n        mdl_card_component_metadata(\"design:paramtypes\", [mdl_card_component_MdlCardComponent])\n    ], MdlCardMenuComponent);\n    return MdlCardMenuComponent;\n}(mdl_card_component_MdlCardChildStructure));\n\nvar mdl_card_component_MdlCardTitleTextDirective = /** @class */ (function () {\n    function MdlCardTitleTextDirective() {\n    }\n    MdlCardTitleTextDirective = mdl_card_component_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-card-title-text]',\n            host: {\n                '[class.mdl-card__title-text]': 'true'\n            }\n        })\n    ], MdlCardTitleTextDirective);\n    return MdlCardTitleTextDirective;\n}());\n\nvar mdl_card_component_MdlCardBorderDirective = /** @class */ (function () {\n    function MdlCardBorderDirective() {\n    }\n    MdlCardBorderDirective = mdl_card_component_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-card-border]',\n            host: {\n                '[class.mdl-card--border]': 'true'\n            }\n        })\n    ], MdlCardBorderDirective);\n    return MdlCardBorderDirective;\n}());\n\nvar mdl_card_component_MdlCardExpandDirective = /** @class */ (function () {\n    function MdlCardExpandDirective() {\n    }\n    MdlCardExpandDirective = mdl_card_component_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-card-expand]',\n            host: {\n                '[class.mdl-card--expand]': 'true'\n            }\n        })\n    ], MdlCardExpandDirective);\n    return MdlCardExpandDirective;\n}());\n\nvar MDL_CARD_DIRECTIVES = [\n    mdl_card_component_MdlCardComponent,\n    mdl_card_component_MdlCardTitleComponent,\n    mdl_card_component_MdlCardMediaComponent,\n    mdl_card_component_MdlCardSupportingTextComponent,\n    mdl_card_component_MdlCardActionsComponent,\n    mdl_card_component_MdlCardMenuComponent,\n    mdl_card_component_MdlCardTitleTextDirective,\n    mdl_card_component_MdlCardBorderDirective,\n    mdl_card_component_MdlCardExpandDirective\n];\nvar mdl_card_component_MdlCardModule = /** @class */ (function () {\n    function MdlCardModule() {\n    }\n    MdlCardModule_1 = MdlCardModule;\n    MdlCardModule.forRoot = function () {\n        return {\n            ngModule: MdlCardModule_1,\n            providers: []\n        };\n    };\n    var MdlCardModule_1;\n    MdlCardModule = MdlCardModule_1 = mdl_card_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: MDL_CARD_DIRECTIVES,\n            declarations: MDL_CARD_DIRECTIVES,\n        })\n    ], MdlCardModule);\n    return MdlCardModule;\n}());\n\n\n// EXTERNAL MODULE: external {\"root\":[\"ng\",\"common\"],\"commonjs\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"amd\":\"@angular/common\"}\nvar common_ = __webpack_require__(\"@angular/common\");\n\n// CONCATENATED MODULE: ./src/lib/components/icon/mdl-icon.component.ts\nvar mdl_icon_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar mdl_icon_component_MdlIconComponent = /** @class */ (function () {\n    function MdlIconComponent() {\n    }\n    MdlIconComponent = mdl_icon_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-icon',\n            host: {\n                '[class.material-icons]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlIconComponent);\n    return MdlIconComponent;\n}());\n\nvar MDL_ICON_DIRECTIVES = [mdl_icon_component_MdlIconComponent];\nvar mdl_icon_component_MdlIconModule = /** @class */ (function () {\n    function MdlIconModule() {\n    }\n    MdlIconModule_1 = MdlIconModule;\n    MdlIconModule.forRoot = function () {\n        return {\n            ngModule: MdlIconModule_1,\n            providers: []\n        };\n    };\n    var MdlIconModule_1;\n    MdlIconModule = MdlIconModule_1 = mdl_icon_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: MDL_ICON_DIRECTIVES,\n            declarations: MDL_ICON_DIRECTIVES,\n        })\n    ], MdlIconModule);\n    return MdlIconModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/chips/mdl-chip-contact.directive.ts\nvar mdl_chip_contact_directive_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_chip_contact_directive_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_chip_contact_directive_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\nvar mdl_chip_contact_directive_MdlChipContactDirective = /** @class */ (function () {\n    function MdlChipContactDirective(mdlChipComponent) {\n        this.mdlChipComponent = mdlChipComponent;\n    }\n    MdlChipContactDirective.prototype.ngOnInit = function () {\n        if (!this.mdlChipComponent) {\n            throw new MdlStructureError('mdl-chip-contact', 'mdl-chip');\n        }\n    };\n    MdlChipContactDirective = mdl_chip_contact_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-chip-contact]',\n            host: {\n                '[class.mdl-chip__contact]': 'true'\n            }\n        }),\n        mdl_chip_contact_directive_param(0, Object(core_[\"Optional\"])()), mdl_chip_contact_directive_param(0, Object(core_[\"Inject\"])(Object(core_[\"forwardRef\"])(function () { return mdl_chip_component_MdlChipComponent; }))),\n        mdl_chip_contact_directive_metadata(\"design:paramtypes\", [mdl_chip_component_MdlChipComponent])\n    ], MdlChipContactDirective);\n    return MdlChipContactDirective;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/chips/mdl-chip.component.ts\nvar mdl_chip_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_chip_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar mdl_chip_component_MdlChipComponent = /** @class */ (function () {\n    function MdlChipComponent() {\n        this.actionClick = new core_[\"EventEmitter\"]();\n    }\n    MdlChipComponent.prototype.action = function () {\n        this.actionClick.emit();\n    };\n    mdl_chip_component_decorate([\n        Object(core_[\"Input\"])('mdl-label'),\n        mdl_chip_component_metadata(\"design:type\", Object)\n    ], MdlChipComponent.prototype, \"mdlLabel\", void 0);\n    mdl_chip_component_decorate([\n        Object(core_[\"Input\"])('mdl-action-icon'),\n        mdl_chip_component_metadata(\"design:type\", Object)\n    ], MdlChipComponent.prototype, \"mdlActionIcon\", void 0);\n    mdl_chip_component_decorate([\n        Object(core_[\"Output\"])('action-click'),\n        mdl_chip_component_metadata(\"design:type\", Object)\n    ], MdlChipComponent.prototype, \"actionClick\", void 0);\n    mdl_chip_component_decorate([\n        Object(core_[\"ContentChild\"])(mdl_chip_contact_directive_MdlChipContactDirective),\n        mdl_chip_component_metadata(\"design:type\", mdl_chip_contact_directive_MdlChipContactDirective)\n    ], MdlChipComponent.prototype, \"chipContact\", void 0);\n    MdlChipComponent = mdl_chip_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-chip',\n            host: {\n                '[class.mdl-chip]': 'true',\n                '[class.mdl-chip--contact]': 'chipContact'\n            },\n            template: \"\\n    <ng-content></ng-content>\\n    <span *ngIf=\\\"mdlLabel\\\" class=\\\"mdl-chip__text\\\">{{mdlLabel}}</span>\\n    <button *ngIf=\\\"mdlActionIcon\\\" (click)=\\\"action()\\\" type=\\\"button\\\" class=\\\"mdl-chip__action\\\">\\n      <mdl-icon>{{mdlActionIcon}}</mdl-icon>\\n    </button>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlChipComponent);\n    return MdlChipComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/chips/index.ts\nvar chips_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\nvar DIRECTIVES = [mdl_chip_component_MdlChipComponent, mdl_chip_contact_directive_MdlChipContactDirective];\nvar chips_MdlChipModule = /** @class */ (function () {\n    function MdlChipModule() {\n    }\n    MdlChipModule_1 = MdlChipModule;\n    MdlChipModule.forRoot = function () {\n        return {\n            ngModule: MdlChipModule_1,\n            providers: []\n        };\n    };\n    var MdlChipModule_1;\n    MdlChipModule = MdlChipModule_1 = chips_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [mdl_icon_component_MdlIconModule, common_[\"CommonModule\"]],\n            exports: DIRECTIVES,\n            declarations: DIRECTIVES,\n        })\n    ], MdlChipModule);\n    return MdlChipModule;\n}());\n\n\n// EXTERNAL MODULE: external {\"root\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"commonjs2\":\"rxjs\",\"amd\":\"rxjs\"}\nvar external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_ = __webpack_require__(\"rxjs\");\n\n// CONCATENATED MODULE: ./src/lib/components/dialog/mdl-simple-dialog.component.ts\nvar mdl_simple_dialog_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_simple_dialog_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_simple_dialog_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\nvar mdl_simple_dialog_component_MdlSimpleDialogComponent = /** @class */ (function () {\n    // why do i need forwardRef at this point, the demo LoginDialog dosn't need this!?!?\n    function MdlSimpleDialogComponent(dialogConfiguration, dialog) {\n        var _this = this;\n        this.dialogConfiguration = dialogConfiguration;\n        this.dialog = dialog;\n        dialog.onVisible().subscribe(function () {\n            if (_this.buttons) {\n                _this.buttons.first.elementRef.nativeElement.focus();\n            }\n        });\n    }\n    MdlSimpleDialogComponent.prototype.actionClicked = function (action) {\n        action.handler();\n        this.dialog.hide();\n    };\n    MdlSimpleDialogComponent.prototype.onEsc = function () {\n        // run the first action that is marked as closing action\n        var closeAction = this.dialogConfiguration.actions.find(function (action) { return action.isClosingAction; });\n        if (closeAction) {\n            closeAction.handler();\n            this.dialog.hide();\n        }\n    };\n    mdl_simple_dialog_component_decorate([\n        Object(core_[\"ViewChildren\"])(mdl_button_component_MdlButtonComponent),\n        mdl_simple_dialog_component_metadata(\"design:type\", core_[\"QueryList\"])\n    ], MdlSimpleDialogComponent.prototype, \"buttons\", void 0);\n    mdl_simple_dialog_component_decorate([\n        Object(core_[\"HostListener\"])('keydown.esc'),\n        mdl_simple_dialog_component_metadata(\"design:type\", Function),\n        mdl_simple_dialog_component_metadata(\"design:paramtypes\", []),\n        mdl_simple_dialog_component_metadata(\"design:returntype\", void 0)\n    ], MdlSimpleDialogComponent.prototype, \"onEsc\", null);\n    MdlSimpleDialogComponent = mdl_simple_dialog_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-dialog-component',\n            template: \"\\n      <h3 class=\\\"mdl-dialog__title\\\" *ngIf=\\\"dialogConfiguration?.title\\\">{{dialogConfiguration?.title}}</h3>\\n      <div class=\\\"mdl-dialog__content\\\" [innerHTML]=\\\"dialogConfiguration?.message\\\"></div>\\n      <div \\n        class=\\\"mdl-dialog__actions\\\" \\n        [ngClass]=\\\"{'mdl-dialog__actions--full-width': dialogConfiguration?.fullWidthAction}\\\">\\n        <button\\n          mdl-button mdl-colored=\\\"primary\\\"\\n          type=\\\"button\\\" \\n          *ngFor=\\\"let action of dialogConfiguration?.actions\\\" \\n          (click)=\\\"actionClicked(action)\\\"\\n          [ngClass]=\\\"{'close': action.isClosingAction}\\\">{{action.text}}</button>\\n      </div>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_simple_dialog_component_param(0, Object(core_[\"Inject\"])(Object(core_[\"forwardRef\"])(function () { return MDL_CONFIGUARTION; }))),\n        mdl_simple_dialog_component_param(1, Object(core_[\"Inject\"])(Object(core_[\"forwardRef\"])(function () { return MdlDialogReference; }))),\n        mdl_simple_dialog_component_metadata(\"design:paramtypes\", [Object, MdlDialogReference])\n    ], MdlSimpleDialogComponent);\n    return MdlSimpleDialogComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/dialog/internal-dialog-reference.ts\n\n\n/**\n * Internal representation of the dialog ref. the service\n * user should not have access to the created components\n * and internal implementations.\n */\nvar internal_dialog_reference_InternalMdlDialogReference = /** @class */ (function () {\n    function InternalMdlDialogReference(config) {\n        this.config = config;\n        this.onHideSubject = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"Subject\"]();\n        this.onVisibleSubject = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"Subject\"]();\n        this.isModal = false;\n        this.dialogRef = new MdlDialogReference(this);\n    }\n    Object.defineProperty(InternalMdlDialogReference.prototype, \"hostDialog\", {\n        get: function () {\n            return this.hostDialogComponentRef.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    InternalMdlDialogReference.prototype.hide = function (data) {\n        this.onHideSubject.next(data);\n        this.onHideSubject.complete();\n        this.closeCallback();\n    };\n    InternalMdlDialogReference.prototype.visible = function () {\n        this.onVisibleSubject.next();\n        this.onVisibleSubject.complete();\n    };\n    InternalMdlDialogReference.prototype.onHide = function () {\n        return this.onHideSubject.asObservable();\n    };\n    InternalMdlDialogReference.prototype.onVisible = function () {\n        return this.onVisibleSubject.asObservable();\n    };\n    return InternalMdlDialogReference;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/common/animations.ts\nvar NativeWebAnimationPlayer = /** @class */ (function () {\n    function NativeWebAnimationPlayer(element, keyframes, duration, easing) {\n        this.element = element;\n        this.keyframes = keyframes;\n        this.duration = duration;\n        this.easing = easing;\n        this.onDoneCallback = [];\n    }\n    NativeWebAnimationPlayer.prototype.onDone = function (fn) {\n        this.onDoneCallback.push(fn);\n    };\n    NativeWebAnimationPlayer.prototype.play = function () {\n        var _this = this;\n        var animation = this.element['animate'](this.keyframes, { duration: this.duration,\n            easing: this.easing,\n            fill: 'forwards' });\n        animation.addEventListener('finish', function () { return _this.onDoneCallback.forEach(function (fn) { return fn(); }); });\n    };\n    return NativeWebAnimationPlayer;\n}());\n\nvar NoopAnimationPlayer = /** @class */ (function () {\n    function NoopAnimationPlayer(element, keyframes, duration, easing) {\n        this.element = element;\n        this.keyframes = keyframes;\n        this.duration = duration;\n        this.easing = easing;\n        this.onDoneCallback = [];\n    }\n    NoopAnimationPlayer.prototype.onDone = function (fn) {\n        this.onDoneCallback.push(fn);\n    };\n    NoopAnimationPlayer.prototype.play = function () {\n        this.onDoneCallback.forEach(function (fn) { return fn(); });\n    };\n    return NoopAnimationPlayer;\n}());\n\nvar Animations = /** @class */ (function () {\n    function Animations() {\n    }\n    return Animations;\n}());\n\nvar NativeWebAnimations = /** @class */ (function () {\n    function NativeWebAnimations() {\n    }\n    NativeWebAnimations.prototype.animate = function (element, keyframes, duration, easing) {\n        return new NativeWebAnimationPlayer(element, keyframes, duration, easing);\n    };\n    return NativeWebAnimations;\n}());\n\nvar NoopWebAnimations = /** @class */ (function () {\n    function NoopWebAnimations() {\n    }\n    NoopWebAnimations.prototype.animate = function (element, keyframes, duration, easing) {\n        return new NoopAnimationPlayer(element, keyframes, duration, easing);\n    };\n    return NoopWebAnimations;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/dialog/mdl-dialog-host.component.ts\nvar mdl_dialog_host_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_dialog_host_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_dialog_host_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\n\nvar enterTransitionDuration = 300;\nvar leaveTransitionDuration = 250;\nvar enterTransitionEasingCurve = 'cubic-bezier(0.0, 0.0, 0.2, 1)';\nvar leaveTransitionEasingCurve = 'cubic-bezier(0.0, 0.0, 0.2, 1)';\n// @experimental\nvar mdl_dialog_host_component_MdlDialogHostComponent = /** @class */ (function () {\n    function MdlDialogHostComponent(ngZone, renderer, animations, elementRef, config, internalDialogRef) {\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.animations = animations;\n        this.elementRef = elementRef;\n        this.config = config;\n        this.internalDialogRef = internalDialogRef;\n        this.visible = false;\n        this.showAnimationStartStyle = {\n            top: '38%',\n            opacity: '0'\n        };\n        this.showStyle = {\n            top: '50%',\n            opacity: '1'\n        };\n        this.hideAnimationEndStyle = {\n            top: '63%',\n            opacity: '0'\n        };\n        this.zIndex = MIN_DIALOG_Z_INDEX + 1;\n    }\n    MdlDialogHostComponent.prototype.show = function () {\n        var _this = this;\n        this.visible = true;\n        // give the dialogs time to draw so that a focus can be set\n        setTimeout(function () {\n            _this.internalDialogRef.visible();\n        });\n        if (this.isAnimateEnabled()) {\n            if (this.config.openFrom || this.config.closeTo) {\n                // transform is modified during anmiation and must be part of each animation keyframe.\n                this.showStyle['transform'] = 'translate(0, -50%) scale(1.0)';\n                var targetClientRect = this.elementRef.nativeElement.getBoundingClientRect();\n                var openFromRect = this.getClientRect(this.config.openFrom);\n                var closeToRect = this.config.closeTo ? this.getClientRect(this.config.closeTo) : openFromRect;\n                var centerTarget = this.getCenterInScreen(targetClientRect);\n                var centerFrom = this.getCenterInScreen(openFromRect);\n                var centerTo = this.getCenterInScreen(closeToRect);\n                var translationFrom = {\n                    x: Math.round(centerFrom.cx - centerTarget.cx),\n                    y: Math.round(centerFrom.cy - centerTarget.cy),\n                    scaleX: Math.round(100 * Math.min(0.25, openFromRect.width / targetClientRect.width)) / 100,\n                    scaleY: Math.round(100 * Math.min(0.25, openFromRect.height / targetClientRect.height)) / 100\n                };\n                this.showAnimationStartStyle = {\n                    top: targetClientRect.top + \"px\",\n                    opacity: '0',\n                    transform: \"translate(\" + translationFrom.x + \"px, \" + translationFrom.y + \"px) scale(\" + translationFrom.scaleX + \", \" + translationFrom.scaleY + \")\"\n                };\n                var translationTo = {\n                    x: Math.round(centerTo.cx - centerTarget.cx),\n                    y: Math.round(centerTo.cy - centerTarget.cy),\n                    scaleX: Math.round(100 * Math.min(0.25, closeToRect.width / targetClientRect.width)) / 100,\n                    scaleY: Math.round(100 * Math.min(0.25, closeToRect.height / targetClientRect.height)) / 100\n                };\n                this.hideAnimationEndStyle = {\n                    top: targetClientRect.top + \"px\",\n                    opacity: '0',\n                    transform: \"translate(\" + translationTo.x + \"px, \" + translationTo.y + \"px) scale(\" + translationTo.scaleX + \", \" + translationTo.scaleY + \")\"\n                };\n            }\n            var animation = this.animations.animate(this.elementRef.nativeElement, [\n                this.showAnimationStartStyle,\n                this.showStyle\n            ], this.config.enterTransitionDuration || enterTransitionDuration, this.config.enterTransitionEasingCurve || enterTransitionEasingCurve);\n            animation.play();\n        }\n    };\n    MdlDialogHostComponent.prototype.hide = function (selfComponentRef) {\n        if (this.isAnimateEnabled()) {\n            var animation = this.animations.animate(this.elementRef.nativeElement, [\n                this.showStyle,\n                this.hideAnimationEndStyle\n            ], this.config.leaveTransitionDuration || leaveTransitionDuration, this.config.leaveTransitionEasingCurve || leaveTransitionEasingCurve);\n            animation.onDone(function () {\n                selfComponentRef.destroy();\n            });\n            animation.play();\n        }\n        else {\n            selfComponentRef.destroy();\n        }\n    };\n    MdlDialogHostComponent.prototype.ngOnInit = function () {\n        this.applyStyle(this.config.styles);\n        this.applyClasses(this.config.classes ? this.config.classes : '');\n    };\n    MdlDialogHostComponent.prototype.applyStyle = function (styles) {\n        if (styles) {\n            for (var style in styles) {\n                this.renderer.setStyle(this.elementRef.nativeElement, style, styles[style]);\n            }\n        }\n    };\n    MdlDialogHostComponent.prototype.applyClasses = function (classes) {\n        var _this = this;\n        classes.split(' ').filter(function (cssClass) { return !!cssClass; }).forEach(function (cssClass) {\n            _this.renderer.addClass(_this.elementRef.nativeElement, cssClass);\n        });\n    };\n    MdlDialogHostComponent.prototype.isAnimateEnabled = function () {\n        // not present?  assume it is true.\n        if (typeof this.config.animate === 'undefined') {\n            return true;\n        }\n        return this.config.animate;\n    };\n    MdlDialogHostComponent.prototype.getClientRect = function (input) {\n        if (input instanceof mdl_button_component_MdlButtonComponent) {\n            var elRef = input.elementRef;\n            var rect = elRef.nativeElement.getBoundingClientRect();\n            return this.createOpenCloseRect(rect);\n        }\n        else if (input instanceof MouseEvent) {\n            var evt = input;\n            // just to make it possible to test this code with a fake event - target is\n            // readonly and con not be mutated.\n            var htmlElement = (evt.target || evt['testtarget']);\n            var rect = htmlElement.getBoundingClientRect();\n            return this.createOpenCloseRect(rect);\n        }\n        return input;\n    };\n    MdlDialogHostComponent.prototype.createOpenCloseRect = function (rect) {\n        return {\n            height: rect.top - rect.bottom,\n            left: rect.left,\n            top: rect.top,\n            width: rect.right - rect.left\n        };\n    };\n    MdlDialogHostComponent.prototype.getCenterInScreen = function (rect) {\n        return {\n            cx: Math.round(rect.left + (rect.width / 2)),\n            cy: Math.round(rect.top + (rect.height / 2))\n        };\n    };\n    mdl_dialog_host_component_decorate([\n        Object(core_[\"ViewChild\"])('dialogTarget', { read: core_[\"ViewContainerRef\"] }),\n        mdl_dialog_host_component_metadata(\"design:type\", Object)\n    ], MdlDialogHostComponent.prototype, \"dialogTarget\", void 0);\n    MdlDialogHostComponent = mdl_dialog_host_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-dialog-host-component',\n            host: {\n                '[class.mdl-dialog]': 'true',\n                '[class.open]': 'visible',\n                '[style.zIndex]': 'zIndex',\n            },\n            template: \"<div #dialogTarget></div>\",\n            styles: [\n                \"\\n    mdl-dialog-host-component {\\n      width: -moz-fit-content;\\n      width: -webkit-fit-content;\\n      width: fit-content;\\n      height: -moz-fit-content;\\n      height: -webkit-fit-content;\\n      height: fit-content;\\n      padding: 1em;\\n      background: white;\\n      color: black;\\n      opacity: 1;\\n      visibility: hidden;\\n      display: block;\\n      position: fixed;\\n      margin: auto;\\n      left: 0;\\n      right: 0;\\n      transition: all;\\n      top: 50%;\\n      transform: translate(0, -50%);\\n    }\\n    \\n    mdl-dialog-host-component.open {\\n      visibility: visible;\\n    }\\n    \\n    \"\n            ],\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_dialog_host_component_param(4, Object(core_[\"Inject\"])(Object(core_[\"forwardRef\"])(function () { return MDL_CONFIGUARTION; }))),\n        mdl_dialog_host_component_metadata(\"design:paramtypes\", [core_[\"NgZone\"],\n            core_[\"Renderer2\"],\n            Animations,\n            core_[\"ElementRef\"], Object, internal_dialog_reference_InternalMdlDialogReference])\n    ], MdlDialogHostComponent);\n    return MdlDialogHostComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/dialog-outlet/mdl-dialog-outlet.component.ts\nvar mdl_dialog_outlet_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_dialog_outlet_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_dialog_outlet_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n// the componnet is used outside the app-root. injecting MdlDialogService would not work\n// this component is not exported - needs to be instanciated by\n//    let x = this.appRef.bootstrap(MdlDialogOutletComponent);\nvar mdl_dialog_outlet_component_MdlDialogOutletComponent = /** @class */ (function () {\n    function MdlDialogOutletComponent(vCRef) {\n        this.vCRef = vCRef;\n    }\n    Object.defineProperty(MdlDialogOutletComponent.prototype, \"viewContainerRef\", {\n        get: function () {\n            return this.vCRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdlDialogOutletComponent = mdl_dialog_outlet_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'dialog-outlet',\n            template: ''\n        }),\n        mdl_dialog_outlet_component_metadata(\"design:paramtypes\", [core_[\"ViewContainerRef\"]])\n    ], MdlDialogOutletComponent);\n    return MdlDialogOutletComponent;\n}());\n\n// the component is used inside the app-root. this is possible because this component\n// is exported from the module\nvar mdl_dialog_outlet_component_MdlDialogInnerOutletComponent = /** @class */ (function () {\n    function MdlDialogInnerOutletComponent(vCRef, service) {\n        this.vCRef = vCRef;\n        service.setDefaultViewContainerRef(vCRef);\n    }\n    MdlDialogInnerOutletComponent = mdl_dialog_outlet_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'dialog-outlet',\n            template: ''\n        }),\n        mdl_dialog_outlet_component_param(1, Object(core_[\"Inject\"])(Object(core_[\"forwardRef\"])(function () { return mdl_dialog_outlet_service_MdlDialogOutletService; }))),\n        mdl_dialog_outlet_component_metadata(\"design:paramtypes\", [core_[\"ViewContainerRef\"],\n            mdl_dialog_outlet_service_MdlDialogOutletService])\n    ], MdlDialogInnerOutletComponent);\n    return MdlDialogInnerOutletComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/dialog-outlet/mdl-backdrop-overlay.component.ts\nvar mdl_backdrop_overlay_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_backdrop_overlay_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar mdl_backdrop_overlay_component_MdlBackdropOverlayComponent = /** @class */ (function () {\n    function MdlBackdropOverlayComponent(ngZone) {\n        this.ngZone = ngZone;\n        this.clickEmitter = new core_[\"EventEmitter\"]();\n        this.visible = false;\n        this.zIndex = 0;\n    }\n    Object.defineProperty(MdlBackdropOverlayComponent.prototype, \"display\", {\n        get: function () {\n            return this.visible ? null : 'none';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdlBackdropOverlayComponent.prototype.onBackdropClick = function (e) {\n        var _this = this;\n        // this event runs not in angular zone of the main app. make sure it runs in the main angular zone\n        // and change detection works\n        this.ngZone.run(function () {\n            _this.clickEmitter.emit();\n        });\n        e.stopPropagation();\n    };\n    MdlBackdropOverlayComponent.prototype.hide = function () {\n        this.visible = false;\n    };\n    MdlBackdropOverlayComponent.prototype.showWithZIndex = function (zIndex) {\n        this.zIndex = zIndex;\n        this.visible = true;\n    };\n    mdl_backdrop_overlay_component_decorate([\n        Object(core_[\"HostBinding\"])('style.display'),\n        mdl_backdrop_overlay_component_metadata(\"design:type\", Object),\n        mdl_backdrop_overlay_component_metadata(\"design:paramtypes\", [])\n    ], MdlBackdropOverlayComponent.prototype, \"display\", null);\n    mdl_backdrop_overlay_component_decorate([\n        Object(core_[\"HostBinding\"])('style.zIndex'),\n        mdl_backdrop_overlay_component_metadata(\"design:type\", Object)\n    ], MdlBackdropOverlayComponent.prototype, \"zIndex\", void 0);\n    mdl_backdrop_overlay_component_decorate([\n        Object(core_[\"HostListener\"])('click', ['$event']),\n        mdl_backdrop_overlay_component_metadata(\"design:type\", Function),\n        mdl_backdrop_overlay_component_metadata(\"design:paramtypes\", [Object]),\n        mdl_backdrop_overlay_component_metadata(\"design:returntype\", void 0)\n    ], MdlBackdropOverlayComponent.prototype, \"onBackdropClick\", null);\n    MdlBackdropOverlayComponent = mdl_backdrop_overlay_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-backdrop-overlay',\n            host: {\n                '[class.dialog-backdrop]': 'true',\n            },\n            template: \"\",\n            styles: [\n                \"    \\n      .dialog-backdrop {\\n        position: fixed;\\n        top: 0; right: 0; bottom: 0; left: 0;\\n        background: rgba(0,0,0,0.1);\\n      }\\n    \"\n            ],\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_backdrop_overlay_component_metadata(\"design:paramtypes\", [core_[\"NgZone\"]])\n    ], MdlBackdropOverlayComponent);\n    return MdlBackdropOverlayComponent;\n}());\n\n\n// EXTERNAL MODULE: external {\"root\":[\"rxjs\",\"operators\"],\"commonjs\":\"rxjs/operators\",\"commonjs2\":\"rxjs/operators\",\"amd\":\"rxjs/operators\"}\nvar operators_ = __webpack_require__(\"rxjs/operators\");\n\n// CONCATENATED MODULE: ./src/lib/components/dialog-outlet/mdl-dialog-outlet.service.ts\nvar mdl_dialog_outlet_service_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_dialog_outlet_service_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\nvar mdl_dialog_outlet_service_MdlDialogOutletService = /** @class */ (function () {\n    function MdlDialogOutletService(appRef, componentFactoryResolver, ngZone) {\n        var _this = this;\n        this.appRef = appRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.backdropClickEmitter = new core_[\"EventEmitter\"]();\n        var dialogOutletCompRef = null;\n        ngZone.onStable.pipe(Object(operators_[\"take\"])(1)).subscribe(function () {\n            try {\n                dialogOutletCompRef = _this.appRef.bootstrap(mdl_dialog_outlet_component_MdlDialogOutletComponent);\n            }\n            catch (e) {\n                // the user did not use the dialog.outlet element outside of his root app.\n                // console.log(e);\n            }\n            if (dialogOutletCompRef) {\n                _this.setViewContainerRef(dialogOutletCompRef.instance.viewContainerRef);\n            }\n        });\n    }\n    MdlDialogOutletService.prototype.setDefaultViewContainerRef = function (vCRef) {\n        this.setViewContainerRef(vCRef);\n    };\n    Object.defineProperty(MdlDialogOutletService.prototype, \"viewContainerRef\", {\n        get: function () {\n            return this.viewContainerRef_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdlDialogOutletService.prototype.setViewContainerRef = function (value) {\n        var _this = this;\n        this.viewContainerRef_ = value;\n        if (this.viewContainerRef_) {\n            var cFactory = this.componentFactoryResolver.resolveComponentFactory(mdl_backdrop_overlay_component_MdlBackdropOverlayComponent);\n            this.backdropComponent = this.viewContainerRef_.createComponent(cFactory).instance;\n            this.backdropComponent.clickEmitter.subscribe(function () {\n                _this.backdropClickEmitter.emit();\n            });\n        }\n    };\n    MdlDialogOutletService.prototype.hideBackdrop = function () {\n        this.backdropComponent.hide();\n    };\n    MdlDialogOutletService.prototype.showBackdropWithZIndex = function (zIndex) {\n        this.backdropComponent.showWithZIndex(zIndex);\n    };\n    MdlDialogOutletService = mdl_dialog_outlet_service_decorate([\n        Object(core_[\"Injectable\"])(),\n        mdl_dialog_outlet_service_metadata(\"design:paramtypes\", [core_[\"ApplicationRef\"],\n            core_[\"ComponentFactoryResolver\"],\n            core_[\"NgZone\"]])\n    ], MdlDialogOutletService);\n    return MdlDialogOutletService;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/dialog/mdl-dialog.service.ts\nvar mdl_dialog_service_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_dialog_service_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_dialog_service_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\n\n\n\nvar MDL_CONFIGUARTION = new core_[\"InjectionToken\"]('MDL_CONFIGUARTION');\nvar MIN_DIALOG_Z_INDEX = 100000;\n/**\n * The reference to the created and displayed dialog.\n */\nvar MdlDialogReference = /** @class */ (function () {\n    function MdlDialogReference(internaleRef) {\n        this.internaleRef = internaleRef;\n        internaleRef.dialogRef = this;\n    }\n    /**\n     * closes the dialog\n     */\n    MdlDialogReference.prototype.hide = function (data) {\n        this.internaleRef.hide(data);\n    };\n    /**\n     * Observable that emits, if the dialog was closed.\n     * @returns {Observable<void>}\n     */\n    MdlDialogReference.prototype.onHide = function () {\n        return this.internaleRef.onHide();\n    };\n    /**\n     * Observable that emits, if the dialog is really visible and not only created.\n     * @returns {Observable<void>}\n     */\n    MdlDialogReference.prototype.onVisible = function () {\n        return this.internaleRef.onVisible();\n    };\n    return MdlDialogReference;\n}());\n\n/**\n * The MdlDialogService is used to open different kind of dialogs. SimpleDialogs and Custom Dialogs.\n * @experimental\n  */\nvar mdl_dialog_service_MdlDialogService = /** @class */ (function () {\n    function MdlDialogService(componentFactoryResolver, doc, appRef, mdlDialogOutletService) {\n        var _this = this;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.doc = doc;\n        this.appRef = appRef;\n        this.mdlDialogOutletService = mdlDialogOutletService;\n        this.openDialogs = new Array();\n        /**\n         * Emits an event when either all modals are closed, or one gets opened.\n         * @returns A subscribable event emitter that provides a boolean indicating whether a modal is open or not.\n         */\n        this.onDialogsOpenChanged = new core_[\"EventEmitter\"]();\n        this.mdlDialogOutletService.backdropClickEmitter.subscribe(function () {\n            _this.onBackdropClick();\n        });\n    }\n    /**\n     * Shows a dialog that is just an alert - e.g. with one button.\n     * @param alertMessage The message that should be displayed.\n     * @param okText The text that the button should have\n     * @param title The optional title of the dialog\n     * @returns An Observable that is called if the user hits the Ok button.\n     */\n    MdlDialogService.prototype.alert = function (alertMessage, okText, title) {\n        if (okText === void 0) { okText = 'Ok'; }\n        var result = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"Subject\"]();\n        this.showDialog({\n            title: title,\n            message: alertMessage,\n            actions: [\n                { handler: function () {\n                        result.next(null);\n                        result.complete();\n                    }, text: okText }\n            ],\n            isModal: true\n        });\n        return result;\n    };\n    /**\n     * Shows a dialog that is just a confirm message - e.g. with two button.\n     * @param question The question that should be displayed.\n     * @param title The title that should be displayed on top of Question.\n     * @param declineText The text for decline button. defaults to Cancel\n     * @param confirmText The text for the confirm button . defaults to Ok\n     * @returns An Observable that is called if the user hits the Ok button.\n     */\n    MdlDialogService.prototype.confirm = function (question, declineText, confirmText, title) {\n        if (declineText === void 0) { declineText = 'Cancel'; }\n        if (confirmText === void 0) { confirmText = 'Ok'; }\n        var result = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"Subject\"]();\n        this.showDialog({\n            title: title,\n            message: question,\n            actions: [\n                {\n                    handler: function () {\n                        result.next(null);\n                        result.complete();\n                    }, text: confirmText\n                },\n                {\n                    handler: function () {\n                        result.error(null);\n                    }, text: declineText, isClosingAction: true\n                }\n            ],\n            isModal: true\n        });\n        return result.asObservable();\n    };\n    /**\n     * Shows a dialog that is specified by the provided configuration.\n     * @param config The simple dialog configuration.\n     * @returns An Observable that returns the MdlDialogReference.\n     */\n    MdlDialogService.prototype.showDialog = function (config) {\n        if (config.actions.length === 0) {\n            throw new Error('a dialog mus have at least one action');\n        }\n        var internalDialogRef = new internal_dialog_reference_InternalMdlDialogReference(config);\n        var providers = [\n            { provide: MdlDialogReference, useValue: new MdlDialogReference(internalDialogRef) },\n            { provide: MDL_CONFIGUARTION, useValue: config }\n        ];\n        var hostComponentRef = this.createHostDialog(internalDialogRef, config);\n        var cRef = this.createComponentInstance(hostComponentRef.instance.dialogTarget, providers, mdl_simple_dialog_component_MdlSimpleDialogComponent);\n        return this.showHostDialog(internalDialogRef.dialogRef, hostComponentRef);\n    };\n    /**\n     * Shows a dialog that is specified by the provided configuration.\n     * @param config The custom dialog configuration.\n     * @returns An Observable that returns the MdlDialogReference.\n     */\n    MdlDialogService.prototype.showCustomDialog = function (config) {\n        var internalDialogRef = new internal_dialog_reference_InternalMdlDialogReference(config);\n        var providers = [\n            { provide: MdlDialogReference, useValue: new MdlDialogReference(internalDialogRef) }\n        ];\n        if (config.providers) {\n            providers.push.apply(providers, config.providers);\n        }\n        var hostComponentRef = this.createHostDialog(internalDialogRef, config);\n        this.createComponentInstance(hostComponentRef.instance.dialogTarget, providers, config.component);\n        return this.showHostDialog(internalDialogRef.dialogRef, hostComponentRef);\n    };\n    MdlDialogService.prototype.showDialogTemplate = function (template, config) {\n        var internalDialogRef = new internal_dialog_reference_InternalMdlDialogReference(config);\n        var hostComponentRef = this.createHostDialog(internalDialogRef, config);\n        hostComponentRef.instance.dialogTarget.createEmbeddedView(template);\n        return this.showHostDialog(internalDialogRef.dialogRef, hostComponentRef);\n    };\n    MdlDialogService.prototype.showHostDialog = function (dialogRef, hostComponentRef) {\n        var result = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"Subject\"]();\n        setTimeout(function () {\n            result.next(dialogRef);\n            result.complete();\n            hostComponentRef.instance.show();\n        });\n        return result.asObservable();\n    };\n    MdlDialogService.prototype.createHostDialog = function (internalDialogRef, dialogConfig) {\n        var _this = this;\n        var viewContainerRef = this.mdlDialogOutletService.viewContainerRef;\n        if (!viewContainerRef) {\n            throw new Error('You did not provide a ViewContainerRef. ' +\n                'Please see https://github.com/mseemann/angular2-mdl/wiki/How-to-use-the-MdlDialogService');\n        }\n        var providers = [\n            { provide: MDL_CONFIGUARTION, useValue: dialogConfig },\n            { provide: internal_dialog_reference_InternalMdlDialogReference, useValue: internalDialogRef }\n        ];\n        var hostDialogComponent = this.createComponentInstance(viewContainerRef, providers, mdl_dialog_host_component_MdlDialogHostComponent);\n        internalDialogRef.hostDialogComponentRef = hostDialogComponent;\n        internalDialogRef.isModal = dialogConfig.isModal;\n        internalDialogRef.closeCallback = function () {\n            _this.popDialog(internalDialogRef);\n            hostDialogComponent.instance.hide(hostDialogComponent);\n        };\n        this.pushDialog(internalDialogRef);\n        return hostDialogComponent;\n    };\n    MdlDialogService.prototype.pushDialog = function (dialogRef) {\n        if (this.openDialogs.length == 0) { // first dialog being opened\n            this.onDialogsOpenChanged.emit(true);\n        }\n        this.openDialogs.push(dialogRef);\n        this.orderDialogStack();\n    };\n    MdlDialogService.prototype.popDialog = function (dialogRef) {\n        this.openDialogs.splice(this.openDialogs.indexOf(dialogRef), 1);\n        this.orderDialogStack();\n        if (this.openDialogs.length == 0) { // last dialog being closed\n            this.onDialogsOpenChanged.emit(false);\n        }\n    };\n    MdlDialogService.prototype.orderDialogStack = function () {\n        // +1 because the overlay may have MIN_DIALOG_Z_INDEX if the dialog is modal.\n        var zIndex = MIN_DIALOG_Z_INDEX + 1;\n        this.openDialogs.forEach(function (iDialogRef) {\n            iDialogRef.hostDialog.zIndex = zIndex;\n            // +2 to make room for the overlay if a dialog is modal\n            zIndex += 2;\n        });\n        this.mdlDialogOutletService.hideBackdrop();\n        // if there is a modal dialog append the overloay to the dom - if not remove the overlay from the body\n        var topMostModalDialog = this.getTopMostInternalDialogRef();\n        if (topMostModalDialog) {\n            // move the overlay diredct under the topmos modal dialog\n            this.mdlDialogOutletService.showBackdropWithZIndex(topMostModalDialog.hostDialog.zIndex - 1);\n        }\n    };\n    MdlDialogService.prototype.getTopMostInternalDialogRef = function () {\n        var topMostModalDialog = null;\n        for (var i = (this.openDialogs.length - 1); i >= 0; i--) {\n            if (this.openDialogs[i].isModal) {\n                topMostModalDialog = this.openDialogs[i];\n                break;\n            }\n        }\n        return topMostModalDialog;\n    };\n    MdlDialogService.prototype.onBackdropClick = function () {\n        var topMostModalDialog = this.getTopMostInternalDialogRef();\n        if (topMostModalDialog.config.clickOutsideToClose) {\n            topMostModalDialog.hide();\n        }\n    };\n    MdlDialogService.prototype.createComponentInstance = function (viewContainerRef, providers, component) {\n        var cFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n        var resolvedProviders = core_[\"ReflectiveInjector\"].resolve(providers);\n        var parentInjector = viewContainerRef.parentInjector;\n        var childInjector = core_[\"ReflectiveInjector\"].fromResolvedProviders(resolvedProviders, parentInjector);\n        return viewContainerRef.createComponent(cFactory, viewContainerRef.length, childInjector);\n    };\n    MdlDialogService = mdl_dialog_service_decorate([\n        Object(core_[\"Injectable\"])(),\n        mdl_dialog_service_param(1, Object(core_[\"Inject\"])(common_[\"DOCUMENT\"])),\n        mdl_dialog_service_metadata(\"design:paramtypes\", [core_[\"ComponentFactoryResolver\"], Object, core_[\"ApplicationRef\"],\n            mdl_dialog_outlet_service_MdlDialogOutletService])\n    ], MdlDialogService);\n    return MdlDialogService;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/dialog/mdl-dialog.component.ts\nvar mdl_dialog_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_dialog_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\nvar mdl_dialog_component_MdlDialogComponent = /** @class */ (function () {\n    function MdlDialogComponent(dialogService) {\n        this.dialogService = dialogService;\n        this.showEmitter = new core_[\"EventEmitter\"]();\n        this.hideEmitter = new core_[\"EventEmitter\"]();\n        this.isShown = false;\n        this.dialogRef = null;\n    }\n    Object.defineProperty(MdlDialogComponent.prototype, \"modal\", {\n        get: function () { return this._modal; },\n        set: function (value) { this._modal = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlDialogComponent.prototype.show = function () {\n        var _this = this;\n        if (this.isShown) {\n            throw new Error('Only one instance of an embedded mdl-dialog can exist!');\n        }\n        this.isShown = true;\n        var mergedConfig = this.config || {};\n        // mdl-modal overwrites config.isModal if present\n        mergedConfig.isModal = typeof this.modal !== 'undefined' ? this.modal : mergedConfig.isModal;\n        // default is true\n        if (typeof mergedConfig.isModal === 'undefined') {\n            mergedConfig.isModal = true;\n        }\n        var result = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"Subject\"]();\n        var p = this.dialogService.showDialogTemplate(this.template, mergedConfig);\n        p.subscribe(function (dialogRef) {\n            _this.dialogRef = dialogRef;\n            _this.dialogRef.onVisible().subscribe(function () {\n                _this.showEmitter.emit(dialogRef);\n                result.next(dialogRef);\n                result.complete();\n            });\n            _this.dialogRef.onHide().subscribe(function () {\n                _this.hideEmitter.emit(null);\n                _this.dialogRef = null;\n                _this.isShown = false;\n            });\n        });\n        return result.asObservable();\n    };\n    MdlDialogComponent.prototype.close = function () {\n        if (this.dialogRef) {\n            this.dialogRef.hide();\n        }\n    };\n    mdl_dialog_component_decorate([\n        Object(core_[\"ViewChild\"])(core_[\"TemplateRef\"]),\n        mdl_dialog_component_metadata(\"design:type\", core_[\"TemplateRef\"])\n    ], MdlDialogComponent.prototype, \"template\", void 0);\n    mdl_dialog_component_decorate([\n        Object(core_[\"Input\"])('mdl-modal'),\n        mdl_dialog_component_metadata(\"design:type\", Boolean),\n        mdl_dialog_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlDialogComponent.prototype, \"modal\", null);\n    mdl_dialog_component_decorate([\n        Object(core_[\"Input\"])('mdl-dialog-config'),\n        mdl_dialog_component_metadata(\"design:type\", Object)\n    ], MdlDialogComponent.prototype, \"config\", void 0);\n    mdl_dialog_component_decorate([\n        Object(core_[\"Output\"])('show'),\n        mdl_dialog_component_metadata(\"design:type\", core_[\"EventEmitter\"])\n    ], MdlDialogComponent.prototype, \"showEmitter\", void 0);\n    mdl_dialog_component_decorate([\n        Object(core_[\"Output\"])('hide'),\n        mdl_dialog_component_metadata(\"design:type\", core_[\"EventEmitter\"])\n    ], MdlDialogComponent.prototype, \"hideEmitter\", void 0);\n    MdlDialogComponent = mdl_dialog_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-dialog',\n            template: \"\\n    <div *dialogTemplate>\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_dialog_component_metadata(\"design:paramtypes\", [mdl_dialog_service_MdlDialogService])\n    ], MdlDialogComponent);\n    return MdlDialogComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/common/append-view-container-ref-directive.ts\nvar append_view_container_ref_directive_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar append_view_container_ref_directive_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar append_view_container_ref_directive_AppendViewContainerRefDirective = /** @class */ (function () {\n    function AppendViewContainerRefDirective(viewRef, renderer) {\n        this.viewRef = viewRef;\n        this.renderer = renderer;\n    }\n    AppendViewContainerRefDirective.prototype.ngAfterViewInit = function () {\n        this.renderer.appendChild(this.viewRef.element.nativeElement, this.viewContainerRefToAppend.element.nativeElement);\n    };\n    append_view_container_ref_directive_decorate([\n        Object(core_[\"Input\"])('append-view-container-ref'),\n        append_view_container_ref_directive_metadata(\"design:type\", core_[\"ViewContainerRef\"])\n    ], AppendViewContainerRefDirective.prototype, \"viewContainerRefToAppend\", void 0);\n    AppendViewContainerRefDirective = append_view_container_ref_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[append-view-container-ref]'\n        }),\n        append_view_container_ref_directive_metadata(\"design:paramtypes\", [core_[\"ViewContainerRef\"], core_[\"Renderer2\"]])\n    ], AppendViewContainerRefDirective);\n    return AppendViewContainerRefDirective;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/common/index.ts\nvar common_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\nfunction isWebAnimationsSupported() {\n    return typeof Element !== 'undefined' && typeof Element.prototype['animate'] === 'function';\n}\nfunction instantiateSupportedAnimationDriver() {\n    /* istanbul ignore next */\n    if (isWebAnimationsSupported()) {\n        return new NativeWebAnimations();\n    }\n    /* istanbul ignore next */\n    return new NoopWebAnimations();\n}\nvar common_MdlCommonsModule = /** @class */ (function () {\n    function MdlCommonsModule() {\n    }\n    MdlCommonsModule = common_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: [append_view_container_ref_directive_AppendViewContainerRefDirective],\n            declarations: [append_view_container_ref_directive_AppendViewContainerRefDirective],\n            providers: [\n                { provide: Animations, useFactory: instantiateSupportedAnimationDriver }\n            ]\n        })\n    ], MdlCommonsModule);\n    return MdlCommonsModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/dialog/mdl-alert.component.ts\nvar mdl_alert_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_alert_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar mdl_alert_component_MdlAlertComponent = /** @class */ (function () {\n    function MdlAlertComponent(mdlDialogService) {\n        this.mdlDialogService = mdlDialogService;\n        this.confirmed = new core_[\"EventEmitter\"]();\n    }\n    MdlAlertComponent.prototype.show = function () {\n        var _this = this;\n        this.mdlDialogService.alert(this.message, this.okText, this.title).subscribe(function () {\n            _this.confirmed.emit();\n        });\n    };\n    mdl_alert_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_alert_component_metadata(\"design:type\", String)\n    ], MdlAlertComponent.prototype, \"title\", void 0);\n    mdl_alert_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_alert_component_metadata(\"design:type\", String)\n    ], MdlAlertComponent.prototype, \"message\", void 0);\n    mdl_alert_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_alert_component_metadata(\"design:type\", String)\n    ], MdlAlertComponent.prototype, \"okText\", void 0);\n    mdl_alert_component_decorate([\n        Object(core_[\"Output\"])(),\n        mdl_alert_component_metadata(\"design:type\", Object)\n    ], MdlAlertComponent.prototype, \"confirmed\", void 0);\n    MdlAlertComponent = mdl_alert_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-alert',\n            host: {\n                '[style.display]': '\"none\"'\n            },\n            template: \"\\n  \",\n            exportAs: 'mdlAlert'\n        }),\n        mdl_alert_component_metadata(\"design:paramtypes\", [mdl_dialog_service_MdlDialogService])\n    ], MdlAlertComponent);\n    return MdlAlertComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/dialog-outlet/index.ts\nvar dialog_outlet_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\nvar PUBLIC_COMPONENTS = [\n    mdl_dialog_outlet_component_MdlDialogInnerOutletComponent\n];\nvar PRIVATE_COMPONENTS = [\n    mdl_dialog_outlet_component_MdlDialogOutletComponent,\n    mdl_backdrop_overlay_component_MdlBackdropOverlayComponent\n];\nvar dialog_outlet_MdlDialogOutletModule = /** @class */ (function () {\n    function MdlDialogOutletModule() {\n    }\n    MdlDialogOutletModule_1 = MdlDialogOutletModule;\n    MdlDialogOutletModule.forRoot = function () {\n        return {\n            ngModule: MdlDialogOutletModule_1,\n            providers: [mdl_dialog_outlet_service_MdlDialogOutletService]\n        };\n    };\n    var MdlDialogOutletModule_1;\n    MdlDialogOutletModule = MdlDialogOutletModule_1 = dialog_outlet_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: PUBLIC_COMPONENTS,\n            declarations: PUBLIC_COMPONENTS.concat(PRIVATE_COMPONENTS),\n            entryComponents: [\n                mdl_dialog_outlet_component_MdlDialogOutletComponent,\n                mdl_backdrop_overlay_component_MdlBackdropOverlayComponent\n            ]\n        })\n    ], MdlDialogOutletModule);\n    return MdlDialogOutletModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/dialog/index.ts\nvar dialog_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar dialog_PUBLIC_COMPONENTS = [\n    mdl_dialog_component_MdlDialogComponent,\n    mdl_alert_component_MdlAlertComponent\n];\nvar dialog_PRIVATE_COMPONENTS = [\n    mdl_dialog_host_component_MdlDialogHostComponent,\n    mdl_simple_dialog_component_MdlSimpleDialogComponent\n];\nvar dialog_MdlDialogModule = /** @class */ (function () {\n    function MdlDialogModule() {\n    }\n    MdlDialogModule_1 = MdlDialogModule;\n    MdlDialogModule.forRoot = function () {\n        return {\n            ngModule: MdlDialogModule_1,\n            providers: [\n                mdl_dialog_service_MdlDialogService,\n                mdl_dialog_outlet_service_MdlDialogOutletService\n            ]\n        };\n    };\n    var MdlDialogModule_1;\n    MdlDialogModule = MdlDialogModule_1 = dialog_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [\n                common_[\"CommonModule\"],\n                common_MdlCommonsModule,\n                mdl_button_component_MdlButtonModule,\n                dialog_outlet_MdlDialogOutletModule\n            ],\n            exports: dialog_PUBLIC_COMPONENTS.slice(),\n            declarations: dialog_PUBLIC_COMPONENTS.concat(dialog_PRIVATE_COMPONENTS),\n            entryComponents: dialog_PUBLIC_COMPONENTS.concat(dialog_PRIVATE_COMPONENTS)\n        })\n    ], MdlDialogModule);\n    return MdlDialogModule;\n}());\n\n\n// EXTERNAL MODULE: external {\"root\":[\"ng\",\"forms\"],\"commonjs\":\"@angular/forms\",\"commonjs2\":\"@angular/forms\",\"amd\":\"@angular/forms\"}\nvar forms_ = __webpack_require__(\"@angular/forms\");\n\n// CONCATENATED MODULE: ./src/lib/components/common/noop.ts\n/* istanbul ignore next */\nvar noop = function (_) { };\n\n// CONCATENATED MODULE: ./src/lib/components/checkbox/mdl-checkbox.component.ts\nvar mdl_checkbox_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_checkbox_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\nvar IS_FOCUSED = 'is-focused';\nvar CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {\n    provide: forms_[\"NG_VALUE_ACCESSOR\"],\n    useExisting: Object(core_[\"forwardRef\"])(function () { return mdl_checkbox_component_MdlCheckboxComponent; }),\n    multi: true\n};\nvar mdl_checkbox_component_MdlCheckboxComponent = /** @class */ (function () {\n    function MdlCheckboxComponent(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this._disabled = false;\n        this.tabindex = null;\n        this.change = new core_[\"EventEmitter\"]();\n        this.value_ = false;\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this.el = elementRef.nativeElement;\n    }\n    Object.defineProperty(MdlCheckboxComponent.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlCheckboxComponent.prototype, \"value\", {\n        get: function () { return this.value_; },\n        set: function (v) {\n            this.value_ = v;\n            this.onChangeCallback(v);\n            this.change.emit(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    MdlCheckboxComponent.prototype.writeValue = function (value) {\n        this.value_ = value;\n    };\n    MdlCheckboxComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    MdlCheckboxComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    MdlCheckboxComponent.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    MdlCheckboxComponent.prototype.onFocus = function () {\n        this.renderer.addClass(this.el, IS_FOCUSED);\n    };\n    MdlCheckboxComponent.prototype.onBlur = function () {\n        this.renderer.removeClass(this.el, IS_FOCUSED);\n        this.onTouchedCallback();\n    };\n    MdlCheckboxComponent.prototype.onClick = function () {\n        if (this.disabled) {\n            return;\n        }\n        this.value = !this.value;\n    };\n    mdl_checkbox_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_checkbox_component_metadata(\"design:type\", Boolean),\n        mdl_checkbox_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlCheckboxComponent.prototype, \"disabled\", null);\n    mdl_checkbox_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_checkbox_component_metadata(\"design:type\", Number)\n    ], MdlCheckboxComponent.prototype, \"tabindex\", void 0);\n    MdlCheckboxComponent = mdl_checkbox_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-checkbox',\n            providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n            host: {\n                '(click)': 'onClick()',\n                '[class.mdl-checkbox]': 'true',\n                '[class.is-upgraded]': 'true',\n                '[class.is-checked]': 'value',\n                '[class.is-disabled]': 'disabled'\n            },\n            template: \"\\n  <input type=\\\"checkbox\\\" class=\\\"mdl-checkbox__input\\\" \\n    (focus)=\\\"onFocus()\\\" \\n    (blur)=\\\"onBlur()\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.tabindex]=\\\"tabindex\\\"\\n    [ngModel]=\\\"value\\\">\\n  <span class=\\\"mdl-checkbox__label\\\"><ng-content></ng-content></span>\\n  <span class=\\\"mdl-checkbox__focus-helper\\\"></span>\\n  <span class=\\\"mdl-checkbox__box-outline\\\">\\n    <span class=\\\"mdl-checkbox__tick-outline\\\"></span>\\n  </span>\\n  \",\n            inputs: ['value'],\n            outputs: ['change'],\n            encapsulation: core_[\"ViewEncapsulation\"].None,\n            changeDetection: core_[\"ChangeDetectionStrategy\"].OnPush\n        }),\n        mdl_checkbox_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlCheckboxComponent);\n    return MdlCheckboxComponent;\n}());\n\nvar MDL_CHECKBOX_DIRECTIVES = [mdl_checkbox_component_MdlCheckboxComponent];\nvar mdl_checkbox_component_MdlCheckboxModule = /** @class */ (function () {\n    function MdlCheckboxModule() {\n    }\n    MdlCheckboxModule_1 = MdlCheckboxModule;\n    MdlCheckboxModule.forRoot = function () {\n        return {\n            ngModule: MdlCheckboxModule_1,\n            providers: []\n        };\n    };\n    var MdlCheckboxModule_1;\n    MdlCheckboxModule = MdlCheckboxModule_1 = mdl_checkbox_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [common_[\"CommonModule\"], forms_[\"FormsModule\"]],\n            exports: MDL_CHECKBOX_DIRECTIVES,\n            declarations: MDL_CHECKBOX_DIRECTIVES,\n        })\n    ], MdlCheckboxModule);\n    return MdlCheckboxModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/radio/mdl-radio.component.ts\nvar mdl_radio_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_radio_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_radio_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\n\nvar mdl_radio_component_IS_FOCUSED = 'is-focused';\n// Registry for mdl-readio compnents. Is responsible to keep the\n// right state of the radio buttons of a radio group. It would be\n// easier if i had a mdl-radio-group component. but this would be\n// a big braking change.\nvar mdl_radio_component_MdlRadioGroupRegisty = /** @class */ (function () {\n    function MdlRadioGroupRegisty() {\n        this.defaultFormGroup = 'defaultFromGroup';\n        this.radioComponents = [];\n    }\n    MdlRadioGroupRegisty.prototype.add = function (radioComponent, formGroupName) {\n        this.radioComponents.push({\n            radio: radioComponent,\n            group: formGroupName || this.defaultFormGroup\n        });\n    };\n    MdlRadioGroupRegisty.prototype.remove = function (radioComponent) {\n        this.radioComponents = this.radioComponents.filter(function (radioComponentInArray) {\n            return (radioComponentInArray.radio !== radioComponent);\n        });\n    };\n    MdlRadioGroupRegisty.prototype.select = function (radioComponent, formGroupName) {\n        // unselect every radioComponent that is not the provided radiocomponent\n        // and has the same name and is in teh same group.\n        var groupToTest = formGroupName || this.defaultFormGroup;\n        this.radioComponents.forEach(function (component) {\n            if (component.radio.name === radioComponent.name && component.group === groupToTest) {\n                if (component.radio !== radioComponent) {\n                    component.radio.deselect(radioComponent.value);\n                }\n            }\n        });\n    };\n    MdlRadioGroupRegisty = mdl_radio_component_decorate([\n        Object(core_[\"Injectable\"])()\n    ], MdlRadioGroupRegisty);\n    return MdlRadioGroupRegisty;\n}());\n\n/*\n <mdl-radio name=\"group1\" value=\"1\" [(ngModel)]=\"radioOption\">Value 1</mdl-radio>\n */\nvar mdl_radio_component_MdlRadioComponent = /** @class */ (function () {\n    function MdlRadioComponent(elementRef, renderer, radioGroupRegistry, formGroupName) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.radioGroupRegistry = radioGroupRegistry;\n        this.formGroupName = formGroupName;\n        this._disabled = false;\n        this.tabindex = null;\n        this.change = new core_[\"EventEmitter\"]();\n        // the internal state - used to set the underlaying radio button state.\n        this.checked = false;\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this.el = elementRef.nativeElement;\n    }\n    MdlRadioComponent_1 = MdlRadioComponent;\n    Object.defineProperty(MdlRadioComponent.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlRadioComponent.prototype.ngOnInit = function () {\n        // we need a name and it must be the same as in the formcontrol.\n        // a radio group without name is useless.\n        this.checkName();\n        // register the radio button - this is the only chance to unselect the\n        // radio button that is no longer active - scope the radio button with it's group\n        // if there is one.\n        this.radioGroupRegistry.add(this, this.formGroupName);\n    };\n    MdlRadioComponent.prototype.ngOnDestroy = function () {\n        this.radioGroupRegistry.remove(this);\n    };\n    MdlRadioComponent.prototype.writeValue = function (optionValue) {\n        this.optionValue = optionValue;\n        this.updateCheckState();\n    };\n    MdlRadioComponent.prototype.deselect = function (value) {\n        // called from the registry. the value is the value of the selected radio button\n        // e.g. the radio button get unselected if it isnÄt the selected one.\n        this.writeValue(value);\n    };\n    MdlRadioComponent.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        // wrap the callback, so that we can call select on the registry\n        this.onChangeCallback = function () {\n            fn(_this.value);\n            _this.radioGroupRegistry.select(_this, _this.formGroupName);\n        };\n    };\n    MdlRadioComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    MdlRadioComponent.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    MdlRadioComponent.prototype.onFocus = function () {\n        this.renderer.addClass(this.el, mdl_radio_component_IS_FOCUSED);\n    };\n    MdlRadioComponent.prototype.onBlur = function () {\n        this.renderer.removeClass(this.el, mdl_radio_component_IS_FOCUSED);\n    };\n    MdlRadioComponent.prototype.onClick = function () {\n        if (this.disabled) {\n            return;\n        }\n        this.optionValue = this.value;\n        this.updateCheckState();\n        this.onChangeCallback();\n        this.change.emit(this.optionValue);\n    };\n    MdlRadioComponent.prototype.updateCheckState = function () {\n        this.checked = this.optionValue === this.value;\n    };\n    MdlRadioComponent.prototype.checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this.throwNameError();\n        }\n        if (!this.name && this.formControlName) {\n            this.name = this.formControlName;\n        }\n    };\n    MdlRadioComponent.prototype.throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <mdl-radio formControlName=\\\"food\\\" name=\\\"food\\\"></mdl-radio>\\n    \");\n    };\n    MdlRadioComponent.prototype.spaceKeyPress = function (event) {\n        this.checked = false; //in case of space key is pressed radio button value must remain same\n    };\n    var MdlRadioComponent_1;\n    mdl_radio_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_radio_component_metadata(\"design:type\", String)\n    ], MdlRadioComponent.prototype, \"name\", void 0);\n    mdl_radio_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_radio_component_metadata(\"design:type\", String)\n    ], MdlRadioComponent.prototype, \"formControlName\", void 0);\n    mdl_radio_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_radio_component_metadata(\"design:type\", Object)\n    ], MdlRadioComponent.prototype, \"value\", void 0);\n    mdl_radio_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_radio_component_metadata(\"design:type\", Boolean),\n        mdl_radio_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlRadioComponent.prototype, \"disabled\", null);\n    mdl_radio_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_radio_component_metadata(\"design:type\", Object)\n    ], MdlRadioComponent.prototype, \"tabindex\", void 0);\n    mdl_radio_component_decorate([\n        Object(core_[\"Output\"])(),\n        mdl_radio_component_metadata(\"design:type\", core_[\"EventEmitter\"])\n    ], MdlRadioComponent.prototype, \"change\", void 0);\n    MdlRadioComponent = MdlRadioComponent_1 = mdl_radio_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-radio',\n            providers: [{\n                    provide: forms_[\"NG_VALUE_ACCESSOR\"],\n                    useExisting: Object(core_[\"forwardRef\"])(function () { return MdlRadioComponent_1; }),\n                    multi: true\n                }],\n            host: {\n                '(click)': 'onClick()',\n                '[class.mdl-radio]': 'true',\n                '[class.is-upgraded]': 'true',\n                '[class.is-checked]': 'checked',\n                '[class.is-disabled]': 'disabled'\n            },\n            template: \"\\n  <input type=\\\"checkbox\\\" class=\\\"mdl-radio__button\\\" \\n    [attr.name]=\\\"name\\\"\\n    (focus)=\\\"onFocus()\\\" \\n    (blur)=\\\"onBlur()\\\"\\n    (keyup.space)=\\\"spaceKeyPress($event)\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.tabindex]=\\\"tabindex\\\"\\n    [(ngModel)]=\\\"checked\\\">\\n  <span class=\\\"mdl-radio__label\\\"><ng-content></ng-content></span>\\n  <span class=\\\"mdl-radio__outer-circle\\\"></span>\\n  <span class=\\\"mdl-radio__inner-circle\\\"></span>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_radio_component_param(3, Object(core_[\"Optional\"])()),\n        mdl_radio_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"],\n            core_[\"Renderer2\"],\n            mdl_radio_component_MdlRadioGroupRegisty,\n            forms_[\"FormGroupName\"]])\n    ], MdlRadioComponent);\n    return MdlRadioComponent;\n}());\n\nvar mdl_radio_component_MdlRadioModule = /** @class */ (function () {\n    function MdlRadioModule() {\n    }\n    MdlRadioModule_1 = MdlRadioModule;\n    MdlRadioModule.forRoot = function () {\n        return {\n            ngModule: MdlRadioModule_1,\n            providers: [mdl_radio_component_MdlRadioGroupRegisty]\n        };\n    };\n    var MdlRadioModule_1;\n    MdlRadioModule = MdlRadioModule_1 = mdl_radio_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [common_[\"CommonModule\"], forms_[\"FormsModule\"]],\n            exports: [mdl_radio_component_MdlRadioComponent],\n            declarations: [mdl_radio_component_MdlRadioComponent]\n        })\n    ], MdlRadioModule);\n    return MdlRadioModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/progress/mdl-progress.component.ts\nvar mdl_progress_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_progress_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\nvar mdl_progress_component_MdlProgressComponent = /** @class */ (function () {\n    function MdlProgressComponent() {\n        this.progress = 0;\n        this.buffer = 100;\n        this.aux = 0;\n        this._indeterminate = false;\n    }\n    Object.defineProperty(MdlProgressComponent.prototype, \"indeterminate\", {\n        get: function () { return this._indeterminate; },\n        set: function (value) { this._indeterminate = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlProgressComponent.prototype.ngOnChanges = function (changes) {\n        if (changes['buffer']) {\n            this.setBuffer(changes['buffer'].currentValue);\n        }\n    };\n    MdlProgressComponent.prototype.setBuffer = function (b) {\n        this.aux = 100 - b;\n    };\n    mdl_progress_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_progress_component_metadata(\"design:type\", Object)\n    ], MdlProgressComponent.prototype, \"progress\", void 0);\n    mdl_progress_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_progress_component_metadata(\"design:type\", Object)\n    ], MdlProgressComponent.prototype, \"buffer\", void 0);\n    mdl_progress_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_progress_component_metadata(\"design:type\", Object)\n    ], MdlProgressComponent.prototype, \"aux\", void 0);\n    mdl_progress_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_progress_component_metadata(\"design:type\", Object),\n        mdl_progress_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlProgressComponent.prototype, \"indeterminate\", null);\n    MdlProgressComponent = mdl_progress_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-progress',\n            host: {\n                '[class.mdl-progress]': 'true',\n                '[class.mdl-progress__indeterminate]': 'indeterminate===true'\n            },\n            template: \"\\n    <div class=\\\"progressbar bar bar1\\\" [style.width]=\\\"progress + '%'\\\"></div>\\n    <div class=\\\"bufferbar bar bar2\\\" [style.width]=\\\"buffer + '%'\\\"></div>\\n    <div class=\\\"auxbar bar bar3\\\" [ngStyle]=\\\"{'width': aux+'%'}\\\"></div>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None,\n            changeDetection: core_[\"ChangeDetectionStrategy\"].OnPush,\n        })\n    ], MdlProgressComponent);\n    return MdlProgressComponent;\n}());\n\nvar MDL_PROGRESS_DIRECTIVES = [mdl_progress_component_MdlProgressComponent];\nvar mdl_progress_component_MdlProgressModule = /** @class */ (function () {\n    function MdlProgressModule() {\n    }\n    MdlProgressModule_1 = MdlProgressModule;\n    MdlProgressModule.forRoot = function () {\n        return {\n            ngModule: MdlProgressModule_1,\n            providers: []\n        };\n    };\n    var MdlProgressModule_1;\n    MdlProgressModule = MdlProgressModule_1 = mdl_progress_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [common_[\"CommonModule\"]],\n            exports: MDL_PROGRESS_DIRECTIVES,\n            declarations: MDL_PROGRESS_DIRECTIVES,\n        })\n    ], MdlProgressModule);\n    return MdlProgressModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/icon-toggle/mdl-icon-toggle.component.ts\nvar mdl_icon_toggle_component_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_icon_toggle_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_icon_toggle_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\nvar mdl_icon_toggle_component_MdlIconToggleComponent = /** @class */ (function (_super) {\n    mdl_icon_toggle_component_extends(MdlIconToggleComponent, _super);\n    function MdlIconToggleComponent(elementRef, renderer) {\n        return _super.call(this, elementRef, renderer) || this;\n    }\n    MdlIconToggleComponent_1 = MdlIconToggleComponent;\n    var MdlIconToggleComponent_1;\n    MdlIconToggleComponent = MdlIconToggleComponent_1 = mdl_icon_toggle_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-icon-toggle',\n            providers: [{\n                    provide: forms_[\"NG_VALUE_ACCESSOR\"],\n                    useExisting: Object(core_[\"forwardRef\"])(function () { return MdlIconToggleComponent_1; }),\n                    multi: true\n                }],\n            host: {\n                '(click)': 'onClick()',\n                '[class.mdl-icon-toggle]': 'true',\n                '[class.is-upgraded]': 'true',\n                '[class.is-checked]': 'value',\n                '[class.is-disabled]': 'disabled'\n            },\n            outputs: ['change'],\n            template: \"\\n  <input type=\\\"checkbox\\\" class=\\\"mdl-icon-toggle__input\\\" \\n    (focus)=\\\"onFocus()\\\" \\n    (blur)=\\\"onBlur()\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [(ngModel)]=\\\"value\\\">\\n  <mdl-icon class=\\\"mdl-icon-toggle__label\\\"><ng-content></ng-content></mdl-icon>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_icon_toggle_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlIconToggleComponent);\n    return MdlIconToggleComponent;\n}(mdl_checkbox_component_MdlCheckboxComponent));\n\nvar MDL_ICON_TOGGLE_DIRECTIVES = [mdl_icon_toggle_component_MdlIconToggleComponent];\nvar mdl_icon_toggle_component_MdlIconToggleModule = /** @class */ (function () {\n    function MdlIconToggleModule() {\n    }\n    MdlIconToggleModule_1 = MdlIconToggleModule;\n    MdlIconToggleModule.forRoot = function () {\n        return {\n            ngModule: MdlIconToggleModule_1,\n            providers: []\n        };\n    };\n    var MdlIconToggleModule_1;\n    MdlIconToggleModule = MdlIconToggleModule_1 = mdl_icon_toggle_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [mdl_icon_component_MdlIconModule, common_[\"CommonModule\"], forms_[\"FormsModule\"]],\n            exports: MDL_ICON_TOGGLE_DIRECTIVES,\n            declarations: MDL_ICON_TOGGLE_DIRECTIVES,\n        })\n    ], MdlIconToggleModule);\n    return MdlIconToggleModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/list/mdl-list.component.ts\nvar mdl_list_component_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_list_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_list_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_list_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\nvar MdlUnsupportedCountOfListItemLinesError = /** @class */ (function (_super) {\n    mdl_list_component_extends(MdlUnsupportedCountOfListItemLinesError, _super);\n    function MdlUnsupportedCountOfListItemLinesError(lines) {\n        /* istanbul ignore next */\n        return _super.call(this, \"\\\"\" + lines + \"\\\" is not supported - max 3 lines please.\") || this;\n    }\n    return MdlUnsupportedCountOfListItemLinesError;\n}(MdlError));\n\nvar mdl_list_component_MdlListComponent = /** @class */ (function () {\n    function MdlListComponent() {\n    }\n    MdlListComponent = mdl_list_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-list',\n            host: {\n                '[class.mdl-list]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlListComponent);\n    return MdlListComponent;\n}());\n\nvar mdl_list_component_MdlListItemComponent = /** @class */ (function () {\n    function MdlListItemComponent() {\n        this._lines = 1;\n    }\n    Object.defineProperty(MdlListItemComponent.prototype, \"lines\", {\n        get: function () { return this._lines; },\n        set: function (value) { this._lines = toNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlListItemComponent.prototype.ngOnChanges = function (changes) {\n        if (this.lines && this.lines > 3) {\n            throw new MdlUnsupportedCountOfListItemLinesError(this.lines);\n        }\n    };\n    mdl_list_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_list_component_metadata(\"design:type\", Object),\n        mdl_list_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlListItemComponent.prototype, \"lines\", null);\n    MdlListItemComponent = mdl_list_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-list-item',\n            host: {\n                '[class.mdl-list__item]': 'true',\n                '[class.mdl-list__item--two-line]': 'lines==2',\n                '[class.mdl-list__item--three-line]': 'lines==3'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlListItemComponent);\n    return MdlListItemComponent;\n}());\n\nvar mdl_list_component_MdlListItemPrimaryContentComponent = /** @class */ (function () {\n    function MdlListItemPrimaryContentComponent(mdlListItemComponent) {\n        this.mdlListItemComponent = mdlListItemComponent;\n    }\n    MdlListItemPrimaryContentComponent.prototype.ngOnInit = function () {\n        if (this.mdlListItemComponent === null) {\n            throw new MdlStructureError('mdl-list-item-primary-content', 'mdl-list-item');\n        }\n    };\n    MdlListItemPrimaryContentComponent = mdl_list_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-list-item-primary-content',\n            host: {\n                '[class.mdl-list__item-primary-content]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_list_component_param(0, Object(core_[\"Optional\"])()),\n        mdl_list_component_metadata(\"design:paramtypes\", [mdl_list_component_MdlListItemComponent])\n    ], MdlListItemPrimaryContentComponent);\n    return MdlListItemPrimaryContentComponent;\n}());\n\nvar mdl_list_component_MdlListItemSecondaryContentComponent = /** @class */ (function () {\n    function MdlListItemSecondaryContentComponent(mdlListItemComponent) {\n        this.mdlListItemComponent = mdlListItemComponent;\n    }\n    MdlListItemSecondaryContentComponent.prototype.ngOnInit = function () {\n        if (this.mdlListItemComponent === null) {\n            throw new MdlStructureError('mdl-list-item-secondary-content', 'mdl-list-item');\n        }\n    };\n    MdlListItemSecondaryContentComponent = mdl_list_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-list-item-secondary-content',\n            host: {\n                '[class.mdl-list__item-secondary-content]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_list_component_param(0, Object(core_[\"Optional\"])()),\n        mdl_list_component_metadata(\"design:paramtypes\", [mdl_list_component_MdlListItemComponent])\n    ], MdlListItemSecondaryContentComponent);\n    return MdlListItemSecondaryContentComponent;\n}());\n\nvar mdl_list_component_MdlListItemSecondaryActionComponent = /** @class */ (function () {\n    function MdlListItemSecondaryActionComponent(mdlListItemComponent) {\n        this.mdlListItemComponent = mdlListItemComponent;\n    }\n    MdlListItemSecondaryActionComponent.prototype.ngOnInit = function () {\n        if (this.mdlListItemComponent === null) {\n            throw new MdlStructureError('mdl-list-item-secondary-action', 'mdl-list-item');\n        }\n    };\n    MdlListItemSecondaryActionComponent = mdl_list_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-list-item-secondary-action',\n            host: {\n                '[class.mdl-list__item-secondary-action]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_list_component_param(0, Object(core_[\"Optional\"])()),\n        mdl_list_component_metadata(\"design:paramtypes\", [mdl_list_component_MdlListItemComponent])\n    ], MdlListItemSecondaryActionComponent);\n    return MdlListItemSecondaryActionComponent;\n}());\n\nvar mdl_list_component_MdlListItemSubTitleComponent = /** @class */ (function () {\n    function MdlListItemSubTitleComponent(mdlListItemComponent) {\n        this.mdlListItemComponent = mdlListItemComponent;\n    }\n    MdlListItemSubTitleComponent.prototype.ngOnInit = function () {\n        if (this.mdlListItemComponent === null) {\n            throw new MdlStructureError('mdl-list-item-sub-title', 'mdl-list-item-primary-content');\n        }\n    };\n    MdlListItemSubTitleComponent = mdl_list_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-list-item-sub-title',\n            host: {\n                '[class.mdl-list__item-sub-title]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_list_component_param(0, Object(core_[\"Optional\"])()),\n        mdl_list_component_metadata(\"design:paramtypes\", [mdl_list_component_MdlListItemPrimaryContentComponent])\n    ], MdlListItemSubTitleComponent);\n    return MdlListItemSubTitleComponent;\n}());\n\nvar mdl_list_component_MdlListItemSecondaryInfoComponent = /** @class */ (function () {\n    function MdlListItemSecondaryInfoComponent(mdlListItemComponent) {\n        this.mdlListItemComponent = mdlListItemComponent;\n    }\n    MdlListItemSecondaryInfoComponent.prototype.ngOnInit = function () {\n        if (this.mdlListItemComponent === null) {\n            throw new MdlStructureError('mdl-list-item-secondary-info', 'mdl-list-item-secondary-content');\n        }\n    };\n    MdlListItemSecondaryInfoComponent = mdl_list_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-list-item-secondary-info',\n            host: {\n                '[class.mdl-list__item-secondary-info]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_list_component_param(0, Object(core_[\"Optional\"])()),\n        mdl_list_component_metadata(\"design:paramtypes\", [mdl_list_component_MdlListItemSecondaryContentComponent])\n    ], MdlListItemSecondaryInfoComponent);\n    return MdlListItemSecondaryInfoComponent;\n}());\n\nvar mdl_list_component_MdlListItemTextBodyComponent = /** @class */ (function () {\n    function MdlListItemTextBodyComponent(mdlListItemComponent) {\n        this.mdlListItemComponent = mdlListItemComponent;\n    }\n    MdlListItemTextBodyComponent.prototype.ngOnInit = function () {\n        if (this.mdlListItemComponent === null) {\n            throw new MdlStructureError('mdl-list-item-text-body', 'mdl-list-item');\n        }\n    };\n    MdlListItemTextBodyComponent = mdl_list_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-list-item-text-body',\n            host: {\n                '[class.mdl-list__item-text-body]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_list_component_param(0, Object(core_[\"Optional\"])()),\n        mdl_list_component_metadata(\"design:paramtypes\", [mdl_list_component_MdlListItemComponent])\n    ], MdlListItemTextBodyComponent);\n    return MdlListItemTextBodyComponent;\n}());\n\nvar mdl_list_component_MdlListItemIconDirective = /** @class */ (function () {\n    function MdlListItemIconDirective() {\n    }\n    MdlListItemIconDirective = mdl_list_component_decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'mdl-icon[mdl-list-item-icon]',\n            host: {\n                '[class.mdl-list__item-icon]': 'true'\n            }\n        })\n    ], MdlListItemIconDirective);\n    return MdlListItemIconDirective;\n}());\n\nvar mdl_list_component_MdlListItemAvatarDirective = /** @class */ (function () {\n    function MdlListItemAvatarDirective() {\n    }\n    MdlListItemAvatarDirective = mdl_list_component_decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'mdl-icon[mdl-list-item-avatar]',\n            host: {\n                '[class.mdl-list__item-avatar]': 'true'\n            }\n        })\n    ], MdlListItemAvatarDirective);\n    return MdlListItemAvatarDirective;\n}());\n\nvar MDL_LIST_DIRECTIVES = [\n    mdl_list_component_MdlListComponent,\n    mdl_list_component_MdlListItemComponent,\n    mdl_list_component_MdlListItemPrimaryContentComponent,\n    mdl_list_component_MdlListItemIconDirective,\n    mdl_list_component_MdlListItemAvatarDirective,\n    mdl_list_component_MdlListItemSecondaryContentComponent,\n    mdl_list_component_MdlListItemSecondaryActionComponent,\n    mdl_list_component_MdlListItemSubTitleComponent,\n    mdl_list_component_MdlListItemSecondaryInfoComponent,\n    mdl_list_component_MdlListItemTextBodyComponent\n];\nvar mdl_list_component_MdlListModule = /** @class */ (function () {\n    function MdlListModule() {\n    }\n    MdlListModule_1 = MdlListModule;\n    MdlListModule.forRoot = function () {\n        return {\n            ngModule: MdlListModule_1,\n            providers: []\n        };\n    };\n    var MdlListModule_1;\n    MdlListModule = MdlListModule_1 = mdl_list_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: MDL_LIST_DIRECTIVES,\n            declarations: MDL_LIST_DIRECTIVES,\n        })\n    ], MdlListModule);\n    return MdlListModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/spinner/mdl-spinner.component.ts\nvar mdl_spinner_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_spinner_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\nvar mdl_spinner_component_MdlSpinnerComponent = /** @class */ (function () {\n    function MdlSpinnerComponent() {\n        this.layers = [1, 2, 3, 4];\n        this._active = false;\n        this._singleColor = false;\n    }\n    Object.defineProperty(MdlSpinnerComponent.prototype, \"active\", {\n        get: function () { return this._active; },\n        set: function (value) { this._active = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlSpinnerComponent.prototype, \"singleColor\", {\n        get: function () { return this._singleColor; },\n        set: function (value) { this._singleColor = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    mdl_spinner_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_spinner_component_metadata(\"design:type\", Object),\n        mdl_spinner_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlSpinnerComponent.prototype, \"active\", null);\n    mdl_spinner_component_decorate([\n        Object(core_[\"Input\"])('single-color'),\n        mdl_spinner_component_metadata(\"design:type\", Object),\n        mdl_spinner_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlSpinnerComponent.prototype, \"singleColor\", null);\n    MdlSpinnerComponent = mdl_spinner_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-spinner',\n            host: {\n                '[class.mdl-spinner]': 'true',\n                '[class.is-upgraded]': 'true',\n                '[class.is-active]': 'active',\n                '[class.mdl-spinner--single-color]': 'singleColor',\n            },\n            // must be one line - otherwise the spinner is broken in the ui\n            /* tslint:disable */\n            template: \"\\n    <div *ngFor=\\\"let layer of layers;\\\" \\n            class=\\\"mdl-spinner__layer mdl-spinner__layer-{{layer}}\\\">\\n      <div class=\\\"mdl-spinner__circle-clipper mdl-spinner__left\\\">\\n         <div class=\\\"mdl-spinner__circle\\\"></div>\\n      </div><div class=\\\"mdl-spinner__gap-patch\\\"><div class=\\\"mdl-spinner__circle\\\"></div></div><div class=\\\"mdl-spinner__circle-clipper mdl-spinner__right\\\"><div class=\\\"mdl-spinner__circle\\\"></div></div>\\n    </div>\\n  \"\n            /* tslint:enable */ ,\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlSpinnerComponent);\n    return MdlSpinnerComponent;\n}());\n\nvar MDL_SPINNER_DIRECTIVES = [mdl_spinner_component_MdlSpinnerComponent];\nvar mdl_spinner_component_MdlSpinnerModule = /** @class */ (function () {\n    function MdlSpinnerModule() {\n    }\n    MdlSpinnerModule_1 = MdlSpinnerModule;\n    MdlSpinnerModule.forRoot = function () {\n        return {\n            ngModule: MdlSpinnerModule_1,\n            providers: []\n        };\n    };\n    var MdlSpinnerModule_1;\n    MdlSpinnerModule = MdlSpinnerModule_1 = mdl_spinner_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [common_[\"CommonModule\"]],\n            exports: MDL_SPINNER_DIRECTIVES,\n            declarations: MDL_SPINNER_DIRECTIVES,\n        })\n    ], MdlSpinnerModule);\n    return MdlSpinnerModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/slider/mdl-slider.component.ts\nvar mdl_slider_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_slider_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\nvar mdl_slider_component_MdlSliderComponent = /** @class */ (function () {\n    function MdlSliderComponent(renderer, elRef) {\n        this.renderer = renderer;\n        this.elRef = elRef;\n        this._disabled = false;\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n    }\n    MdlSliderComponent_1 = MdlSliderComponent;\n    Object.defineProperty(MdlSliderComponent.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlSliderComponent.prototype, \"value\", {\n        get: function () { return this.value_; },\n        set: function (v) {\n            this.value_ = v;\n            this.updateSliderUI();\n            this.onChangeCallback(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    MdlSliderComponent.prototype.writeValue = function (value) {\n        this.value_ = value;\n        this.updateSliderUI();\n    };\n    MdlSliderComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    MdlSliderComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    MdlSliderComponent.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    MdlSliderComponent.prototype.updateSliderUI = function () {\n        var fraction = (this.value_ - this.min) / (this.max - this.min);\n        if (fraction === 0) {\n            this.renderer.addClass(this.inputEl.nativeElement, 'is-lowest-value');\n        }\n        else {\n            this.renderer.removeClass(this.inputEl.nativeElement, 'is-lowest-value');\n        }\n        this.renderer.setStyle(this.lowerEl.nativeElement, 'flex', '' + fraction);\n        this.renderer.setStyle(this.upperEl.nativeElement, 'flex', '' + (1 - fraction));\n    };\n    MdlSliderComponent.prototype.onMouseUp = function (event) {\n        event.target.blur();\n    };\n    MdlSliderComponent.prototype.onMouseDown = function (event) {\n        if (event.target !== this.elRef.nativeElement) {\n            return;\n        }\n        // Discard the original event and create a new event that\n        // is on the slider element.\n        event.preventDefault();\n        var newEvent = new MouseEvent('mousedown', {\n            relatedTarget: event.relatedTarget,\n            button: event.button,\n            buttons: event.buttons,\n            clientX: event.clientX,\n            clientY: this.inputEl.nativeElement.getBoundingClientRect().y,\n            screenX: event.screenX,\n            screenY: event.screenY\n        });\n        callNative(this.inputEl.nativeElement, 'dispatchEvent', newEvent);\n    };\n    var MdlSliderComponent_1;\n    mdl_slider_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_slider_component_metadata(\"design:type\", Number)\n    ], MdlSliderComponent.prototype, \"min\", void 0);\n    mdl_slider_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_slider_component_metadata(\"design:type\", Number)\n    ], MdlSliderComponent.prototype, \"max\", void 0);\n    mdl_slider_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_slider_component_metadata(\"design:type\", Number)\n    ], MdlSliderComponent.prototype, \"step\", void 0);\n    mdl_slider_component_decorate([\n        Object(core_[\"ViewChild\"])('lower'),\n        mdl_slider_component_metadata(\"design:type\", core_[\"ElementRef\"])\n    ], MdlSliderComponent.prototype, \"lowerEl\", void 0);\n    mdl_slider_component_decorate([\n        Object(core_[\"ViewChild\"])('uppper'),\n        mdl_slider_component_metadata(\"design:type\", core_[\"ElementRef\"])\n    ], MdlSliderComponent.prototype, \"upperEl\", void 0);\n    mdl_slider_component_decorate([\n        Object(core_[\"ViewChild\"])('input'),\n        mdl_slider_component_metadata(\"design:type\", core_[\"ElementRef\"])\n    ], MdlSliderComponent.prototype, \"inputEl\", void 0);\n    mdl_slider_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_slider_component_metadata(\"design:type\", Boolean),\n        mdl_slider_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlSliderComponent.prototype, \"disabled\", null);\n    mdl_slider_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_slider_component_metadata(\"design:type\", Object),\n        mdl_slider_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlSliderComponent.prototype, \"value\", null);\n    MdlSliderComponent = MdlSliderComponent_1 = mdl_slider_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-slider',\n            providers: [{\n                    provide: forms_[\"NG_VALUE_ACCESSOR\"],\n                    useExisting: Object(core_[\"forwardRef\"])(function () { return MdlSliderComponent_1; }),\n                    multi: true\n                }],\n            host: {\n                '[class.mdl-slider__container]': 'true',\n                '(mouseup)': 'onMouseUp($event)',\n                '(mousedown)': 'onMouseDown($event)'\n            },\n            template: \"\\n    <input class=\\\"mdl-slider is-upgraded\\\" \\n            type=\\\"range\\\" \\n            [min]=\\\"min\\\" \\n            [max]=\\\"max\\\" \\n            [step]=\\\"step\\\" \\n            [(ngModel)]=\\\"value\\\" \\n            [disabled]=\\\"disabled\\\"\\n            tabindex=\\\"0\\\"\\n            #input>\\n    <div class=\\\"mdl-slider__background-flex\\\">\\n      <div class=\\\"mdl-slider__background-lower\\\" #lower></div>\\n      <div class=\\\"mdl-slider__background-upper\\\" #uppper></div>\\n  </div>\\n  \",\n            styles: [\n                \"\\n    :host {\\n        height: 22px;\\n        user-select: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n    }\\n    \"\n            ],\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_slider_component_metadata(\"design:paramtypes\", [core_[\"Renderer2\"], core_[\"ElementRef\"]])\n    ], MdlSliderComponent);\n    return MdlSliderComponent;\n}());\n\nvar MDL_SLIDER_DIRECTIVES = [mdl_slider_component_MdlSliderComponent];\nvar mdl_slider_component_MdlSliderModule = /** @class */ (function () {\n    function MdlSliderModule() {\n    }\n    MdlSliderModule_1 = MdlSliderModule;\n    MdlSliderModule.forRoot = function () {\n        return {\n            ngModule: MdlSliderModule_1,\n            providers: []\n        };\n    };\n    var MdlSliderModule_1;\n    MdlSliderModule = MdlSliderModule_1 = mdl_slider_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [forms_[\"FormsModule\"], common_[\"CommonModule\"]],\n            exports: MDL_SLIDER_DIRECTIVES,\n            declarations: MDL_SLIDER_DIRECTIVES,\n        })\n    ], MdlSliderModule);\n    return MdlSliderModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/switch/mdl-switch.component.ts\nvar mdl_switch_component_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_switch_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_switch_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\nvar mdl_switch_component_MdlSwitchComponent = /** @class */ (function (_super) {\n    mdl_switch_component_extends(MdlSwitchComponent, _super);\n    function MdlSwitchComponent(elementRef, renderer) {\n        return _super.call(this, elementRef, renderer) || this;\n    }\n    MdlSwitchComponent_1 = MdlSwitchComponent;\n    var MdlSwitchComponent_1;\n    MdlSwitchComponent = MdlSwitchComponent_1 = mdl_switch_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-switch',\n            providers: [{\n                    provide: forms_[\"NG_VALUE_ACCESSOR\"],\n                    useExisting: Object(core_[\"forwardRef\"])(function () { return MdlSwitchComponent_1; }),\n                    multi: true\n                }],\n            host: {\n                '(click)': 'onClick()',\n                '[class.mdl-switch]': 'true',\n                '[class.is-upgraded]': 'true',\n                '[class.is-checked]': 'value',\n                '[class.is-disabled]': 'disabled'\n            },\n            outputs: ['change'],\n            template: \"\\n    <input type=\\\"checkbox\\\" class=\\\"mdl-switch__input\\\" \\n      (focus)=\\\"onFocus()\\\" \\n      (blur)=\\\"onBlur()\\\"\\n      [disabled]=\\\"disabled\\\"\\n      [(ngModel)]=\\\"value\\\">\\n    <span class=\\\"mdl-switch__label\\\"><ng-content></ng-content></span>\\n    <div class=\\\"mdl-switch__track\\\"></div>\\n    <div class=\\\"mdl-switch__thumb\\\"><span class=\\\"mdl-switch__focus-helper\\\"></span></div>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_switch_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"]])\n    ], MdlSwitchComponent);\n    return MdlSwitchComponent;\n}(mdl_checkbox_component_MdlCheckboxComponent));\n\nvar MDL_SWITCH_DIRECTIVES = [mdl_switch_component_MdlSwitchComponent];\nvar mdl_switch_component_MdlSwitchModule = /** @class */ (function () {\n    function MdlSwitchModule() {\n    }\n    MdlSwitchModule_1 = MdlSwitchModule;\n    MdlSwitchModule.forRoot = function () {\n        return {\n            ngModule: MdlSwitchModule_1,\n            providers: []\n        };\n    };\n    var MdlSwitchModule_1;\n    MdlSwitchModule = MdlSwitchModule_1 = mdl_switch_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [common_[\"CommonModule\"], forms_[\"FormsModule\"]],\n            exports: MDL_SWITCH_DIRECTIVES,\n            declarations: MDL_SWITCH_DIRECTIVES,\n        })\n    ], MdlSwitchModule);\n    return MdlSwitchModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/snackbar/mdl-snackbar.service.ts\nvar mdl_snackbar_service_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_snackbar_service_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\nvar ANIMATION_TIME = 250;\nvar mdl_snackbar_service_MdlSnackbarComponent = /** @class */ (function () {\n    function MdlSnackbarComponent() {\n        this.showIt = false;\n    }\n    MdlSnackbarComponent.prototype.onClick = function () {\n        this.onAction();\n    };\n    MdlSnackbarComponent.prototype.isActive = function () {\n        return this.showIt;\n    };\n    MdlSnackbarComponent.prototype.show = function () {\n        var _this = this;\n        var result = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"Subject\"]();\n        // wait unit the dom is in place - then showIt will change the css class\n        setTimeout(function () {\n            _this.showIt = true;\n            // fire after the view animation is done\n            setTimeout(function () {\n                result.next(null);\n                result.complete();\n            }, ANIMATION_TIME);\n        }, ANIMATION_TIME);\n        return result.asObservable();\n    };\n    MdlSnackbarComponent.prototype.hide = function () {\n        this.showIt = false;\n        var result = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"Subject\"]();\n        // fire after the view animation is done\n        setTimeout(function () {\n            result.next(null);\n            result.complete();\n        }, ANIMATION_TIME);\n        return result.asObservable();\n    };\n    MdlSnackbarComponent = mdl_snackbar_service_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-snackbar-component',\n            template: \"\\n    <div id=\\\"demo-toast-example\\\" class=\\\" mdl-snackbar\\\" [ngClass]=\\\"{'mdl-snackbar--active': showIt }\\\">\\n      <div class=\\\"mdl-snackbar__text\\\">{{message}}</div>\\n      <button *ngIf=\\\"onAction\\\" class=\\\"mdl-snackbar__action\\\" type=\\\"button\\\" (click)=\\\"onClick()\\\" >{{actionText}}</button>\\n    </div>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_snackbar_service_metadata(\"design:paramtypes\", [])\n    ], MdlSnackbarComponent);\n    return MdlSnackbarComponent;\n}());\n\nvar mdl_snackbar_service_MdlSnackbarService = /** @class */ (function () {\n    function MdlSnackbarService(componentFactoryResolver, dialogOutletService) {\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.dialogOutletService = dialogOutletService;\n        this.cFactory = this.componentFactoryResolver.resolveComponentFactory(mdl_snackbar_service_MdlSnackbarComponent);\n    }\n    MdlSnackbarService.prototype.showToast = function (message, timeout) {\n        return this.showSnackbar({\n            message: message,\n            timeout: timeout\n        });\n    };\n    MdlSnackbarService.prototype.showSnackbar = function (snackbarMessage) {\n        var optTimeout = snackbarMessage.timeout || 2750;\n        var closeAfterTimeout = !!snackbarMessage.closeAfterTimeout;\n        var viewContainerRef = this.dialogOutletService.viewContainerRef;\n        if (!viewContainerRef) {\n            throw new Error('You did not provide a ViewContainerRef. ' +\n                'Please see https://github.com/mseemann/angular2-mdl/wiki/How-to-use-the-MdlDialogService');\n        }\n        var cRef = viewContainerRef.createComponent(this.cFactory, viewContainerRef.length);\n        var mdlSnackbarComponent = cRef.instance;\n        mdlSnackbarComponent.message = snackbarMessage.message;\n        if (this.previousSnack) {\n            var previousSnack_1 = this.previousSnack;\n            var subscription_1 = previousSnack_1.component.hide()\n                .subscribe(function () {\n                previousSnack_1.cRef.destroy();\n                subscription_1.unsubscribe();\n            });\n        }\n        this.previousSnack = {\n            component: mdlSnackbarComponent,\n            cRef: cRef\n        };\n        if (snackbarMessage.action) {\n            if (closeAfterTimeout) {\n                this.hideAndDestroySnack(mdlSnackbarComponent, cRef, optTimeout);\n            }\n            mdlSnackbarComponent.actionText = snackbarMessage.action.text;\n            mdlSnackbarComponent.onAction = function () {\n                mdlSnackbarComponent.hide().subscribe(function () {\n                    cRef.destroy();\n                    snackbarMessage.action.handler();\n                });\n            };\n        }\n        else {\n            this.hideAndDestroySnack(mdlSnackbarComponent, cRef, optTimeout);\n        }\n        var result = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"Subject\"]();\n        mdlSnackbarComponent.show().subscribe(function () {\n            result.next(mdlSnackbarComponent);\n            result.complete();\n        });\n        return result.asObservable();\n    };\n    MdlSnackbarService.prototype.hideAndDestroySnack = function (component, componentRef, timeOut) {\n        setTimeout(function () {\n            component.hide()\n                .subscribe(function () {\n                componentRef.destroy();\n            });\n        }, timeOut);\n    };\n    MdlSnackbarService = mdl_snackbar_service_decorate([\n        Object(core_[\"Injectable\"])(),\n        mdl_snackbar_service_metadata(\"design:paramtypes\", [core_[\"ComponentFactoryResolver\"],\n            mdl_dialog_outlet_service_MdlDialogOutletService])\n    ], MdlSnackbarService);\n    return MdlSnackbarService;\n}());\n\nvar mdl_snackbar_service_MdlSnackbarModule = /** @class */ (function () {\n    function MdlSnackbarModule() {\n    }\n    MdlSnackbarModule_1 = MdlSnackbarModule;\n    MdlSnackbarModule.forRoot = function () {\n        return {\n            ngModule: MdlSnackbarModule_1,\n            providers: [mdl_snackbar_service_MdlSnackbarService]\n        };\n    };\n    var MdlSnackbarModule_1;\n    MdlSnackbarModule = MdlSnackbarModule_1 = mdl_snackbar_service_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [common_[\"CommonModule\"], dialog_outlet_MdlDialogOutletModule.forRoot()],\n            exports: [mdl_snackbar_service_MdlSnackbarComponent],\n            declarations: [mdl_snackbar_service_MdlSnackbarComponent],\n            entryComponents: [mdl_snackbar_service_MdlSnackbarComponent]\n        })\n    ], MdlSnackbarModule);\n    return MdlSnackbarModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/tooltip/mdl-tooltip-position.service.ts\nvar mdl_tooltip_position_service_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar mdl_tooltip_position_service_MdlTooltipPositionService = /** @class */ (function () {\n    function MdlTooltipPositionService() {\n    }\n    MdlTooltipPositionService.prototype.calcStyle = function (offsetWidth, offsetHeight, props, position) {\n        var result = {};\n        var left = props.left + (props.width / 2);\n        var top = props.top + (props.height / 2);\n        var marginLeft = -1 * (offsetWidth / 2);\n        var marginTop = -1 * (offsetHeight / 2);\n        if (position == 'left' || position == 'right') {\n            left = (props.width / 2);\n            if (top + marginTop < 0) {\n                result.top = '0';\n                result.marginTop = '0';\n            }\n            else {\n                result.top = top + 'px';\n                result.marginTop = marginTop + 'px';\n            }\n        }\n        else {\n            if (left + marginLeft < 0) {\n                result.left = '0';\n                result.marginLeft = '0';\n            }\n            else {\n                result.left = left + 'px';\n                result.marginLeft = marginLeft + 'px';\n            }\n        }\n        if (position == 'top') {\n            result.top = props.top - offsetHeight - 10 + 'px';\n        }\n        else if (position == 'right') {\n            result.left = props.left + props.width + 10 + 'px';\n        }\n        else if (position == 'left') {\n            result.left = props.left - offsetWidth - 10 + 'px';\n        }\n        else {\n            result.top = props.top + props.height + 10 + 'px';\n        }\n        return result;\n    };\n    MdlTooltipPositionService = mdl_tooltip_position_service_decorate([\n        Object(core_[\"Injectable\"])()\n    ], MdlTooltipPositionService);\n    return MdlTooltipPositionService;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/tooltip/mdl-tooltip.component.ts\nvar mdl_tooltip_component_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_tooltip_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_tooltip_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar IS_ACTIVE = 'is-active';\nvar host = {\n    '[class.mdl-tooltip]': 'true',\n    '[class.mdl-tooltip--large]': 'large',\n    '[class.mdl-tooltip--left]': 'position==\"left\"',\n    '[class.mdl-tooltip--right]': 'position==\"right\"',\n    '[class.mdl-tooltip--top]': 'position==\"top\"',\n    '[class.mdl-tooltip--bottom]': 'position==\"bottom\"'\n};\nvar mdl_tooltip_component_MdlSimpleTooltipComponent = /** @class */ (function () {\n    function MdlSimpleTooltipComponent(elRef, renderer, mdlTooltipPositionService) {\n        this.elRef = elRef;\n        this.renderer = renderer;\n        this.mdlTooltipPositionService = mdlTooltipPositionService;\n        this.large = false;\n        this.active = false;\n        this.element = elRef.nativeElement;\n    }\n    MdlSimpleTooltipComponent.prototype.mouseLeave = function () {\n        if (this.delayTimeout) {\n            clearTimeout(this.delayTimeout);\n        }\n        this.setActive(false);\n    };\n    MdlSimpleTooltipComponent.prototype.mouseEnter = function (event) {\n        var _this = this;\n        if (this.delay) {\n            this.delayTimeout = setTimeout(function () {\n                _this.show(event.target);\n            }, this.delay);\n        }\n        else {\n            this.show(event.target);\n        }\n    };\n    MdlSimpleTooltipComponent.prototype.show = function (element) {\n        var props = element.getBoundingClientRect();\n        var offsetWidth = this.element.offsetWidth;\n        var offsetHeight = this.element.offsetHeight;\n        var style = this.mdlTooltipPositionService.calcStyle(offsetWidth, offsetHeight, props, this.position);\n        for (var key in style) {\n            this.renderer.setStyle(this.elRef.nativeElement, key, style[key]);\n        }\n        this.setActive(true);\n    };\n    MdlSimpleTooltipComponent.prototype.setActive = function (active) {\n        this.active = active;\n        if (active) {\n            this.renderer.addClass(this.elRef.nativeElement, IS_ACTIVE);\n        }\n        else {\n            this.renderer.removeClass(this.elRef.nativeElement, IS_ACTIVE);\n        }\n    };\n    MdlSimpleTooltipComponent.prototype.isActive = function () {\n        return this.active;\n    };\n    mdl_tooltip_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_tooltip_component_metadata(\"design:type\", Number)\n    ], MdlSimpleTooltipComponent.prototype, \"delay\", void 0);\n    MdlSimpleTooltipComponent = mdl_tooltip_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-simple-tooltip',\n            host: host,\n            template: '<div>{{tooltipText}}</div>',\n            providers: [mdl_tooltip_position_service_MdlTooltipPositionService],\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_tooltip_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"],\n            core_[\"Renderer2\"],\n            mdl_tooltip_position_service_MdlTooltipPositionService])\n    ], MdlSimpleTooltipComponent);\n    return MdlSimpleTooltipComponent;\n}());\n\nvar mdl_tooltip_component_MdlTooltipComponent = /** @class */ (function (_super) {\n    mdl_tooltip_component_extends(MdlTooltipComponent, _super);\n    function MdlTooltipComponent(elRef, renderer, mdlTooltipPositionService) {\n        return _super.call(this, elRef, renderer, mdlTooltipPositionService) || this;\n    }\n    MdlTooltipComponent = mdl_tooltip_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-tooltip',\n            template: '<div><ng-content></ng-content></div>',\n            exportAs: 'mdlTooltip',\n            host: host,\n            providers: [mdl_tooltip_position_service_MdlTooltipPositionService],\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_tooltip_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"], core_[\"Renderer2\"], mdl_tooltip_position_service_MdlTooltipPositionService])\n    ], MdlTooltipComponent);\n    return MdlTooltipComponent;\n}(mdl_tooltip_component_MdlSimpleTooltipComponent));\n\n\n// CONCATENATED MODULE: ./src/lib/components/tooltip/mdl-tooltip.directive.ts\nvar mdl_tooltip_directive_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_tooltip_directive_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_tooltip_directive_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar mdl_tooltip_directive_AbstractMdlTooltipDirective = /** @class */ (function () {\n    function AbstractMdlTooltipDirective(vcRef, large, componentFactoryResolver, renderer) {\n        this.vcRef = vcRef;\n        this.large = large;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.renderer = renderer;\n    }\n    AbstractMdlTooltipDirective.prototype.ngOnInit = function () {\n        // if the tooltip is not an instance of MdlTooltipComponent\n        // we create a simpleTooltipComponent on the fly.\n        if (!(this.tooltip instanceof mdl_tooltip_component_MdlTooltipComponent)) {\n            var cFactory = this.componentFactoryResolver.resolveComponentFactory(mdl_tooltip_component_MdlSimpleTooltipComponent);\n            var cRef = this.vcRef.createComponent(cFactory);\n            this.tooltipComponent = cRef.instance;\n            this.tooltipComponent.tooltipText = this.tooltip;\n            this.configureTooltipComponent();\n        }\n        else {\n            this.tooltipComponent = this.tooltip;\n            this.configureTooltipComponent();\n        }\n    };\n    AbstractMdlTooltipDirective.prototype.ngOnChanges = function (changes) {\n        if (changes['tooltip'] && !changes['tooltip'].isFirstChange()) {\n            if (!(this.tooltip instanceof mdl_tooltip_component_MdlTooltipComponent)) {\n                this.tooltipComponent.tooltipText = this.tooltip;\n            }\n        }\n    };\n    AbstractMdlTooltipDirective.prototype.configureTooltipComponent = function () {\n        this.tooltipComponent.large = this.large;\n        this.tooltipComponent.position = this.position;\n    };\n    AbstractMdlTooltipDirective.prototype.onMouseEnter = function (event) {\n        this.tooltipComponent.mouseEnter(event);\n    };\n    AbstractMdlTooltipDirective.prototype.onMouseLeave = function () {\n        this.tooltipComponent.mouseLeave();\n    };\n    mdl_tooltip_directive_decorate([\n        Object(core_[\"HostListener\"])('window:touchstart'),\n        mdl_tooltip_directive_metadata(\"design:type\", Function),\n        mdl_tooltip_directive_metadata(\"design:paramtypes\", []),\n        mdl_tooltip_directive_metadata(\"design:returntype\", void 0)\n    ], AbstractMdlTooltipDirective.prototype, \"onMouseLeave\", null);\n    return AbstractMdlTooltipDirective;\n}());\n\nvar mdl_tooltip_directive_host = {\n    '(mouseenter)': 'onMouseEnter($event)',\n    '(touchend)': 'onMouseEnter($event)',\n    '(mouseleave)': 'onMouseLeave()'\n};\nvar mdl_tooltip_directive_MdlTooltipDirective = /** @class */ (function (_super) {\n    mdl_tooltip_directive_extends(MdlTooltipDirective, _super);\n    function MdlTooltipDirective(vcRef, componentFactoryResolver, renderer) {\n        return _super.call(this, vcRef, false, componentFactoryResolver, renderer) || this;\n    }\n    MdlTooltipDirective.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };\n    MdlTooltipDirective.prototype.ngOnChanges = function (changes) { _super.prototype.ngOnChanges.call(this, changes); };\n    ;\n    mdl_tooltip_directive_decorate([\n        Object(core_[\"Input\"])('mdl-tooltip'),\n        mdl_tooltip_directive_metadata(\"design:type\", Object)\n    ], MdlTooltipDirective.prototype, \"tooltip\", void 0);\n    mdl_tooltip_directive_decorate([\n        Object(core_[\"Input\"])('mdl-tooltip-position'),\n        mdl_tooltip_directive_metadata(\"design:type\", String)\n    ], MdlTooltipDirective.prototype, \"position\", void 0);\n    MdlTooltipDirective = mdl_tooltip_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-tooltip]',\n            host: mdl_tooltip_directive_host\n        }),\n        mdl_tooltip_directive_metadata(\"design:paramtypes\", [core_[\"ViewContainerRef\"],\n            core_[\"ComponentFactoryResolver\"],\n            core_[\"Renderer2\"]])\n    ], MdlTooltipDirective);\n    return MdlTooltipDirective;\n}(mdl_tooltip_directive_AbstractMdlTooltipDirective));\n\nvar mdl_tooltip_directive_MdlTooltipLargeDirective = /** @class */ (function (_super) {\n    mdl_tooltip_directive_extends(MdlTooltipLargeDirective, _super);\n    function MdlTooltipLargeDirective(vcRef, componentFactoryResolver, renderer) {\n        return _super.call(this, vcRef, true, componentFactoryResolver, renderer) || this;\n    }\n    MdlTooltipLargeDirective.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };\n    MdlTooltipLargeDirective.prototype.ngOnChanges = function (changes) { _super.prototype.ngOnChanges.call(this, changes); };\n    ;\n    mdl_tooltip_directive_decorate([\n        Object(core_[\"Input\"])('mdl-tooltip-large'),\n        mdl_tooltip_directive_metadata(\"design:type\", Object)\n    ], MdlTooltipLargeDirective.prototype, \"tooltip\", void 0);\n    mdl_tooltip_directive_decorate([\n        Object(core_[\"Input\"])('mdl-tooltip-position'),\n        mdl_tooltip_directive_metadata(\"design:type\", String)\n    ], MdlTooltipLargeDirective.prototype, \"position\", void 0);\n    MdlTooltipLargeDirective = mdl_tooltip_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-tooltip-large]',\n            host: mdl_tooltip_directive_host\n        }),\n        mdl_tooltip_directive_metadata(\"design:paramtypes\", [core_[\"ViewContainerRef\"],\n            core_[\"ComponentFactoryResolver\"],\n            core_[\"Renderer2\"]])\n    ], MdlTooltipLargeDirective);\n    return MdlTooltipLargeDirective;\n}(mdl_tooltip_directive_AbstractMdlTooltipDirective));\n\n\n// CONCATENATED MODULE: ./src/lib/components/tooltip/index.ts\nvar tooltip_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\nvar MDL_TOOLTIP_DIRECTIVES = [\n    mdl_tooltip_component_MdlTooltipComponent,\n    mdl_tooltip_directive_MdlTooltipLargeDirective,\n    mdl_tooltip_directive_MdlTooltipDirective\n];\n\n\nvar tooltip_MdlTooltipModule = /** @class */ (function () {\n    function MdlTooltipModule() {\n    }\n    MdlTooltipModule_1 = MdlTooltipModule;\n    MdlTooltipModule.forRoot = function () {\n        return {\n            ngModule: MdlTooltipModule_1,\n            providers: []\n        };\n    };\n    var MdlTooltipModule_1;\n    MdlTooltipModule = MdlTooltipModule_1 = tooltip_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [],\n            exports: MDL_TOOLTIP_DIRECTIVES,\n            declarations: MDL_TOOLTIP_DIRECTIVES.concat([mdl_tooltip_component_MdlSimpleTooltipComponent]),\n            entryComponents: [mdl_tooltip_component_MdlSimpleTooltipComponent]\n        })\n    ], MdlTooltipModule);\n    return MdlTooltipModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/table/mdl-table.component.ts\nvar mdl_table_component_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_table_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_table_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar MdlDefaultTableModel = /** @class */ (function () {\n    function MdlDefaultTableModel(columns) {\n        this.data = [];\n        this.columns = columns;\n    }\n    MdlDefaultTableModel.prototype.addAll = function (data) {\n        var _a;\n        (_a = this.data).push.apply(_a, data);\n    };\n    return MdlDefaultTableModel;\n}());\n\nvar mdl_table_component_template = \"\\n        <table class=\\\"mdl-data-table\\\">\\n           <thead>\\n           <tr>\\n              <th *ngIf=\\\"selectable\\\">\\n                 <mdl-checkbox mdl-ripple [ngModel]=\\\"isAllSelected()\\\" (ngModelChange)=\\\"toogleAll()\\\"></mdl-checkbox>\\n              </th>\\n              <th *ngFor=\\\"let column of model.columns\\\"\\n                  [ngClass]=\\\"{'mdl-data-table__cell--non-numeric': !column.numeric}\\\">\\n                 {{column.name}}\\n              </th>\\n           </tr>\\n           </thead>\\n           <tbody>\\n           <tr *ngFor=\\\"let data of model.data; let i = index\\\" [ngClass]=\\\"{'is-selected': selectable && data.selected}\\\">\\n              <td *ngIf=\\\"selectable\\\">\\n                 <mdl-checkbox mdl-ripple\\n                      [(ngModel)]=\\\"data.selected\\\"\\n                      (ngModelChange)=\\\"selectionChanged(data)\\\"></mdl-checkbox>\\n              </td>\\n              <td *ngFor=\\\"let column of model.columns\\\"\\n                  [ngClass]=\\\"{'mdl-data-table__cell--non-numeric': !column.numeric}\\\"\\n                  [innerHTML]=\\\"data[column.key]\\\">\\n              </td>\\n           </tr>\\n           </tbody>\\n        </table>  \\n    \";\nvar styles = [\n    \"\\n    :host{\\n      display:inline-block;\\n    }\\n    \"\n];\nvar mdl_table_component_MdlTableComponent = /** @class */ (function () {\n    function MdlTableComponent() {\n        this.selectable = false;\n    }\n    mdl_table_component_decorate([\n        Object(core_[\"Input\"])('table-model'),\n        mdl_table_component_metadata(\"design:type\", Object)\n    ], MdlTableComponent.prototype, \"model\", void 0);\n    MdlTableComponent = mdl_table_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-table',\n            template: mdl_table_component_template,\n            styles: styles,\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlTableComponent);\n    return MdlTableComponent;\n}());\n\nvar mdl_table_component_MdlSelectableTableComponent = /** @class */ (function (_super) {\n    mdl_table_component_extends(MdlSelectableTableComponent, _super);\n    function MdlSelectableTableComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.selectionChange = new core_[\"EventEmitter\"]();\n        _this.selectable = true;\n        _this.allSelected = false;\n        return _this;\n    }\n    MdlSelectableTableComponent.prototype.isAllSelected = function () {\n        return this.model.data.every(function (data) { return data.selected; });\n    };\n    MdlSelectableTableComponent.prototype.toogleAll = function () {\n        var selected = !this.isAllSelected();\n        this.model.data.forEach(function (data) { return data.selected = selected; });\n        this.updateSelected();\n    };\n    MdlSelectableTableComponent.prototype.updateSelected = function () {\n        this.selected = this.model.data.filter(function (data) { return data.selected; });\n        this.selectionChange.emit({ value: this.selected });\n    };\n    MdlSelectableTableComponent.prototype.selectionChanged = function (data) {\n        this.updateSelected();\n    };\n    mdl_table_component_decorate([\n        Object(core_[\"Input\"])('table-model'),\n        mdl_table_component_metadata(\"design:type\", Object)\n    ], MdlSelectableTableComponent.prototype, \"model\", void 0);\n    mdl_table_component_decorate([\n        Object(core_[\"Input\"])('table-model-selected'),\n        mdl_table_component_metadata(\"design:type\", Array)\n    ], MdlSelectableTableComponent.prototype, \"selected\", void 0);\n    mdl_table_component_decorate([\n        Object(core_[\"Output\"])('table-model-selectionChanged'),\n        mdl_table_component_metadata(\"design:type\", Object)\n    ], MdlSelectableTableComponent.prototype, \"selectionChange\", void 0);\n    MdlSelectableTableComponent = mdl_table_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-table-selectable',\n            template: mdl_table_component_template,\n            styles: styles,\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlSelectableTableComponent);\n    return MdlSelectableTableComponent;\n}(mdl_table_component_MdlTableComponent));\n\n\n// CONCATENATED MODULE: ./src/lib/components/table/index.ts\nvar table_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\nvar MDL_TABLE_DIRECTIVES = [\n    mdl_table_component_MdlTableComponent,\n    mdl_table_component_MdlSelectableTableComponent\n];\nvar table_MdlTableModule = /** @class */ (function () {\n    function MdlTableModule() {\n    }\n    MdlTableModule_1 = MdlTableModule;\n    MdlTableModule.forRoot = function () {\n        return {\n            ngModule: MdlTableModule_1,\n            providers: []\n        };\n    };\n    var MdlTableModule_1;\n    MdlTableModule = MdlTableModule_1 = table_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [mdl_checkbox_component_MdlCheckboxModule, mdl_ripple_directive_MdlRippleModule, common_[\"CommonModule\"], forms_[\"FormsModule\"]],\n            exports: MDL_TABLE_DIRECTIVES,\n            declarations: MDL_TABLE_DIRECTIVES,\n        })\n    ], MdlTableModule);\n    return MdlTableModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/menu/mdl-menu-item.component.ts\nvar mdl_menu_item_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_menu_item_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_menu_item_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\nvar mdl_menu_item_component_MdlMenuItemComponent = /** @class */ (function () {\n    // forwardRef is needed because of he circular dependency menu queries menuitems; menuitem needs the parent\n    function MdlMenuItemComponent(elementRef, renderer, mdlMenu) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.mdlMenu = mdlMenu;\n        this._disabled = false;\n        this.element = elementRef.nativeElement;\n    }\n    Object.defineProperty(MdlMenuItemComponent.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlMenuItemComponent.prototype.onClick = function ($event) {\n        $event.stopPropagation();\n        if (this.disabled) {\n            this.mdlMenu.hide();\n            return;\n        }\n        this.mdlMenu.hideOnItemClicked();\n    };\n    // we need to register a touchstart at the window to get informed if the user taps outside the menu.\n    // But if we register a touchstart event - safari will no longer convert touch events to click events.\n    // So we need to convert touch to click and the user still needs to register a (click) listener to be\n    // informed if the menu item has clicked.\n    MdlMenuItemComponent.prototype.onTouch = function ($event) {\n        // ensure that this event is totally consumed\n        $event.stopPropagation();\n        $event.preventDefault();\n        var event = new MouseEvent('click', { bubbles: true });\n        callNative(this.element, 'dispatchEvent', event);\n    };\n    mdl_menu_item_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_menu_item_component_metadata(\"design:type\", Boolean),\n        mdl_menu_item_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlMenuItemComponent.prototype, \"disabled\", null);\n    MdlMenuItemComponent = mdl_menu_item_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-menu-item',\n            host: {\n                '[class.mdl-menu__item]': 'true',\n                'tabindex': '-1',\n                '(click)': 'onClick($event)',\n                '(touchstart)': 'onTouch($event)'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_menu_item_component_param(2, Object(core_[\"Inject\"])(Object(core_[\"forwardRef\"])(function () { return mdl_menu_component_MdlMenuComponent; }))),\n        mdl_menu_item_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"],\n            core_[\"Renderer2\"],\n            mdl_menu_component_MdlMenuComponent])\n    ], MdlMenuItemComponent);\n    return MdlMenuItemComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/menu/mdl-menu.component.ts\nvar mdl_menu_component_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_menu_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_menu_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\nvar BOTTOM_LEFT = 'bottom-left';\nvar BOTTOM_RIGHT = 'bottom-right';\nvar TOP_LEFT = 'top-left';\nvar TOP_RIGHT = 'top-right';\nvar UNALIGNED = 'unaligned';\n// Total duration of the menu animation.\nvar TRANSITION_DURATION_SECONDS = 0.3;\n// The fraction of the total duration we want to use for menu item animations.\nvar TRANSITION_DURATION_FRACTION = 0.8;\n// How long the menu stays open after choosing an option (so the user can see\n// the ripple).\nvar CLOSE_TIMEOUT = 175;\nvar CSS_ALIGN_MAP = {};\nCSS_ALIGN_MAP[BOTTOM_LEFT] = 'mdl-menu--bottom-left';\nCSS_ALIGN_MAP[BOTTOM_RIGHT] = 'mdl-menu--bottom-right';\nCSS_ALIGN_MAP[TOP_LEFT] = 'mdl-menu--top-left';\nCSS_ALIGN_MAP[TOP_RIGHT] = 'mdl-menu--top-right';\nCSS_ALIGN_MAP[UNALIGNED] = 'mdl-menu--unaligned';\nvar MdlMenuError = /** @class */ (function (_super) {\n    mdl_menu_component_extends(MdlMenuError, _super);\n    function MdlMenuError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MdlMenuError;\n}(MdlError));\n\nvar mdl_menu_component_MdlMenuRegisty = /** @class */ (function () {\n    function MdlMenuRegisty() {\n        this.menuComponents = [];\n    }\n    MdlMenuRegisty.prototype.add = function (menuComponent) {\n        this.menuComponents.push(menuComponent);\n    };\n    MdlMenuRegisty.prototype.remove = function (menuComponent) {\n        var fromIndex = this.menuComponents.indexOf(menuComponent);\n        this.menuComponents.splice(fromIndex, 1);\n    };\n    MdlMenuRegisty.prototype.hideAllExcept = function (menuComponent) {\n        this.menuComponents.forEach(function (component) {\n            if (component !== menuComponent) {\n                component.hide();\n            }\n        });\n    };\n    MdlMenuRegisty = mdl_menu_component_decorate([\n        Object(core_[\"Injectable\"])()\n    ], MdlMenuRegisty);\n    return MdlMenuRegisty;\n}());\n\nvar mdl_menu_component_MdlMenuComponent = /** @class */ (function () {\n    function MdlMenuComponent(renderer, menuRegistry) {\n        this.renderer = renderer;\n        this.menuRegistry = menuRegistry;\n        this.cssPosition = 'mdl-menu--bottom-left';\n        this.isVisible = false;\n        this.menuRegistry.add(this);\n    }\n    MdlMenuComponent.prototype.ngOnInit = function () {\n        this.cssPosition = CSS_ALIGN_MAP[this.position] || BOTTOM_LEFT;\n    };\n    MdlMenuComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this.container = this.containerChild.nativeElement;\n        this.menuElement = this.menuElementChild.nativeElement;\n        this.outline = this.outlineChild.nativeElement;\n        // Add a click listener to the document, to close the menu.\n        var callback = function () {\n            if (_this.isVisible) {\n                _this.hide();\n            }\n            return true;\n        };\n        this.renderer.listen('window', 'click', callback);\n        this.renderer.listen('window', 'touchstart', callback);\n    };\n    MdlMenuComponent.prototype.toggle = function (event, mdlButton) {\n        if (!mdlButton) {\n            throw new MdlMenuError(\"MdlButtonComponent is required\");\n        }\n        if (this.isVisible) {\n            this.hide();\n        }\n        else {\n            this.show(event, mdlButton);\n        }\n    };\n    MdlMenuComponent.prototype.hideOnItemClicked = function () {\n        var _this = this;\n        // Wait some time before closing menu, so the user can see the ripple.\n        setTimeout(function () {\n            _this.hide();\n        }, CLOSE_TIMEOUT);\n    };\n    MdlMenuComponent.prototype.hide = function () {\n        // Remove all transition delays; menu items fade out concurrently.\n        this.menuItemComponents.toArray().forEach(function (mi) {\n            mi.element.style.removeProperty('transition-delay');\n        });\n        // Measure the inner element.\n        var rect = this.menuElement.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.renderer.addClass(this.menuElement, 'is-animating');\n        this.applyClip(height, width);\n        this.renderer.removeClass(this.container, 'is-visible');\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener();\n        this.isVisible = false;\n    };\n    MdlMenuComponent.prototype.show = function (event, mdlButton) {\n        var _this = this;\n        this.menuRegistry.hideAllExcept(this);\n        event.stopPropagation();\n        var forElement = mdlButton.element;\n        var rect = forElement.getBoundingClientRect();\n        var forRect = forElement.parentElement.getBoundingClientRect();\n        if (this.position == UNALIGNED) {\n            // Do not position the menu automatically. Requires the developer to\n            // manually specify position.\n        }\n        else if (this.position == BOTTOM_RIGHT) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container.style.right = (forRect.right - rect.right) + 'px';\n            this.container.style.top = forElement.offsetTop + forElement.offsetHeight + 'px';\n        }\n        else if (this.position == TOP_LEFT) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container.style.left = forElement.offsetLeft + 'px';\n            this.container.style.bottom = (forRect.bottom - rect.top) + 'px';\n        }\n        else if (this.position == TOP_RIGHT) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container.style.right = (forRect.right - rect.right) + 'px';\n            this.container.style.bottom = (forRect.bottom - rect.top) + 'px';\n        }\n        else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container.style.left = forElement.offsetLeft + 'px';\n            this.container.style.top = forElement.offsetTop + forElement.offsetHeight + 'px';\n        }\n        // Measure the inner element.\n        var height = this.menuElement.getBoundingClientRect().height;\n        var width = this.menuElement.getBoundingClientRect().width;\n        this.container.style.width = width + 'px';\n        this.container.style.height = height + 'px';\n        this.outline.style.width = width + 'px';\n        this.outline.style.height = height + 'px';\n        var transitionDuration = TRANSITION_DURATION_SECONDS * TRANSITION_DURATION_FRACTION;\n        this.menuItemComponents.toArray().forEach(function (mi) {\n            var itemDelay = null;\n            if ((_this.position == TOP_LEFT) || _this.position == TOP_RIGHT) {\n                itemDelay = ((height - mi.element.offsetTop - mi.element.offsetHeight) / height * transitionDuration) + 's';\n            }\n            else {\n                itemDelay = (mi.element.offsetTop / height * transitionDuration) + 's';\n            }\n            mi.element.style.transitionDelay = itemDelay;\n        });\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip(height, width);\n        this.renderer.addClass(this.container, 'is-visible');\n        this.menuElement.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n        this.renderer.addClass(this.menuElement, 'is-animating');\n        this.addAnimationEndListener();\n        this.isVisible = true;\n    };\n    MdlMenuComponent.prototype.addAnimationEndListener = function () {\n        var _this = this;\n        this.renderer.listen(this.menuElement, 'transitionend', function () {\n            _this.renderer.removeClass(_this.menuElement, 'is-animating');\n            return true;\n        });\n    };\n    MdlMenuComponent.prototype.applyClip = function (height, width) {\n        if (this.position == UNALIGNED) {\n            // Do not clip.\n            this.menuElement.style.clip = '';\n        }\n        else if (this.position == BOTTOM_RIGHT) {\n            // Clip to the top right corner of the menu.\n            this.menuElement.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n        }\n        else if (this.position == TOP_LEFT) {\n            // Clip to the bottom left corner of the menu.\n            this.menuElement.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n        }\n        else if (this.position == TOP_RIGHT) {\n            // Clip to the bottom right corner of the menu.\n            this.menuElement.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n        }\n        else {\n            // Default: do not clip (same as clipping to the top left corner).\n            this.menuElement.style.clip = '';\n        }\n    };\n    MdlMenuComponent.prototype.ngOnDestroy = function () {\n        this.menuRegistry.remove(this);\n    };\n    mdl_menu_component_decorate([\n        Object(core_[\"Input\"])('mdl-menu-position'),\n        mdl_menu_component_metadata(\"design:type\", String)\n    ], MdlMenuComponent.prototype, \"position\", void 0);\n    mdl_menu_component_decorate([\n        Object(core_[\"ViewChild\"])('container'),\n        mdl_menu_component_metadata(\"design:type\", core_[\"ElementRef\"])\n    ], MdlMenuComponent.prototype, \"containerChild\", void 0);\n    mdl_menu_component_decorate([\n        Object(core_[\"ViewChild\"])('menuElement'),\n        mdl_menu_component_metadata(\"design:type\", core_[\"ElementRef\"])\n    ], MdlMenuComponent.prototype, \"menuElementChild\", void 0);\n    mdl_menu_component_decorate([\n        Object(core_[\"ViewChild\"])('outline'),\n        mdl_menu_component_metadata(\"design:type\", core_[\"ElementRef\"])\n    ], MdlMenuComponent.prototype, \"outlineChild\", void 0);\n    mdl_menu_component_decorate([\n        Object(core_[\"ContentChildren\"])(mdl_menu_item_component_MdlMenuItemComponent),\n        mdl_menu_component_metadata(\"design:type\", core_[\"QueryList\"])\n    ], MdlMenuComponent.prototype, \"menuItemComponents\", void 0);\n    MdlMenuComponent = mdl_menu_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-menu',\n            host: {},\n            exportAs: 'mdlMenu',\n            template: \"\\n   <div #container class=\\\"mdl-menu__container is-upgraded\\\">\\n      <div #outline class=\\\"mdl-menu__outline\\\"\\n         [ngClass]=\\\"cssPosition\\\"\\n      ></div>\\n      <div class=\\\"mdl-menu\\\" #menuElement>\\n         <ng-content></ng-content>\\n      </div>\\n   </div>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_menu_component_metadata(\"design:paramtypes\", [core_[\"Renderer2\"], mdl_menu_component_MdlMenuRegisty])\n    ], MdlMenuComponent);\n    return MdlMenuComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/menu/mdl-menu-item.directive.ts\nvar mdl_menu_item_directive_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar mdl_menu_item_directive_MdlMenuItemFullBleedDeviderComponent = /** @class */ (function () {\n    function MdlMenuItemFullBleedDeviderComponent() {\n    }\n    MdlMenuItemFullBleedDeviderComponent = mdl_menu_item_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-menu-item-full-bleed-divider]',\n            host: {\n                '[class.mdl-menu__item--full-bleed-divider]': 'true'\n            }\n        })\n    ], MdlMenuItemFullBleedDeviderComponent);\n    return MdlMenuItemFullBleedDeviderComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/menu/mdl-toggle-menu.directive.ts\nvar mdl_toggle_menu_directive_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_toggle_menu_directive_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\nvar mdl_toggle_menu_directive_MdlToggleMenuDirective = /** @class */ (function () {\n    function MdlToggleMenuDirective(button) {\n        this.button = button;\n    }\n    MdlToggleMenuDirective.prototype.onClick = function ($event) {\n        this.menu.toggle($event, this.button);\n    };\n    mdl_toggle_menu_directive_decorate([\n        Object(core_[\"Input\"])('mdl-toggle-menu'),\n        mdl_toggle_menu_directive_metadata(\"design:type\", mdl_menu_component_MdlMenuComponent)\n    ], MdlToggleMenuDirective.prototype, \"menu\", void 0);\n    mdl_toggle_menu_directive_decorate([\n        Object(core_[\"HostListener\"])('click', ['$event']),\n        mdl_toggle_menu_directive_metadata(\"design:type\", Function),\n        mdl_toggle_menu_directive_metadata(\"design:paramtypes\", [Object]),\n        mdl_toggle_menu_directive_metadata(\"design:returntype\", void 0)\n    ], MdlToggleMenuDirective.prototype, \"onClick\", null);\n    MdlToggleMenuDirective = mdl_toggle_menu_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: '[mdl-button][mdl-toggle-menu]'\n        }),\n        mdl_toggle_menu_directive_metadata(\"design:paramtypes\", [mdl_button_component_MdlButtonComponent])\n    ], MdlToggleMenuDirective);\n    return MdlToggleMenuDirective;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/menu/index.ts\nvar menu_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\nvar MDL_MENU_DIRECTIVES = [\n    mdl_menu_component_MdlMenuComponent,\n    mdl_menu_item_component_MdlMenuItemComponent,\n    mdl_menu_item_directive_MdlMenuItemFullBleedDeviderComponent,\n    mdl_toggle_menu_directive_MdlToggleMenuDirective\n];\n\n\n\nvar menu_MdlMenuModule = /** @class */ (function () {\n    function MdlMenuModule() {\n    }\n    MdlMenuModule_1 = MdlMenuModule;\n    MdlMenuModule.forRoot = function () {\n        return {\n            ngModule: MdlMenuModule_1,\n            providers: [mdl_menu_component_MdlMenuRegisty]\n        };\n    };\n    var MdlMenuModule_1;\n    MdlMenuModule = MdlMenuModule_1 = menu_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [common_[\"CommonModule\"]],\n            exports: MDL_MENU_DIRECTIVES,\n            declarations: MDL_MENU_DIRECTIVES,\n        })\n    ], MdlMenuModule);\n    return MdlMenuModule;\n}());\n\n\n// EXTERNAL MODULE: external {\"root\":[\"ng\",\"platformBrowser\"],\"commonjs\":\"@angular/platform-browser\",\"commonjs2\":\"@angular/platform-browser\",\"amd\":\"@angular/platform-browser\"}\nvar platform_browser_ = __webpack_require__(\"@angular/platform-browser\");\n\n// CONCATENATED MODULE: ./src/lib/components/layout/mdl-layout-header.component.ts\nvar mdl_layout_header_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_layout_header_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_layout_header_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\nvar mdl_layout_header_component_MdlLayoutHeaderComponent = /** @class */ (function () {\n    function MdlLayoutHeaderComponent(elementRef, renderer, mdlLayout) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.mdlLayout = mdlLayout;\n        this.isCompact = false;\n        this.isAnimating = false;\n        this.isSeamed = false;\n        this.isRipple = true;\n        this.el = elementRef.nativeElement;\n    }\n    MdlLayoutHeaderComponent.prototype.onTransitionEnd = function () {\n        this.isAnimating = false;\n    };\n    MdlLayoutHeaderComponent.prototype.onClick = function () {\n        if (this.isCompact) {\n            this.isCompact = false;\n            this.isAnimating = true;\n        }\n    };\n    MdlLayoutHeaderComponent = mdl_layout_header_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-layout-header',\n            host: {\n                '[class.mdl-layout__header]': 'true',\n                '[class.is-casting-shadow]': 'mode===\"standard\" || isCompact',\n                '[class.mdl-layout__header--seamed]': 'isSeamed',\n                '[class.mdl-layout__header--waterfall]': 'mode===\"waterfall\"',\n                '[class.mdl-layout__header--scroll]': 'mode===\"scroll\"',\n                '[class.is-compact]': 'isCompact',\n                '(transitionend)': 'onTransitionEnd()',\n                '(click)': 'onClick()'\n            },\n            template: \"\\n     <ng-content></ng-content>\\n     <div *ngIf=\\\"tabs?.toArray()?.length > 0\\\" class=\\\"mdl-layout__tab-bar-container\\\">\\n         <div class=\\\"mdl-layout__tab-bar is-casting-shadow\\\">\\n           <div *ngFor=\\\"let tab of tabs.toArray()\\\" \\n                class=\\\"mdl-layout__tab\\\" \\n                [ngClass]=\\\"{'is-active': tab.isActive}\\\"\\n                (mouseover)=\\\"mdlLayout.onTabMouseover(tab)\\\" \\n                (mouseout)=\\\"mdlLayout.onTabMouseout(tab)\\\">\\n              <div \\n                *ngIf=\\\"tab.titleComponent\\\" \\n                (click)=\\\"mdlLayout.tabSelected(tab)\\\"\\n                [mdl-ripple]=\\\"isRipple\\\"\\n                [append-view-container-ref]=\\\"tab.titleComponent.vcRef\\\"></div>\\n              <a *ngIf=\\\"!tab.titleComponent\\\" \\n                    href=\\\"javascript:void(0)\\\"   \\n                    (click)=\\\"mdlLayout.tabSelected(tab)\\\"\\n                    class=\\\"mdl-layout__tab\\\" \\n                    [ngClass]=\\\"{'is-active': tab.isActive}\\\"\\n                    [mdl-ripple]=\\\"isRipple\\\"\\n                   >{{tab.title}}</a>\\n             </div>\\n         </div>\\n     </div>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_layout_header_component_param(2, Object(core_[\"Inject\"])(Object(core_[\"forwardRef\"])(function () { return mdl_layout_component_MdlLayoutComponent; }))),\n        mdl_layout_header_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"],\n            core_[\"Renderer2\"],\n            mdl_layout_component_MdlLayoutComponent])\n    ], MdlLayoutHeaderComponent);\n    return MdlLayoutHeaderComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/layout/mdl-layout-drawer.component.ts\nvar mdl_layout_drawer_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_layout_drawer_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_layout_drawer_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\nvar mdl_layout_drawer_component_MdlLayoutDrawerComponent = /** @class */ (function () {\n    function MdlLayoutDrawerComponent(parentLayout) {\n        this.parentLayout = parentLayout;\n        this.isDrawerVisible = false;\n    }\n    MdlLayoutDrawerComponent.prototype.isDrawerDirectChildOf = function (layout) {\n        return this.parentLayout === layout;\n    };\n    MdlLayoutDrawerComponent = mdl_layout_drawer_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-layout-drawer',\n            host: {\n                '[class.mdl-layout__drawer]': 'true',\n                '[class.is-visible]': 'isDrawerVisible'\n            },\n            template: \"<ng-content></ng-content>\",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_layout_drawer_component_param(0, Object(core_[\"Optional\"])()), mdl_layout_drawer_component_param(0, Object(core_[\"Inject\"])(Object(core_[\"forwardRef\"])(function () { return mdl_layout_component_MdlLayoutComponent; }))),\n        mdl_layout_drawer_component_metadata(\"design:paramtypes\", [mdl_layout_component_MdlLayoutComponent])\n    ], MdlLayoutDrawerComponent);\n    return MdlLayoutDrawerComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/tabs/mdl-tab-panel-title.component.ts\nvar mdl_tab_panel_title_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_tab_panel_title_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar mdl_tab_panel_title_component_MdlTabPanelTitleComponent = /** @class */ (function () {\n    function MdlTabPanelTitleComponent(vcRef) {\n        this.vcRef = vcRef;\n    }\n    MdlTabPanelTitleComponent = mdl_tab_panel_title_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-tab-panel-title',\n            template: \"\\n   <ng-content></ng-content>\\n   \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_tab_panel_title_component_metadata(\"design:paramtypes\", [core_[\"ViewContainerRef\"]])\n    ], MdlTabPanelTitleComponent);\n    return MdlTabPanelTitleComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/tabs/mdl-tab-panel.component.ts\nvar mdl_tab_panel_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_tab_panel_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar mdl_tab_panel_component_MdlTabPanelContent = /** @class */ (function () {\n    function MdlTabPanelContent() {\n    }\n    MdlTabPanelContent = mdl_tab_panel_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-tab-panel-content',\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlTabPanelContent);\n    return MdlTabPanelContent;\n}());\n\nvar mdl_tab_panel_component_MdlTabPanelComponent = /** @class */ (function () {\n    function MdlTabPanelComponent() {\n        this.isActive = false;\n    }\n    mdl_tab_panel_component_decorate([\n        Object(core_[\"ContentChild\"])(mdl_tab_panel_title_component_MdlTabPanelTitleComponent),\n        mdl_tab_panel_component_metadata(\"design:type\", Object)\n    ], MdlTabPanelComponent.prototype, \"titleComponent\", void 0);\n    mdl_tab_panel_component_decorate([\n        Object(core_[\"Input\"])('mdl-tab-panel-title'),\n        mdl_tab_panel_component_metadata(\"design:type\", Object)\n    ], MdlTabPanelComponent.prototype, \"title\", void 0);\n    mdl_tab_panel_component_decorate([\n        Object(core_[\"Input\"])('disabled'),\n        mdl_tab_panel_component_metadata(\"design:type\", Object)\n    ], MdlTabPanelComponent.prototype, \"disabled\", void 0);\n    MdlTabPanelComponent = mdl_tab_panel_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-tab-panel',\n            host: {\n                '[class.mdl-tabs__panel]': 'true',\n                '[class.is-active]': 'isActive'\n            },\n            template: \"\\n   <ng-content *ngIf=\\\"titleComponent\\\" select=\\\"mdl-tab-panel-content\\\"></ng-content>\\n   <ng-content *ngIf=\\\"!titleComponent\\\"></ng-content>\\n   \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlTabPanelComponent);\n    return MdlTabPanelComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/tabs/mdl-tabs.component.ts\nvar mdl_tabs_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_tabs_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\nvar mdl_tabs_component_MdlTabsComponent = /** @class */ (function () {\n    function MdlTabsComponent() {\n        this._selectedIndex = 0;\n        this._isRipple = false;\n        this.selectedTabEmitter = new core_[\"EventEmitter\"]();\n    }\n    Object.defineProperty(MdlTabsComponent.prototype, \"selectedIndex\", {\n        get: function () { return this._selectedIndex; },\n        set: function (value) { this._selectedIndex = toNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlTabsComponent.prototype, \"isRipple\", {\n        get: function () { return this._isRipple; },\n        set: function (value) { this._isRipple = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlTabsComponent.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // the initial tabs\n        this.updateSelectedTabIndex();\n        // listen to tab changes - this would not be necessary if this would be fixed:\n        // https://github.com/angular/angular/issues/12818\n        this.tabs.changes.subscribe(function () {\n            _this.updateSelectedTabIndex();\n        });\n    };\n    MdlTabsComponent.prototype.ngOnChanges = function (changes) {\n        if (changes['selectedIndex']) {\n            this.updateSelectedTabIndex();\n        }\n    };\n    MdlTabsComponent.prototype.updateSelectedTabIndex = function () {\n        var _this = this;\n        if (this.tabs) {\n            // https://github.com/angular/angular/issues/6005\n            // this would not be necessare if this would be fixed: https://github.com/angular/angular/issues/12818\n            setTimeout(function () {\n                _this.tabs.forEach(function (tab, idx) {\n                    tab.isActive = _this.selectedIndex === idx;\n                });\n            }, 1);\n        }\n    };\n    MdlTabsComponent.prototype.tabSelected = function (tab) {\n        if (tab.disabled) {\n            return;\n        }\n        var index = this.tabs.toArray().indexOf(tab);\n        if (index != this.selectedIndex) {\n            this.selectedIndex = index;\n            this.updateSelectedTabIndex();\n            this.selectedTabEmitter.emit({ index: this.selectedIndex });\n        }\n    };\n    mdl_tabs_component_decorate([\n        Object(core_[\"Input\"])('mdl-tab-active-index'),\n        mdl_tabs_component_metadata(\"design:type\", Object),\n        mdl_tabs_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTabsComponent.prototype, \"selectedIndex\", null);\n    mdl_tabs_component_decorate([\n        Object(core_[\"Input\"])('mdl-ripple'),\n        mdl_tabs_component_metadata(\"design:type\", Object),\n        mdl_tabs_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTabsComponent.prototype, \"isRipple\", null);\n    mdl_tabs_component_decorate([\n        Object(core_[\"Output\"])('mdl-tab-active-changed'),\n        mdl_tabs_component_metadata(\"design:type\", Object)\n    ], MdlTabsComponent.prototype, \"selectedTabEmitter\", void 0);\n    mdl_tabs_component_decorate([\n        Object(core_[\"ContentChildren\"])(mdl_tab_panel_component_MdlTabPanelComponent),\n        mdl_tabs_component_metadata(\"design:type\", core_[\"QueryList\"])\n    ], MdlTabsComponent.prototype, \"tabs\", void 0);\n    MdlTabsComponent = mdl_tabs_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-tabs',\n            host: {\n                '[class.mdl-tabs]': 'true',\n                '[class.is-upgraded]': 'true'\n            },\n            template: \"\\n   <div class=\\\"mdl-tabs__tab-bar\\\">\\n      <div *ngFor=\\\"let tab of tabs.toArray()\\\">\\n        <div\\n          *ngIf=\\\"tab.titleComponent\\\"\\n          class=\\\"mdl-tabs__tab\\\"\\n          (click)=\\\"tabSelected(tab)\\\"\\n          [mdl-ripple]=\\\"isRipple && !tab.disabled\\\"\\n          [ngClass]=\\\"{'is-active': tab.isActive, 'disabled': tab.disabled}\\\"\\n          [append-view-container-ref]=\\\"tab.titleComponent.vcRef\\\"></div>\\n        <a *ngIf=\\\"!tab.titleComponent\\\" href=\\\"javascript:void(0)\\\"\\n              (click)=\\\"tabSelected(tab)\\\"\\n              class=\\\"mdl-tabs__tab\\\"\\n              [mdl-ripple]=\\\"isRipple && !tab.disabled\\\"\\n              [ngClass]=\\\"{'is-active': tab.isActive, 'disabled': tab.disabled}\\\">{{tab.title}}</a>\\n       </div>\\n  </div>\\n  <ng-content></ng-content>\\n  \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlTabsComponent);\n    return MdlTabsComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/tabs/index.ts\nvar tabs_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n\nvar MDL_TABS_DIRECTIVES = [\n    mdl_tabs_component_MdlTabsComponent,\n    mdl_tab_panel_component_MdlTabPanelComponent,\n    mdl_tab_panel_title_component_MdlTabPanelTitleComponent,\n    mdl_tab_panel_component_MdlTabPanelContent\n];\nvar tabs_MdlTabsModule = /** @class */ (function () {\n    function MdlTabsModule() {\n    }\n    MdlTabsModule_1 = MdlTabsModule;\n    MdlTabsModule.forRoot = function () {\n        return {\n            ngModule: MdlTabsModule_1,\n            providers: []\n        };\n    };\n    var MdlTabsModule_1;\n    MdlTabsModule = MdlTabsModule_1 = tabs_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [mdl_ripple_directive_MdlRippleModule, common_MdlCommonsModule, common_[\"CommonModule\"]],\n            exports: MDL_TABS_DIRECTIVES,\n            declarations: MDL_TABS_DIRECTIVES.slice(),\n        })\n    ], MdlTabsModule);\n    return MdlTabsModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/layout/mdl-layout-tab-panel.component.ts\nvar mdl_layout_tab_panel_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_layout_tab_panel_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar mdl_layout_tab_panel_component_MdlLayoutTabPanelComponent = /** @class */ (function () {\n    function MdlLayoutTabPanelComponent() {\n        this.isActive = false;\n    }\n    mdl_layout_tab_panel_component_decorate([\n        Object(core_[\"ContentChild\"])(mdl_tab_panel_title_component_MdlTabPanelTitleComponent),\n        mdl_layout_tab_panel_component_metadata(\"design:type\", Object)\n    ], MdlLayoutTabPanelComponent.prototype, \"titleComponent\", void 0);\n    mdl_layout_tab_panel_component_decorate([\n        Object(core_[\"Input\"])('mdl-layout-tab-panel-title'),\n        mdl_layout_tab_panel_component_metadata(\"design:type\", Object)\n    ], MdlLayoutTabPanelComponent.prototype, \"title\", void 0);\n    MdlLayoutTabPanelComponent = mdl_layout_tab_panel_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-layout-tab-panel',\n            host: {\n                '[class.mdl-layout__tab-panel]': 'true',\n                '[class.is-active]': 'isActive'\n            },\n            template: \"\\n   <ng-content *ngIf=\\\"titleComponent\\\" select=\\\"mdl-tab-panel-content\\\"></ng-content>\\n   <ng-content *ngIf=\\\"!titleComponent\\\"></ng-content>\\n   \",\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlLayoutTabPanelComponent);\n    return MdlLayoutTabPanelComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/layout/mdl-layout-content.component.ts\nvar mdl_layout_content_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_layout_content_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar mdl_layout_content_component_MdlLayoutContentComponent = /** @class */ (function () {\n    function MdlLayoutContentComponent(elRef) {\n        this.elRef = elRef;\n        this.el = elRef.nativeElement;\n    }\n    mdl_layout_content_component_decorate([\n        Object(core_[\"ContentChildren\"])(mdl_layout_tab_panel_component_MdlLayoutTabPanelComponent),\n        mdl_layout_content_component_metadata(\"design:type\", core_[\"QueryList\"])\n    ], MdlLayoutContentComponent.prototype, \"tabs\", void 0);\n    MdlLayoutContentComponent = mdl_layout_content_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-layout-content',\n            host: {\n                '[class.mdl-layout__content]': 'true',\n            },\n            template: \"<ng-content></ng-content>\",\n            encapsulation: core_[\"ViewEncapsulation\"].None,\n        }),\n        mdl_layout_content_component_metadata(\"design:paramtypes\", [core_[\"ElementRef\"]])\n    ], MdlLayoutContentComponent);\n    return MdlLayoutContentComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/layout/mdl-layout.component.ts\nvar mdl_layout_component_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar mdl_layout_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_layout_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_layout_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\n\n\n\n\n\nvar ESCAPE = 27;\nvar STANDARD = 'standard';\nvar WATERFALL = 'waterfall';\nvar SCROLL = 'scroll';\n/**\n * The LAYOUT_SCREEN_SIZE_THRESHOLD can be changed at the root module. Just provide a value for this InjectionToken:\n *\n * providers: [\n *  {provide:LAYOUT_SCREEN_SIZE_THRESHOLD, useValue: 768 }\n * ]\n *\n * you also need to change the scss variable to the same value: $layout-screen-size-threshold: 768px.\n *\n * It should be clear that this can only be used if you are using the scss and not the pre compiled css from getmdl.io.\n *\n * @type {InjectionToken}\n */\nvar LAYOUT_SCREEN_SIZE_THRESHOLD = new core_[\"InjectionToken\"]('layoutScreenSizeThreshold');\nvar MdLUnsupportedLayoutTypeError = /** @class */ (function (_super) {\n    mdl_layout_component_extends(MdLUnsupportedLayoutTypeError, _super);\n    function MdLUnsupportedLayoutTypeError(type) {\n        /* istanbul ignore next */\n        return _super.call(this, \"Layout type \\\"\" + type + \"\\\" isn't supported by mdl-layout (allowed: standard, waterfall, scroll).\") || this;\n    }\n    return MdLUnsupportedLayoutTypeError;\n}(MdlError));\n\nvar mdl_layout_component_MdlScreenSizeService = /** @class */ (function () {\n    function MdlScreenSizeService(ngZone, layoutScreenSizeThreshold) {\n        var _this = this;\n        this.layoutScreenSizeThreshold = layoutScreenSizeThreshold;\n        this.sizesSubject = new external_root_rxjs_commonjs_rxjs_commonjs2_rxjs_amd_rxjs_[\"BehaviorSubject\"](false);\n        // if no value is injected the default size wil be used. same as $layout-screen-size-threshold in scss\n        if (!this.layoutScreenSizeThreshold) {\n            this.layoutScreenSizeThreshold = 1024;\n        }\n        // do not try to access the window object if rendered on the server\n        if (typeof window === 'object' && 'matchMedia' in window) {\n            var query_1 = window.matchMedia(\"(max-width: \" + this.layoutScreenSizeThreshold + \"px)\");\n            var queryListener_1 = function () {\n                ngZone.run(function () {\n                    _this.sizesSubject.next(query_1.matches);\n                });\n            };\n            query_1.addListener(queryListener_1);\n            this.windowMediaQueryListener = function () {\n                query_1.removeListener(queryListener_1);\n            };\n            // set the initial state\n            this.sizesSubject.next(query_1.matches);\n        }\n    }\n    MdlScreenSizeService.prototype.isSmallScreen = function () {\n        return this.sizesSubject.value;\n    };\n    MdlScreenSizeService.prototype.sizes = function () {\n        return this.sizesSubject.asObservable();\n    };\n    MdlScreenSizeService.prototype.destroy = function () {\n        if (this.windowMediaQueryListener) {\n            this.windowMediaQueryListener();\n            this.windowMediaQueryListener = null;\n        }\n    };\n    MdlScreenSizeService = mdl_layout_component_decorate([\n        Object(core_[\"Injectable\"])(),\n        mdl_layout_component_param(1, Object(core_[\"Optional\"])()), mdl_layout_component_param(1, Object(core_[\"Inject\"])(LAYOUT_SCREEN_SIZE_THRESHOLD)),\n        mdl_layout_component_metadata(\"design:paramtypes\", [core_[\"NgZone\"], Number])\n    ], MdlScreenSizeService);\n    return MdlScreenSizeService;\n}());\n\nvar mdl_layout_component_MdlLayoutComponent = /** @class */ (function () {\n    function MdlLayoutComponent(renderer, evm, el, screenSizeService) {\n        this.renderer = renderer;\n        this.evm = evm;\n        this.el = el;\n        this.screenSizeService = screenSizeService;\n        this.mode = STANDARD;\n        this._isFixedDrawer = false;\n        this._isFixedHeader = false;\n        this._isSeamed = false;\n        this._selectedIndex = 0;\n        this._isNoDrawer = false;\n        this.selectedTabEmitter = new core_[\"EventEmitter\"]();\n        this.mouseoverTabEmitter = new core_[\"EventEmitter\"]();\n        this.mouseoutTabEmitter = new core_[\"EventEmitter\"]();\n        this.onOpen = new core_[\"EventEmitter\"]();\n        this.onClose = new core_[\"EventEmitter\"]();\n        this.isDrawerVisible = false;\n        this.isSmallScreen = false;\n    }\n    Object.defineProperty(MdlLayoutComponent.prototype, \"isFixedDrawer\", {\n        get: function () { return this._isFixedDrawer; },\n        set: function (value) { this._isFixedDrawer = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlLayoutComponent.prototype, \"isFixedHeader\", {\n        get: function () { return this._isFixedHeader; },\n        set: function (value) { this._isFixedHeader = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlLayoutComponent.prototype, \"isSeamed\", {\n        get: function () { return this._isSeamed; },\n        set: function (value) { this._isSeamed = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlLayoutComponent.prototype, \"selectedIndex\", {\n        get: function () { return this._selectedIndex; },\n        set: function (value) { this._selectedIndex = toNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlLayoutComponent.prototype, \"isNoDrawer\", {\n        get: function () { return this._isNoDrawer; },\n        set: function (value) { this._isNoDrawer = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlLayoutComponent.prototype.ngAfterContentInit = function () {\n        this.validateMode();\n        if (this.header && this.content && this.content.tabs) {\n            this.header.tabs = this.content.tabs;\n            this.updateSelectedTabIndex();\n        }\n        // set this.drawer to null, if the drawer is not a direct child if this layout. It may be a drywer of a sub layout.\n        if (this.drawer && !this.drawer.isDrawerDirectChildOf(this)) {\n            this.drawer = null;\n        }\n    };\n    MdlLayoutComponent.prototype.ngOnChanges = function (changes) {\n        if (changes['selectedIndex']) {\n            this.updateSelectedTabIndex();\n        }\n    };\n    MdlLayoutComponent.prototype.updateSelectedTabIndex = function () {\n        if (this.header && this.header.tabs) {\n            this.header.tabs.forEach(function (tab) { return tab.isActive = false; });\n            if (this.header.tabs.toArray().length > 0 && this.selectedIndex < this.header.tabs.toArray().length) {\n                this.header.tabs.toArray()[this.selectedIndex].isActive = true;\n            }\n        }\n    };\n    MdlLayoutComponent.prototype.validateMode = function () {\n        var _this = this;\n        if (this.mode === '') {\n            this.mode = STANDARD;\n        }\n        if ([STANDARD, WATERFALL, SCROLL].indexOf(this.mode) === -1) {\n            throw new MdLUnsupportedLayoutTypeError(this.mode);\n        }\n        if (this.header) {\n            // inform the header about the mode\n            this.header.mode = this.mode;\n            this.header.isSeamed = this.isSeamed;\n        }\n        if (this.content) {\n            this.scrollListener = this.renderer.listen(this.content.el, 'scroll', function (e) {\n                _this.onScroll(_this.content.el.scrollTop);\n                return true;\n            });\n            this.screenSizeService.sizes().subscribe(function (isSmall) {\n                _this.onQueryChange(isSmall);\n            });\n        }\n    };\n    MdlLayoutComponent.prototype.onScroll = function (scrollTop) {\n        if (this.mode !== WATERFALL) {\n            return;\n        }\n        if (this.header.isAnimating) {\n            return;\n        }\n        var headerVisible = !this.isSmallScreen || this.isFixedHeader;\n        if (scrollTop > 0 && !this.header.isCompact) {\n            this.header.isCompact = true;\n            if (headerVisible) {\n                this.header.isAnimating = true;\n            }\n        }\n        else if (scrollTop <= 0 && this.header.isCompact) {\n            this.header.isCompact = false;\n            if (headerVisible) {\n                this.header.isAnimating = true;\n            }\n        }\n    };\n    MdlLayoutComponent.prototype.onQueryChange = function (isSmall) {\n        if (isSmall) {\n            this.isSmallScreen = true;\n        }\n        else {\n            this.isSmallScreen = false;\n            this.closeDrawer();\n        }\n    };\n    MdlLayoutComponent.prototype.toggleDrawer = function () {\n        this.isDrawerVisible = !this.isDrawerVisible;\n        if (this.drawer) {\n            this.setDrawerVisible(this.isDrawerVisible);\n        }\n    };\n    MdlLayoutComponent.prototype.closeDrawer = function () {\n        this.isDrawerVisible = false;\n        if (this.drawer) {\n            this.setDrawerVisible(false);\n        }\n    };\n    MdlLayoutComponent.prototype.openDrawer = function () {\n        this.isDrawerVisible = true;\n        if (this.drawer) {\n            this.setDrawerVisible(true);\n        }\n    };\n    MdlLayoutComponent.prototype.setDrawerVisible = function (visible) {\n        this.drawer.isDrawerVisible = visible;\n        this.drawer.isDrawerVisible ? this.onOpen.emit() : this.onClose.emit();\n    };\n    MdlLayoutComponent.prototype.obfuscatorKeyDown = function ($event) {\n        if ($event.keyCode === ESCAPE) {\n            this.toggleDrawer();\n        }\n    };\n    MdlLayoutComponent.prototype.ngOnDestroy = function () {\n        if (this.scrollListener) {\n            this.scrollListener();\n            this.scrollListener = null;\n        }\n    };\n    // triggered from mdl-layout-header.component\n    MdlLayoutComponent.prototype.tabSelected = function (tab) {\n        var index = this.header.tabs.toArray().indexOf(tab);\n        if (index != this.selectedIndex) {\n            this.selectedIndex = index;\n            this.updateSelectedTabIndex();\n            this.selectedTabEmitter.emit({ index: this.selectedIndex });\n        }\n    };\n    // triggered from mdl-layout-header.component\n    MdlLayoutComponent.prototype.onTabMouseover = function (tab) {\n        var index = this.header.tabs.toArray().indexOf(tab);\n        this.mouseoverTabEmitter.emit({ index: index });\n    };\n    // triggered from mdl-layout-header.component\n    MdlLayoutComponent.prototype.onTabMouseout = function (tab) {\n        var index = this.header.tabs.toArray().indexOf(tab);\n        this.mouseoutTabEmitter.emit({ index: index });\n    };\n    MdlLayoutComponent.prototype.closeDrawerOnSmallScreens = function () {\n        if (this.isSmallScreen && this.isDrawerVisible) {\n            this.closeDrawer();\n        }\n    };\n    MdlLayoutComponent.prototype.openDrawerOnSmallScreens = function () {\n        if (this.isSmallScreen && !this.isDrawerVisible) {\n            this.openDrawer();\n        }\n    };\n    MdlLayoutComponent.prototype.hasDrawer = function () {\n        return !!this.drawer;\n    };\n    mdl_layout_component_decorate([\n        Object(core_[\"ContentChild\"])(mdl_layout_header_component_MdlLayoutHeaderComponent),\n        mdl_layout_component_metadata(\"design:type\", Object)\n    ], MdlLayoutComponent.prototype, \"header\", void 0);\n    mdl_layout_component_decorate([\n        Object(core_[\"ContentChild\"])(mdl_layout_drawer_component_MdlLayoutDrawerComponent),\n        mdl_layout_component_metadata(\"design:type\", Object)\n    ], MdlLayoutComponent.prototype, \"drawer\", void 0);\n    mdl_layout_component_decorate([\n        Object(core_[\"ContentChild\"])(mdl_layout_content_component_MdlLayoutContentComponent),\n        mdl_layout_component_metadata(\"design:type\", Object)\n    ], MdlLayoutComponent.prototype, \"content\", void 0);\n    mdl_layout_component_decorate([\n        Object(core_[\"Input\"])('mdl-layout-mode'),\n        mdl_layout_component_metadata(\"design:type\", String)\n    ], MdlLayoutComponent.prototype, \"mode\", void 0);\n    mdl_layout_component_decorate([\n        Object(core_[\"Input\"])('mdl-layout-fixed-drawer'),\n        mdl_layout_component_metadata(\"design:type\", Object),\n        mdl_layout_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlLayoutComponent.prototype, \"isFixedDrawer\", null);\n    mdl_layout_component_decorate([\n        Object(core_[\"Input\"])('mdl-layout-fixed-header'),\n        mdl_layout_component_metadata(\"design:type\", Object),\n        mdl_layout_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlLayoutComponent.prototype, \"isFixedHeader\", null);\n    mdl_layout_component_decorate([\n        Object(core_[\"Input\"])('mdl-layout-header-seamed'),\n        mdl_layout_component_metadata(\"design:type\", Object),\n        mdl_layout_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlLayoutComponent.prototype, \"isSeamed\", null);\n    mdl_layout_component_decorate([\n        Object(core_[\"Input\"])('mdl-layout-tab-active-index'),\n        mdl_layout_component_metadata(\"design:type\", Object),\n        mdl_layout_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlLayoutComponent.prototype, \"selectedIndex\", null);\n    mdl_layout_component_decorate([\n        Object(core_[\"Input\"])('mdl-layout-no-drawer-button'),\n        mdl_layout_component_metadata(\"design:type\", Object),\n        mdl_layout_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlLayoutComponent.prototype, \"isNoDrawer\", null);\n    mdl_layout_component_decorate([\n        Object(core_[\"Output\"])('mdl-layout-tab-active-changed'),\n        mdl_layout_component_metadata(\"design:type\", Object)\n    ], MdlLayoutComponent.prototype, \"selectedTabEmitter\", void 0);\n    mdl_layout_component_decorate([\n        Object(core_[\"Output\"])('mdl-layout-tab-mouseover'),\n        mdl_layout_component_metadata(\"design:type\", Object)\n    ], MdlLayoutComponent.prototype, \"mouseoverTabEmitter\", void 0);\n    mdl_layout_component_decorate([\n        Object(core_[\"Output\"])('mdl-layout-tab-mouseout'),\n        mdl_layout_component_metadata(\"design:type\", Object)\n    ], MdlLayoutComponent.prototype, \"mouseoutTabEmitter\", void 0);\n    mdl_layout_component_decorate([\n        Object(core_[\"Output\"])('open'),\n        mdl_layout_component_metadata(\"design:type\", Object)\n    ], MdlLayoutComponent.prototype, \"onOpen\", void 0);\n    mdl_layout_component_decorate([\n        Object(core_[\"Output\"])('close'),\n        mdl_layout_component_metadata(\"design:type\", Object)\n    ], MdlLayoutComponent.prototype, \"onClose\", void 0);\n    MdlLayoutComponent = mdl_layout_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-layout',\n            template: \"\\n    <div class=\\\"mdl-layout__container\\\" [ngClass]=\\\"{'has-scrolling-header': mode==='scroll'}\\\">\\n     <div class=\\\"mdl-layout is-upgraded\\\"\\n          [ngClass]=\\\"{\\n          'is-small-screen': isSmallScreen,\\n          'mdl-layout--fixed-drawer': isFixedDrawer,\\n          'mdl-layout--fixed-header': isFixedHeader,\\n          'mdl-layout--fixed-tabs': 'tabs.toArray().length > 0'\\n          }\\\">\\n        <ng-content select=\\\"mdl-layout-header\\\"></ng-content>\\n        <ng-content select=\\\"mdl-layout-drawer\\\"></ng-content>\\n        <div *ngIf=\\\"drawer && isNoDrawer==false\\\" class=\\\"mdl-layout__drawer-button\\\" (click)=\\\"toggleDrawer()\\\">\\n           <mdl-icon>&#xE5D2;</mdl-icon>\\n        </div>\\n        <ng-content select=\\\"mdl-layout-content\\\"></ng-content>\\n        <div class=\\\"mdl-layout__obfuscator\\\"\\n             [ngClass]=\\\"{'is-visible':isDrawerVisible}\\\"\\n             (click)=\\\"toggleDrawer()\\\"\\n             (keydown)=\\\"obfuscatorKeyDown($event)\\\"></div>\\n     </div>\\n    </div>\\n  \",\n            exportAs: 'mdlLayout',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_layout_component_metadata(\"design:paramtypes\", [core_[\"Renderer2\"],\n            platform_browser_[\"EventManager\"],\n            core_[\"ElementRef\"],\n            mdl_layout_component_MdlScreenSizeService])\n    ], MdlLayoutComponent);\n    return MdlLayoutComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/layout/mdl-layout-header-transparent.directive.ts\nvar mdl_layout_header_transparent_directive_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar mdl_layout_header_transparent_directive_MdlLayoutHeaderTransparentDirective = /** @class */ (function () {\n    function MdlLayoutHeaderTransparentDirective() {\n    }\n    MdlLayoutHeaderTransparentDirective = mdl_layout_header_transparent_directive_decorate([\n        Object(core_[\"Directive\"])({\n            selector: 'mdl-layout-header[mdl-layout-header-transparent]',\n            host: {\n                '[class.mdl-layout__header--transparent]': 'true'\n            }\n        })\n    ], MdlLayoutHeaderTransparentDirective);\n    return MdlLayoutHeaderTransparentDirective;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/layout/mdl-layout-header-row.component.ts\nvar mdl_layout_header_row_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar mdl_layout_header_row_component_MdlLayoutHeaderRowComponent = /** @class */ (function () {\n    function MdlLayoutHeaderRowComponent() {\n    }\n    MdlLayoutHeaderRowComponent = mdl_layout_header_row_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-layout-header-row',\n            host: {\n                '[class.mdl-layout__header-row]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlLayoutHeaderRowComponent);\n    return MdlLayoutHeaderRowComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/layout/mdl-layout-title.component.ts\nvar mdl_layout_title_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar mdl_layout_title_component_MdlLayoutTitleComponent = /** @class */ (function () {\n    function MdlLayoutTitleComponent() {\n    }\n    MdlLayoutTitleComponent = mdl_layout_title_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-layout-title',\n            host: {\n                '[class.mdl-layout-title]': 'true'\n            },\n            template: '<ng-content></ng-content>',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlLayoutTitleComponent);\n    return MdlLayoutTitleComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/layout/mdl-layout-spacer.component.ts\nvar mdl_layout_spacer_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar mdl_layout_spacer_component_MdlLayoutSpacerComponent = /** @class */ (function () {\n    function MdlLayoutSpacerComponent() {\n    }\n    MdlLayoutSpacerComponent = mdl_layout_spacer_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-layout-spacer',\n            host: {\n                '[class.mdl-layout-spacer]': 'true'\n            },\n            template: '',\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        })\n    ], MdlLayoutSpacerComponent);\n    return MdlLayoutSpacerComponent;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/layout/index.ts\nvar layout_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar MDL_LAYOUT_DIRECTIVES = [\n    mdl_layout_component_MdlLayoutComponent,\n    mdl_layout_header_component_MdlLayoutHeaderComponent,\n    mdl_layout_drawer_component_MdlLayoutDrawerComponent,\n    mdl_layout_content_component_MdlLayoutContentComponent,\n    mdl_layout_header_transparent_directive_MdlLayoutHeaderTransparentDirective,\n    mdl_layout_header_row_component_MdlLayoutHeaderRowComponent,\n    mdl_layout_title_component_MdlLayoutTitleComponent,\n    mdl_layout_spacer_component_MdlLayoutSpacerComponent,\n    mdl_layout_tab_panel_component_MdlLayoutTabPanelComponent\n];\n\n\n\n\n\n\n\n\n\nvar layout_MdlLayoutModule = /** @class */ (function () {\n    function MdlLayoutModule() {\n    }\n    MdlLayoutModule_1 = MdlLayoutModule;\n    MdlLayoutModule.forRoot = function () {\n        return {\n            ngModule: MdlLayoutModule_1,\n            providers: [\n                mdl_layout_component_MdlScreenSizeService\n            ]\n        };\n    };\n    var MdlLayoutModule_1;\n    MdlLayoutModule = MdlLayoutModule_1 = layout_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [mdl_icon_component_MdlIconModule, mdl_ripple_directive_MdlRippleModule, common_MdlCommonsModule, tabs_MdlTabsModule, common_[\"CommonModule\"]],\n            exports: MDL_LAYOUT_DIRECTIVES,\n            declarations: MDL_LAYOUT_DIRECTIVES,\n        })\n    ], MdlLayoutModule);\n    return MdlLayoutModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/textfield/mdl-textfield.component.ts\nvar mdl_textfield_component_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar mdl_textfield_component_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar mdl_textfield_component_param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\n\n\n\n\n\n\nvar DISABLE_NATIVE_VALIDITY_CHECKING = new core_[\"InjectionToken\"]('disableNativeValidityChecking');\nvar nextId = 0;\nvar mdl_textfield_component_IS_FOCUSED = 'is-focused';\nvar IS_DISABLED = 'is-disabled';\nvar IS_INVALID = 'is-invalid';\nvar IS_DIRTY = 'is-dirty';\nvar mdl_textfield_component_MdlTextFieldComponent = /** @class */ (function () {\n    function MdlTextFieldComponent(renderer, elmRef, nativeCheckGlobalDisabled) {\n        this.renderer = renderer;\n        this.elmRef = elmRef;\n        this.nativeCheckGlobalDisabled = nativeCheckGlobalDisabled;\n        this.blurEmitter = new core_[\"EventEmitter\"]();\n        this.focusEmitter = new core_[\"EventEmitter\"]();\n        this.keyupEmitter = new core_[\"EventEmitter\"]();\n        this.type = 'text';\n        this.id = \"mdl-textfield-\" + nextId++;\n        this._disabled = false;\n        this._readonly = false;\n        this._required = false;\n        this._autofocus = false;\n        this._isFloatingLabel = false;\n        this._rows = null;\n        this._maxrows = -1;\n        this.tabindex = null;\n        this.maxlength = null;\n        // @experimental\n        this._disableNativeValidityChecking = false;\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this.el = elmRef.nativeElement;\n    }\n    MdlTextFieldComponent_1 = MdlTextFieldComponent;\n    Object.defineProperty(MdlTextFieldComponent.prototype, \"value\", {\n        get: function () { return this.value_; },\n        set: function (v) {\n            this.value_ = this.type === 'number' ? (v === '' ? null : parseFloat(v)) : v;\n            this.onChangeCallback(this.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(MdlTextFieldComponent.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlTextFieldComponent.prototype, \"readonly\", {\n        get: function () { return this._readonly; },\n        set: function (value) { this._readonly = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlTextFieldComponent.prototype, \"required\", {\n        get: function () { return this._required; },\n        set: function (value) { this._required = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlTextFieldComponent.prototype, \"autofocus\", {\n        get: function () { return this._autofocus; },\n        set: function (value) { this._autofocus = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlTextFieldComponent.prototype, \"isFloatingLabel\", {\n        get: function () { return this._isFloatingLabel; },\n        set: function (value) { this._isFloatingLabel = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlTextFieldComponent.prototype, \"rows\", {\n        get: function () { return this._rows; },\n        set: function (value) { this._rows = toNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlTextFieldComponent.prototype, \"maxrows\", {\n        get: function () { return this._maxrows; },\n        set: function (value) { this._maxrows = toNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdlTextFieldComponent.prototype, \"disableNativeValidityChecking\", {\n        get: function () { return this._disableNativeValidityChecking; },\n        set: function (value) { this._disableNativeValidityChecking = toBoolean(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MdlTextFieldComponent.prototype.writeValue = function (value) {\n        this.value_ = value;\n        this.checkDirty();\n    };\n    MdlTextFieldComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    MdlTextFieldComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    MdlTextFieldComponent.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    MdlTextFieldComponent.prototype.ngOnChanges = function (changes) {\n        this.checkDisabled();\n    };\n    MdlTextFieldComponent.prototype.ngDoCheck = function () {\n        this.checkValidity();\n        this.checkDirty();\n    };\n    MdlTextFieldComponent.prototype.setFocus = function () {\n        if (!this.inputEl) {\n            return;\n        }\n        callNative(this.inputEl.nativeElement, 'focus');\n    };\n    MdlTextFieldComponent.prototype.onFocus = function (event) {\n        this.renderer.addClass(this.el, mdl_textfield_component_IS_FOCUSED);\n        this.focusEmitter.emit(event);\n    };\n    MdlTextFieldComponent.prototype.onBlur = function (event) {\n        this.renderer.removeClass(this.el, mdl_textfield_component_IS_FOCUSED);\n        this.onTouchedCallback();\n        this.blurEmitter.emit(event);\n    };\n    MdlTextFieldComponent.prototype.onKeyup = function (event) {\n        this.keyupEmitter.emit(event);\n    };\n    MdlTextFieldComponent.prototype.checkDisabled = function () {\n        if (this.disabled) {\n            this.renderer.addClass(this.el, IS_DISABLED);\n        }\n        else {\n            this.renderer.removeClass(this.el, IS_DISABLED);\n        }\n    };\n    MdlTextFieldComponent.prototype.checkValidity = function () {\n        // check the global setting - if globally disabled do no check\n        if (this.nativeCheckGlobalDisabled === true) {\n            return;\n        }\n        // check local setting - if locally disabled do no check\n        if (this.disableNativeValidityChecking) {\n            return;\n        }\n        if (this.inputEl && this.inputEl.nativeElement.validity) {\n            if (!this.inputEl.nativeElement.validity.valid) {\n                this.renderer.addClass(this.el, IS_INVALID);\n            }\n            else {\n                this.renderer.removeClass(this.el, IS_INVALID);\n            }\n        }\n    };\n    MdlTextFieldComponent.prototype.checkDirty = function () {\n        var dirty = this.inputEl && this.inputEl.nativeElement.value && this.inputEl.nativeElement.value.length > 0;\n        if (dirty) {\n            this.renderer.addClass(this.el, IS_DIRTY);\n        }\n        else {\n            this.renderer.removeClass(this.el, IS_DIRTY);\n        }\n    };\n    MdlTextFieldComponent.prototype.keydownTextarea = function ($event) {\n        var currentRowCount = this.inputEl.nativeElement.value.split('\\n').length;\n        if ($event.keyCode === 13) {\n            if (currentRowCount >= this.maxrows && this.maxrows !== -1) {\n                $event.preventDefault();\n            }\n        }\n    };\n    // hm only for test purposes to simulate a change to the input field that will change the\n    // model value.\n    MdlTextFieldComponent.prototype.triggerChange = function (event) {\n        this.value = event.target.value;\n        this.onTouchedCallback();\n    };\n    var MdlTextFieldComponent_1;\n    mdl_textfield_component_decorate([\n        Object(core_[\"Output\"])('blur'),\n        mdl_textfield_component_metadata(\"design:type\", core_[\"EventEmitter\"])\n    ], MdlTextFieldComponent.prototype, \"blurEmitter\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Output\"])('focus'),\n        mdl_textfield_component_metadata(\"design:type\", core_[\"EventEmitter\"])\n    ], MdlTextFieldComponent.prototype, \"focusEmitter\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Output\"])('keyup'),\n        mdl_textfield_component_metadata(\"design:type\", core_[\"EventEmitter\"])\n    ], MdlTextFieldComponent.prototype, \"keyupEmitter\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"ViewChild\"])('input'),\n        mdl_textfield_component_metadata(\"design:type\", core_[\"ElementRef\"])\n    ], MdlTextFieldComponent.prototype, \"inputEl\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTextFieldComponent.prototype, \"value\", null);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object)\n    ], MdlTextFieldComponent.prototype, \"type\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object)\n    ], MdlTextFieldComponent.prototype, \"label\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object)\n    ], MdlTextFieldComponent.prototype, \"pattern\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object)\n    ], MdlTextFieldComponent.prototype, \"min\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object)\n    ], MdlTextFieldComponent.prototype, \"max\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object)\n    ], MdlTextFieldComponent.prototype, \"step\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object)\n    ], MdlTextFieldComponent.prototype, \"name\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object)\n    ], MdlTextFieldComponent.prototype, \"id\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])('error-msg'),\n        mdl_textfield_component_metadata(\"design:type\", Object)\n    ], MdlTextFieldComponent.prototype, \"errorMessage\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Boolean),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTextFieldComponent.prototype, \"disabled\", null);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTextFieldComponent.prototype, \"readonly\", null);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTextFieldComponent.prototype, \"required\", null);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTextFieldComponent.prototype, \"autofocus\", null);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])('floating-label'),\n        mdl_textfield_component_metadata(\"design:type\", Object),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTextFieldComponent.prototype, \"isFloatingLabel\", null);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", String)\n    ], MdlTextFieldComponent.prototype, \"placeholder\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", String)\n    ], MdlTextFieldComponent.prototype, \"autocomplete\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTextFieldComponent.prototype, \"rows\", null);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTextFieldComponent.prototype, \"maxrows\", null);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", String)\n    ], MdlTextFieldComponent.prototype, \"icon\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Number)\n    ], MdlTextFieldComponent.prototype, \"tabindex\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Number)\n    ], MdlTextFieldComponent.prototype, \"maxlength\", void 0);\n    mdl_textfield_component_decorate([\n        Object(core_[\"Input\"])(),\n        mdl_textfield_component_metadata(\"design:type\", Object),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [Object])\n    ], MdlTextFieldComponent.prototype, \"disableNativeValidityChecking\", null);\n    MdlTextFieldComponent = MdlTextFieldComponent_1 = mdl_textfield_component_decorate([\n        Object(core_[\"Component\"])({\n            selector: 'mdl-textfield',\n            host: {\n                '[class.mdl-textfield]': 'true',\n                '[class.is-upgraded]': 'true',\n                '[class.mdl-textfield--expandable]': 'icon',\n                '[class.mdl-textfield--floating-label]': 'isFloatingLabel',\n                '[class.has-placeholder]': 'placeholder'\n            },\n            template: \"\\n   <div *ngIf=\\\"!icon\\\">\\n     <textarea\\n        *ngIf=\\\"rows\\\"\\n        #input\\n        [rows]=\\\"rows\\\"\\n        class=\\\"mdl-textfield__input\\\"\\n        type=\\\"text\\\"\\n        [attr.name]=\\\"name\\\"\\n        [id]=\\\"id\\\"\\n        [placeholder]=\\\"placeholder ? placeholder : ''\\\"\\n        (focus)=\\\"onFocus($event)\\\"\\n        (blur)=\\\"onBlur($event)\\\"\\n        (keydown)=\\\"keydownTextarea($event)\\\"\\n        (keyup)=\\\"onKeyup($event)\\\"\\n        [(ngModel)]=\\\"value\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [required]=\\\"required\\\"\\n        [autofocus]=\\\"autofocus\\\"\\n        [readonly]=\\\"readonly\\\"\\n        [maxlength]=\\\"maxlength\\\"\\n        ></textarea>\\n     <input\\n        *ngIf=\\\"!rows\\\"\\n        #input\\n        class=\\\"mdl-textfield__input\\\"\\n        [type]=\\\"type\\\"\\n        [attr.name]=\\\"name\\\"\\n        [id]=\\\"id\\\"\\n        [pattern]=\\\"pattern ? pattern : '.*'\\\"\\n        [attr.min]=\\\"min\\\"\\n        [attr.max]=\\\"max\\\"\\n        [attr.step]=\\\"step\\\"\\n        [placeholder]=\\\"placeholder ? placeholder : ''\\\"\\n        [autocomplete]=\\\"autocomplete ? autocomplete : ''\\\"\\n        (focus)=\\\"onFocus($event)\\\"\\n        (blur)=\\\"onBlur($event)\\\"\\n        (keyup)=\\\"onKeyup($event)\\\"\\n        [(ngModel)]=\\\"value\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [required]=\\\"required\\\"\\n        [autofocus]=\\\"autofocus\\\"\\n        [readonly]=\\\"readonly\\\"\\n        [attr.tabindex]=\\\"tabindex\\\"\\n        [maxlength]=\\\"maxlength\\\"\\n        >\\n     <label class=\\\"mdl-textfield__label\\\" [attr.for]=\\\"id\\\">{{label}}</label>\\n     <span class=\\\"mdl-textfield__error\\\">{{errorMessage}}</span>\\n   </div>\\n   <div *ngIf=\\\"icon\\\">\\n      <button mdl-button mdl-button-type=\\\"icon\\\" (click)=\\\"setFocus()\\\">\\n         <mdl-icon>{{icon}}</mdl-icon>\\n      </button>\\n      <div class=\\\"mdl-textfield__expandable-holder\\\">\\n       <input\\n          #input\\n          class=\\\"mdl-textfield__input\\\"\\n          [type]=\\\"type\\\"\\n          [attr.name]=\\\"name\\\"\\n          [id]=\\\"id\\\"\\n          [pattern]=\\\"pattern ? pattern : '.*'\\\"\\n          [attr.min]=\\\"min\\\"\\n          [attr.max]=\\\"max\\\"\\n          [attr.step]=\\\"step\\\"\\n          [placeholder]=\\\"placeholder ? placeholder : ''\\\"\\n          [autocomplete]=\\\"autocomplete ? autocomplete : ''\\\"\\n          (focus)=\\\"onFocus($event)\\\"\\n          (blur)=\\\"onBlur($event)\\\"\\n          (keyup)=\\\"onKeyup($event)\\\"\\n          [(ngModel)]=\\\"value\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [required]=\\\"required\\\"\\n          [autofocus]=\\\"autofocus\\\"\\n          [readonly]=\\\"readonly\\\"\\n          [attr.tabindex]=\\\"tabindex\\\"\\n          [maxlength]=\\\"maxlength\\\"\\n         >\\n     <label class=\\\"mdl-textfield__label\\\" [attr.for]=\\\"id\\\">{{label}}</label>\\n     <span class=\\\"mdl-textfield__error\\\">{{errorMessage}}</span>\\n      </div>\\n   </div>\\n   \",\n            providers: [{\n                    provide: forms_[\"NG_VALUE_ACCESSOR\"],\n                    useExisting: Object(core_[\"forwardRef\"])(function () { return MdlTextFieldComponent_1; }),\n                    multi: true\n                }],\n            encapsulation: core_[\"ViewEncapsulation\"].None\n        }),\n        mdl_textfield_component_param(2, Object(core_[\"Optional\"])()), mdl_textfield_component_param(2, Object(core_[\"Inject\"])(DISABLE_NATIVE_VALIDITY_CHECKING)),\n        mdl_textfield_component_metadata(\"design:paramtypes\", [core_[\"Renderer2\"],\n            core_[\"ElementRef\"],\n            Boolean])\n    ], MdlTextFieldComponent);\n    return MdlTextFieldComponent;\n}());\n\nvar mdl_textfield_component_MdlTextFieldModule = /** @class */ (function () {\n    function MdlTextFieldModule() {\n    }\n    MdlTextFieldModule_1 = MdlTextFieldModule;\n    MdlTextFieldModule.forRoot = function () {\n        return {\n            ngModule: MdlTextFieldModule_1,\n            providers: []\n        };\n    };\n    var MdlTextFieldModule_1;\n    MdlTextFieldModule = MdlTextFieldModule_1 = mdl_textfield_component_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [mdl_icon_component_MdlIconModule, mdl_button_component_MdlButtonModule, forms_[\"FormsModule\"], common_[\"CommonModule\"]],\n            exports: [mdl_textfield_component_MdlTextFieldComponent],\n            declarations: [mdl_textfield_component_MdlTextFieldComponent],\n        })\n    ], MdlTextFieldModule);\n    return MdlTextFieldModule;\n}());\n\n\n// CONCATENATED MODULE: ./src/lib/components/index.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdlModule\", function() { return components_MdlModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdlNonRootModule\", function() { return components_MdlNonRootModule; });\n/* concated harmony reexport MdlRippleDirective */__webpack_require__.d(__webpack_exports__, \"MdlRippleDirective\", function() { return mdl_ripple_directive_MdlRippleDirective; });\n/* concated harmony reexport MdlButtonRippleDirective */__webpack_require__.d(__webpack_exports__, \"MdlButtonRippleDirective\", function() { return mdl_ripple_directive_MdlButtonRippleDirective; });\n/* concated harmony reexport MdlCheckboxRippleDirective */__webpack_require__.d(__webpack_exports__, \"MdlCheckboxRippleDirective\", function() { return mdl_ripple_directive_MdlCheckboxRippleDirective; });\n/* concated harmony reexport MdlRadioRippleDirective */__webpack_require__.d(__webpack_exports__, \"MdlRadioRippleDirective\", function() { return mdl_ripple_directive_MdlRadioRippleDirective; });\n/* concated harmony reexport MdlIconToggleRippleDirective */__webpack_require__.d(__webpack_exports__, \"MdlIconToggleRippleDirective\", function() { return mdl_ripple_directive_MdlIconToggleRippleDirective; });\n/* concated harmony reexport MdlSwitchRippleDirective */__webpack_require__.d(__webpack_exports__, \"MdlSwitchRippleDirective\", function() { return mdl_ripple_directive_MdlSwitchRippleDirective; });\n/* concated harmony reexport MdlMenuItemRippleDirective */__webpack_require__.d(__webpack_exports__, \"MdlMenuItemRippleDirective\", function() { return mdl_ripple_directive_MdlMenuItemRippleDirective; });\n/* concated harmony reexport MdlAnchorRippleDirective */__webpack_require__.d(__webpack_exports__, \"MdlAnchorRippleDirective\", function() { return mdl_ripple_directive_MdlAnchorRippleDirective; });\n/* concated harmony reexport MdlRippleModule */__webpack_require__.d(__webpack_exports__, \"MdlRippleModule\", function() { return mdl_ripple_directive_MdlRippleModule; });\n/* concated harmony reexport MdlBadgeDirective */__webpack_require__.d(__webpack_exports__, \"MdlBadgeDirective\", function() { return mdl_badge_directive_MdlBadgeDirective; });\n/* concated harmony reexport MdlBadgeOverlapDirective */__webpack_require__.d(__webpack_exports__, \"MdlBadgeOverlapDirective\", function() { return mdl_badge_directive_MdlBadgeOverlapDirective; });\n/* concated harmony reexport MdlBadgeNoBackgroundDirective */__webpack_require__.d(__webpack_exports__, \"MdlBadgeNoBackgroundDirective\", function() { return mdl_badge_directive_MdlBadgeNoBackgroundDirective; });\n/* concated harmony reexport MdlBadgeModule */__webpack_require__.d(__webpack_exports__, \"MdlBadgeModule\", function() { return mdl_badge_directive_MdlBadgeModule; });\n/* concated harmony reexport MdlUnsupportedButtonTypeError */__webpack_require__.d(__webpack_exports__, \"MdlUnsupportedButtonTypeError\", function() { return MdlUnsupportedButtonTypeError; });\n/* concated harmony reexport MdlUnsupportedColoredTypeError */__webpack_require__.d(__webpack_exports__, \"MdlUnsupportedColoredTypeError\", function() { return MdlUnsupportedColoredTypeError; });\n/* concated harmony reexport MdlButtonComponent */__webpack_require__.d(__webpack_exports__, \"MdlButtonComponent\", function() { return mdl_button_component_MdlButtonComponent; });\n/* concated harmony reexport MdlButtonModule */__webpack_require__.d(__webpack_exports__, \"MdlButtonModule\", function() { return mdl_button_component_MdlButtonModule; });\n/* concated harmony reexport MdlCardComponent */__webpack_require__.d(__webpack_exports__, \"MdlCardComponent\", function() { return mdl_card_component_MdlCardComponent; });\n/* concated harmony reexport MdlCardChildStructure */__webpack_require__.d(__webpack_exports__, \"MdlCardChildStructure\", function() { return mdl_card_component_MdlCardChildStructure; });\n/* concated harmony reexport MdlCardTitleComponent */__webpack_require__.d(__webpack_exports__, \"MdlCardTitleComponent\", function() { return mdl_card_component_MdlCardTitleComponent; });\n/* concated harmony reexport MdlCardSupportingTextComponent */__webpack_require__.d(__webpack_exports__, \"MdlCardSupportingTextComponent\", function() { return mdl_card_component_MdlCardSupportingTextComponent; });\n/* concated harmony reexport MdlCardMediaComponent */__webpack_require__.d(__webpack_exports__, \"MdlCardMediaComponent\", function() { return mdl_card_component_MdlCardMediaComponent; });\n/* concated harmony reexport MdlCardActionsComponent */__webpack_require__.d(__webpack_exports__, \"MdlCardActionsComponent\", function() { return mdl_card_component_MdlCardActionsComponent; });\n/* concated harmony reexport MdlCardMenuComponent */__webpack_require__.d(__webpack_exports__, \"MdlCardMenuComponent\", function() { return mdl_card_component_MdlCardMenuComponent; });\n/* concated harmony reexport MdlCardTitleTextDirective */__webpack_require__.d(__webpack_exports__, \"MdlCardTitleTextDirective\", function() { return mdl_card_component_MdlCardTitleTextDirective; });\n/* concated harmony reexport MdlCardBorderDirective */__webpack_require__.d(__webpack_exports__, \"MdlCardBorderDirective\", function() { return mdl_card_component_MdlCardBorderDirective; });\n/* concated harmony reexport MdlCardExpandDirective */__webpack_require__.d(__webpack_exports__, \"MdlCardExpandDirective\", function() { return mdl_card_component_MdlCardExpandDirective; });\n/* concated harmony reexport MdlCardModule */__webpack_require__.d(__webpack_exports__, \"MdlCardModule\", function() { return mdl_card_component_MdlCardModule; });\n/* concated harmony reexport CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR */__webpack_require__.d(__webpack_exports__, \"CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\", function() { return CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR; });\n/* concated harmony reexport MdlCheckboxComponent */__webpack_require__.d(__webpack_exports__, \"MdlCheckboxComponent\", function() { return mdl_checkbox_component_MdlCheckboxComponent; });\n/* concated harmony reexport MdlCheckboxModule */__webpack_require__.d(__webpack_exports__, \"MdlCheckboxModule\", function() { return mdl_checkbox_component_MdlCheckboxModule; });\n/* concated harmony reexport MdlChipModule */__webpack_require__.d(__webpack_exports__, \"MdlChipModule\", function() { return chips_MdlChipModule; });\n/* concated harmony reexport MdlChipComponent */__webpack_require__.d(__webpack_exports__, \"MdlChipComponent\", function() { return mdl_chip_component_MdlChipComponent; });\n/* concated harmony reexport MdlChipContactDirective */__webpack_require__.d(__webpack_exports__, \"MdlChipContactDirective\", function() { return mdl_chip_contact_directive_MdlChipContactDirective; });\n/* concated harmony reexport MdlDialogModule */__webpack_require__.d(__webpack_exports__, \"MdlDialogModule\", function() { return dialog_MdlDialogModule; });\n/* concated harmony reexport MdlDialogComponent */__webpack_require__.d(__webpack_exports__, \"MdlDialogComponent\", function() { return mdl_dialog_component_MdlDialogComponent; });\n/* concated harmony reexport MDL_CONFIGUARTION */__webpack_require__.d(__webpack_exports__, \"MDL_CONFIGUARTION\", function() { return MDL_CONFIGUARTION; });\n/* concated harmony reexport MIN_DIALOG_Z_INDEX */__webpack_require__.d(__webpack_exports__, \"MIN_DIALOG_Z_INDEX\", function() { return MIN_DIALOG_Z_INDEX; });\n/* concated harmony reexport MdlDialogReference */__webpack_require__.d(__webpack_exports__, \"MdlDialogReference\", function() { return MdlDialogReference; });\n/* concated harmony reexport MdlDialogService */__webpack_require__.d(__webpack_exports__, \"MdlDialogService\", function() { return mdl_dialog_service_MdlDialogService; });\n/* concated harmony reexport MdlAlertComponent */__webpack_require__.d(__webpack_exports__, \"MdlAlertComponent\", function() { return mdl_alert_component_MdlAlertComponent; });\n/* concated harmony reexport MdlDialogOutletModule */__webpack_require__.d(__webpack_exports__, \"MdlDialogOutletModule\", function() { return dialog_outlet_MdlDialogOutletModule; });\n/* concated harmony reexport MdlDialogOutletComponent */__webpack_require__.d(__webpack_exports__, \"MdlDialogOutletComponent\", function() { return mdl_dialog_outlet_component_MdlDialogOutletComponent; });\n/* concated harmony reexport MdlDialogInnerOutletComponent */__webpack_require__.d(__webpack_exports__, \"MdlDialogInnerOutletComponent\", function() { return mdl_dialog_outlet_component_MdlDialogInnerOutletComponent; });\n/* concated harmony reexport MdlDialogOutletService */__webpack_require__.d(__webpack_exports__, \"MdlDialogOutletService\", function() { return mdl_dialog_outlet_service_MdlDialogOutletService; });\n/* concated harmony reexport MdlIconComponent */__webpack_require__.d(__webpack_exports__, \"MdlIconComponent\", function() { return mdl_icon_component_MdlIconComponent; });\n/* concated harmony reexport MdlIconModule */__webpack_require__.d(__webpack_exports__, \"MdlIconModule\", function() { return mdl_icon_component_MdlIconModule; });\n/* concated harmony reexport MdlUnsupportedCountOfListItemLinesError */__webpack_require__.d(__webpack_exports__, \"MdlUnsupportedCountOfListItemLinesError\", function() { return MdlUnsupportedCountOfListItemLinesError; });\n/* concated harmony reexport MdlListComponent */__webpack_require__.d(__webpack_exports__, \"MdlListComponent\", function() { return mdl_list_component_MdlListComponent; });\n/* concated harmony reexport MdlListItemComponent */__webpack_require__.d(__webpack_exports__, \"MdlListItemComponent\", function() { return mdl_list_component_MdlListItemComponent; });\n/* concated harmony reexport MdlListItemPrimaryContentComponent */__webpack_require__.d(__webpack_exports__, \"MdlListItemPrimaryContentComponent\", function() { return mdl_list_component_MdlListItemPrimaryContentComponent; });\n/* concated harmony reexport MdlListItemSecondaryContentComponent */__webpack_require__.d(__webpack_exports__, \"MdlListItemSecondaryContentComponent\", function() { return mdl_list_component_MdlListItemSecondaryContentComponent; });\n/* concated harmony reexport MdlListItemSecondaryActionComponent */__webpack_require__.d(__webpack_exports__, \"MdlListItemSecondaryActionComponent\", function() { return mdl_list_component_MdlListItemSecondaryActionComponent; });\n/* concated harmony reexport MdlListItemSubTitleComponent */__webpack_require__.d(__webpack_exports__, \"MdlListItemSubTitleComponent\", function() { return mdl_list_component_MdlListItemSubTitleComponent; });\n/* concated harmony reexport MdlListItemSecondaryInfoComponent */__webpack_require__.d(__webpack_exports__, \"MdlListItemSecondaryInfoComponent\", function() { return mdl_list_component_MdlListItemSecondaryInfoComponent; });\n/* concated harmony reexport MdlListItemTextBodyComponent */__webpack_require__.d(__webpack_exports__, \"MdlListItemTextBodyComponent\", function() { return mdl_list_component_MdlListItemTextBodyComponent; });\n/* concated harmony reexport MdlListItemIconDirective */__webpack_require__.d(__webpack_exports__, \"MdlListItemIconDirective\", function() { return mdl_list_component_MdlListItemIconDirective; });\n/* concated harmony reexport MdlListItemAvatarDirective */__webpack_require__.d(__webpack_exports__, \"MdlListItemAvatarDirective\", function() { return mdl_list_component_MdlListItemAvatarDirective; });\n/* concated harmony reexport MdlListModule */__webpack_require__.d(__webpack_exports__, \"MdlListModule\", function() { return mdl_list_component_MdlListModule; });\n/* concated harmony reexport MdlIconToggleComponent */__webpack_require__.d(__webpack_exports__, \"MdlIconToggleComponent\", function() { return mdl_icon_toggle_component_MdlIconToggleComponent; });\n/* concated harmony reexport MdlIconToggleModule */__webpack_require__.d(__webpack_exports__, \"MdlIconToggleModule\", function() { return mdl_icon_toggle_component_MdlIconToggleModule; });\n/* concated harmony reexport MdlProgressComponent */__webpack_require__.d(__webpack_exports__, \"MdlProgressComponent\", function() { return mdl_progress_component_MdlProgressComponent; });\n/* concated harmony reexport MdlProgressModule */__webpack_require__.d(__webpack_exports__, \"MdlProgressModule\", function() { return mdl_progress_component_MdlProgressModule; });\n/* concated harmony reexport MdlRadioGroupRegisty */__webpack_require__.d(__webpack_exports__, \"MdlRadioGroupRegisty\", function() { return mdl_radio_component_MdlRadioGroupRegisty; });\n/* concated harmony reexport MdlRadioComponent */__webpack_require__.d(__webpack_exports__, \"MdlRadioComponent\", function() { return mdl_radio_component_MdlRadioComponent; });\n/* concated harmony reexport MdlRadioModule */__webpack_require__.d(__webpack_exports__, \"MdlRadioModule\", function() { return mdl_radio_component_MdlRadioModule; });\n/* concated harmony reexport MdlUnsupportedShadowValueError */__webpack_require__.d(__webpack_exports__, \"MdlUnsupportedShadowValueError\", function() { return MdlUnsupportedShadowValueError; });\n/* concated harmony reexport MdlShadowDirective */__webpack_require__.d(__webpack_exports__, \"MdlShadowDirective\", function() { return mdl_shadow_directive_MdlShadowDirective; });\n/* concated harmony reexport MdlShadowModule */__webpack_require__.d(__webpack_exports__, \"MdlShadowModule\", function() { return mdl_shadow_directive_MdlShadowModule; });\n/* concated harmony reexport MdlSpinnerComponent */__webpack_require__.d(__webpack_exports__, \"MdlSpinnerComponent\", function() { return mdl_spinner_component_MdlSpinnerComponent; });\n/* concated harmony reexport MdlSpinnerModule */__webpack_require__.d(__webpack_exports__, \"MdlSpinnerModule\", function() { return mdl_spinner_component_MdlSpinnerModule; });\n/* concated harmony reexport MdlSliderComponent */__webpack_require__.d(__webpack_exports__, \"MdlSliderComponent\", function() { return mdl_slider_component_MdlSliderComponent; });\n/* concated harmony reexport MdlSliderModule */__webpack_require__.d(__webpack_exports__, \"MdlSliderModule\", function() { return mdl_slider_component_MdlSliderModule; });\n/* concated harmony reexport MdlSnackbarComponent */__webpack_require__.d(__webpack_exports__, \"MdlSnackbarComponent\", function() { return mdl_snackbar_service_MdlSnackbarComponent; });\n/* concated harmony reexport MdlSnackbarService */__webpack_require__.d(__webpack_exports__, \"MdlSnackbarService\", function() { return mdl_snackbar_service_MdlSnackbarService; });\n/* concated harmony reexport MdlSnackbarModule */__webpack_require__.d(__webpack_exports__, \"MdlSnackbarModule\", function() { return mdl_snackbar_service_MdlSnackbarModule; });\n/* concated harmony reexport MdlSwitchComponent */__webpack_require__.d(__webpack_exports__, \"MdlSwitchComponent\", function() { return mdl_switch_component_MdlSwitchComponent; });\n/* concated harmony reexport MdlSwitchModule */__webpack_require__.d(__webpack_exports__, \"MdlSwitchModule\", function() { return mdl_switch_component_MdlSwitchModule; });\n/* concated harmony reexport MdlTableModule */__webpack_require__.d(__webpack_exports__, \"MdlTableModule\", function() { return table_MdlTableModule; });\n/* concated harmony reexport MdlDefaultTableModel */__webpack_require__.d(__webpack_exports__, \"MdlDefaultTableModel\", function() { return MdlDefaultTableModel; });\n/* concated harmony reexport MdlTableComponent */__webpack_require__.d(__webpack_exports__, \"MdlTableComponent\", function() { return mdl_table_component_MdlTableComponent; });\n/* concated harmony reexport MdlSelectableTableComponent */__webpack_require__.d(__webpack_exports__, \"MdlSelectableTableComponent\", function() { return mdl_table_component_MdlSelectableTableComponent; });\n/* concated harmony reexport MdlTooltipModule */__webpack_require__.d(__webpack_exports__, \"MdlTooltipModule\", function() { return tooltip_MdlTooltipModule; });\n/* concated harmony reexport MdlSimpleTooltipComponent */__webpack_require__.d(__webpack_exports__, \"MdlSimpleTooltipComponent\", function() { return mdl_tooltip_component_MdlSimpleTooltipComponent; });\n/* concated harmony reexport MdlTooltipComponent */__webpack_require__.d(__webpack_exports__, \"MdlTooltipComponent\", function() { return mdl_tooltip_component_MdlTooltipComponent; });\n/* concated harmony reexport AbstractMdlTooltipDirective */__webpack_require__.d(__webpack_exports__, \"AbstractMdlTooltipDirective\", function() { return mdl_tooltip_directive_AbstractMdlTooltipDirective; });\n/* concated harmony reexport MdlTooltipDirective */__webpack_require__.d(__webpack_exports__, \"MdlTooltipDirective\", function() { return mdl_tooltip_directive_MdlTooltipDirective; });\n/* concated harmony reexport MdlTooltipLargeDirective */__webpack_require__.d(__webpack_exports__, \"MdlTooltipLargeDirective\", function() { return mdl_tooltip_directive_MdlTooltipLargeDirective; });\n/* concated harmony reexport MdlMenuModule */__webpack_require__.d(__webpack_exports__, \"MdlMenuModule\", function() { return menu_MdlMenuModule; });\n/* concated harmony reexport MdlMenuError */__webpack_require__.d(__webpack_exports__, \"MdlMenuError\", function() { return MdlMenuError; });\n/* concated harmony reexport MdlMenuRegisty */__webpack_require__.d(__webpack_exports__, \"MdlMenuRegisty\", function() { return mdl_menu_component_MdlMenuRegisty; });\n/* concated harmony reexport MdlMenuComponent */__webpack_require__.d(__webpack_exports__, \"MdlMenuComponent\", function() { return mdl_menu_component_MdlMenuComponent; });\n/* concated harmony reexport MdlMenuItemComponent */__webpack_require__.d(__webpack_exports__, \"MdlMenuItemComponent\", function() { return mdl_menu_item_component_MdlMenuItemComponent; });\n/* concated harmony reexport MdlMenuItemFullBleedDeviderComponent */__webpack_require__.d(__webpack_exports__, \"MdlMenuItemFullBleedDeviderComponent\", function() { return mdl_menu_item_directive_MdlMenuItemFullBleedDeviderComponent; });\n/* concated harmony reexport MdlLayoutModule */__webpack_require__.d(__webpack_exports__, \"MdlLayoutModule\", function() { return layout_MdlLayoutModule; });\n/* concated harmony reexport LAYOUT_SCREEN_SIZE_THRESHOLD */__webpack_require__.d(__webpack_exports__, \"LAYOUT_SCREEN_SIZE_THRESHOLD\", function() { return LAYOUT_SCREEN_SIZE_THRESHOLD; });\n/* concated harmony reexport MdLUnsupportedLayoutTypeError */__webpack_require__.d(__webpack_exports__, \"MdLUnsupportedLayoutTypeError\", function() { return MdLUnsupportedLayoutTypeError; });\n/* concated harmony reexport MdlScreenSizeService */__webpack_require__.d(__webpack_exports__, \"MdlScreenSizeService\", function() { return mdl_layout_component_MdlScreenSizeService; });\n/* concated harmony reexport MdlLayoutComponent */__webpack_require__.d(__webpack_exports__, \"MdlLayoutComponent\", function() { return mdl_layout_component_MdlLayoutComponent; });\n/* concated harmony reexport MdlLayoutHeaderComponent */__webpack_require__.d(__webpack_exports__, \"MdlLayoutHeaderComponent\", function() { return mdl_layout_header_component_MdlLayoutHeaderComponent; });\n/* concated harmony reexport MdlLayoutDrawerComponent */__webpack_require__.d(__webpack_exports__, \"MdlLayoutDrawerComponent\", function() { return mdl_layout_drawer_component_MdlLayoutDrawerComponent; });\n/* concated harmony reexport MdlLayoutContentComponent */__webpack_require__.d(__webpack_exports__, \"MdlLayoutContentComponent\", function() { return mdl_layout_content_component_MdlLayoutContentComponent; });\n/* concated harmony reexport MdlLayoutHeaderTransparentDirective */__webpack_require__.d(__webpack_exports__, \"MdlLayoutHeaderTransparentDirective\", function() { return mdl_layout_header_transparent_directive_MdlLayoutHeaderTransparentDirective; });\n/* concated harmony reexport MdlLayoutHeaderRowComponent */__webpack_require__.d(__webpack_exports__, \"MdlLayoutHeaderRowComponent\", function() { return mdl_layout_header_row_component_MdlLayoutHeaderRowComponent; });\n/* concated harmony reexport MdlLayoutTitleComponent */__webpack_require__.d(__webpack_exports__, \"MdlLayoutTitleComponent\", function() { return mdl_layout_title_component_MdlLayoutTitleComponent; });\n/* concated harmony reexport MdlLayoutSpacerComponent */__webpack_require__.d(__webpack_exports__, \"MdlLayoutSpacerComponent\", function() { return mdl_layout_spacer_component_MdlLayoutSpacerComponent; });\n/* concated harmony reexport MdlLayoutTabPanelComponent */__webpack_require__.d(__webpack_exports__, \"MdlLayoutTabPanelComponent\", function() { return mdl_layout_tab_panel_component_MdlLayoutTabPanelComponent; });\n/* concated harmony reexport MdlTabsModule */__webpack_require__.d(__webpack_exports__, \"MdlTabsModule\", function() { return tabs_MdlTabsModule; });\n/* concated harmony reexport MdlTabsComponent */__webpack_require__.d(__webpack_exports__, \"MdlTabsComponent\", function() { return mdl_tabs_component_MdlTabsComponent; });\n/* concated harmony reexport MdlTabPanelContent */__webpack_require__.d(__webpack_exports__, \"MdlTabPanelContent\", function() { return mdl_tab_panel_component_MdlTabPanelContent; });\n/* concated harmony reexport MdlTabPanelComponent */__webpack_require__.d(__webpack_exports__, \"MdlTabPanelComponent\", function() { return mdl_tab_panel_component_MdlTabPanelComponent; });\n/* concated harmony reexport MdlTabPanelTitleComponent */__webpack_require__.d(__webpack_exports__, \"MdlTabPanelTitleComponent\", function() { return mdl_tab_panel_title_component_MdlTabPanelTitleComponent; });\n/* concated harmony reexport DISABLE_NATIVE_VALIDITY_CHECKING */__webpack_require__.d(__webpack_exports__, \"DISABLE_NATIVE_VALIDITY_CHECKING\", function() { return DISABLE_NATIVE_VALIDITY_CHECKING; });\n/* concated harmony reexport MdlTextFieldComponent */__webpack_require__.d(__webpack_exports__, \"MdlTextFieldComponent\", function() { return mdl_textfield_component_MdlTextFieldComponent; });\n/* concated harmony reexport MdlTextFieldModule */__webpack_require__.d(__webpack_exports__, \"MdlTextFieldModule\", function() { return mdl_textfield_component_MdlTextFieldModule; });\n/* concated harmony reexport Private1 */__webpack_require__.d(__webpack_exports__, \"Private1\", function() { return mdl_backdrop_overlay_component_MdlBackdropOverlayComponent; });\n/* concated harmony reexport Private2 */__webpack_require__.d(__webpack_exports__, \"Private2\", function() { return mdl_dialog_host_component_MdlDialogHostComponent; });\n/* concated harmony reexport Private3 */__webpack_require__.d(__webpack_exports__, \"Private3\", function() { return mdl_simple_dialog_component_MdlSimpleDialogComponent; });\nvar components_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// AOT :( https://github.com/angular/angular/issues/11606\n\n\n\nvar MDL_MODULES = [\n    mdl_button_component_MdlButtonModule,\n    layout_MdlLayoutModule,\n    mdl_checkbox_component_MdlCheckboxModule,\n    chips_MdlChipModule,\n    dialog_MdlDialogModule,\n    dialog_outlet_MdlDialogOutletModule,\n    mdl_spinner_component_MdlSpinnerModule,\n    mdl_ripple_directive_MdlRippleModule,\n    mdl_badge_directive_MdlBadgeModule,\n    mdl_shadow_directive_MdlShadowModule,\n    mdl_card_component_MdlCardModule,\n    mdl_radio_component_MdlRadioModule,\n    mdl_progress_component_MdlProgressModule,\n    mdl_icon_component_MdlIconModule,\n    mdl_icon_toggle_component_MdlIconToggleModule,\n    mdl_list_component_MdlListModule,\n    mdl_slider_component_MdlSliderModule,\n    mdl_switch_component_MdlSwitchModule,\n    mdl_snackbar_service_MdlSnackbarModule,\n    tooltip_MdlTooltipModule,\n    table_MdlTableModule,\n    menu_MdlMenuModule,\n    tabs_MdlTabsModule,\n    mdl_textfield_component_MdlTextFieldModule\n];\nvar components_MdlModule = /** @class */ (function () {\n    function MdlModule() {\n    }\n    MdlModule = components_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: [\n                mdl_button_component_MdlButtonModule.forRoot(),\n                layout_MdlLayoutModule.forRoot(),\n                mdl_checkbox_component_MdlCheckboxModule.forRoot(),\n                chips_MdlChipModule.forRoot(),\n                dialog_MdlDialogModule.forRoot(),\n                dialog_outlet_MdlDialogOutletModule.forRoot(),\n                mdl_spinner_component_MdlSpinnerModule.forRoot(),\n                mdl_ripple_directive_MdlRippleModule.forRoot(),\n                mdl_badge_directive_MdlBadgeModule.forRoot(),\n                mdl_shadow_directive_MdlShadowModule.forRoot(),\n                mdl_card_component_MdlCardModule.forRoot(),\n                mdl_radio_component_MdlRadioModule.forRoot(),\n                mdl_progress_component_MdlProgressModule.forRoot(),\n                mdl_icon_component_MdlIconModule.forRoot(),\n                mdl_icon_toggle_component_MdlIconToggleModule.forRoot(),\n                mdl_list_component_MdlListModule.forRoot(),\n                mdl_slider_component_MdlSliderModule.forRoot(),\n                mdl_switch_component_MdlSwitchModule.forRoot(),\n                mdl_snackbar_service_MdlSnackbarModule.forRoot(),\n                tooltip_MdlTooltipModule.forRoot(),\n                table_MdlTableModule.forRoot(),\n                menu_MdlMenuModule.forRoot(),\n                tabs_MdlTabsModule.forRoot(),\n                mdl_textfield_component_MdlTextFieldModule.forRoot()\n            ],\n            exports: MDL_MODULES,\n            providers: []\n        })\n    ], MdlModule);\n    return MdlModule;\n}());\n\nvar components_MdlNonRootModule = /** @class */ (function () {\n    function MdlNonRootModule() {\n    }\n    MdlNonRootModule.forRoot = function () {\n        return { ngModule: components_MdlModule };\n    };\n    MdlNonRootModule = components_decorate([\n        Object(core_[\"NgModule\"])({\n            imports: MDL_MODULES,\n            exports: MDL_MODULES\n        })\n    ], MdlNonRootModule);\n    return MdlNonRootModule;\n}());\n\n\n\n//# sourceURL=webpack://angularMdlCore/./src/lib/components/index.ts_+_64_modules?");

/***/ }),

/***/ "@angular/common":
/*!****************************************************************************************************************************!*\
  !*** external {"root":["ng","common"],"commonjs":"@angular/common","commonjs2":"@angular/common","amd":"@angular/common"} ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE__angular_common__;\n\n//# sourceURL=webpack://angularMdlCore/external_%7B%22root%22:%5B%22ng%22,%22common%22%5D,%22commonjs%22:%22@angular/common%22,%22commonjs2%22:%22@angular/common%22,%22amd%22:%22@angular/common%22%7D?");

/***/ }),

/***/ "@angular/core":
/*!********************************************************************************************************************!*\
  !*** external {"root":["ng","core"],"commonjs":"@angular/core","commonjs2":"@angular/core","amd":"@angular/core"} ***!
  \********************************************************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE__angular_core__;\n\n//# sourceURL=webpack://angularMdlCore/external_%7B%22root%22:%5B%22ng%22,%22core%22%5D,%22commonjs%22:%22@angular/core%22,%22commonjs2%22:%22@angular/core%22,%22amd%22:%22@angular/core%22%7D?");

/***/ }),

/***/ "@angular/forms":
/*!************************************************************************************************************************!*\
  !*** external {"root":["ng","forms"],"commonjs":"@angular/forms","commonjs2":"@angular/forms","amd":"@angular/forms"} ***!
  \************************************************************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE__angular_forms__;\n\n//# sourceURL=webpack://angularMdlCore/external_%7B%22root%22:%5B%22ng%22,%22forms%22%5D,%22commonjs%22:%22@angular/forms%22,%22commonjs2%22:%22@angular/forms%22,%22amd%22:%22@angular/forms%22%7D?");

/***/ }),

/***/ "@angular/platform-browser":
/*!*******************************************************************************************************************************************************************!*\
  !*** external {"root":["ng","platformBrowser"],"commonjs":"@angular/platform-browser","commonjs2":"@angular/platform-browser","amd":"@angular/platform-browser"} ***!
  \*******************************************************************************************************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE__angular_platform_browser__;\n\n//# sourceURL=webpack://angularMdlCore/external_%7B%22root%22:%5B%22ng%22,%22platformBrowser%22%5D,%22commonjs%22:%22@angular/platform-browser%22,%22commonjs2%22:%22@angular/platform-browser%22,%22amd%22:%22@angular/platform-browser%22%7D?");

/***/ }),

/***/ "rxjs":
/*!************************************************************************************!*\
  !*** external {"root":["rxjs"],"commonjs":"rxjs","commonjs2":"rxjs","amd":"rxjs"} ***!
  \************************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;\n\n//# sourceURL=webpack://angularMdlCore/external_%7B%22root%22:%5B%22rxjs%22%5D,%22commonjs%22:%22rxjs%22,%22commonjs2%22:%22rxjs%22,%22amd%22:%22rxjs%22%7D?");

/***/ }),

/***/ "rxjs/operators":
/*!******************************************************************************************************************************!*\
  !*** external {"root":["rxjs","operators"],"commonjs":"rxjs/operators","commonjs2":"rxjs/operators","amd":"rxjs/operators"} ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;\n\n//# sourceURL=webpack://angularMdlCore/external_%7B%22root%22:%5B%22rxjs%22,%22operators%22%5D,%22commonjs%22:%22rxjs/operators%22,%22commonjs2%22:%22rxjs/operators%22,%22amd%22:%22rxjs/operators%22%7D?");

/***/ })

/******/ });
});
//# sourceMappingURL=core.js.map