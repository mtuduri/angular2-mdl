{"version":3,"file":"mdl-badge.directive.js","sourceRoot":"","sources":["../../../src/lib/components/badge/mdl-badge.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,UAAU,EACV,SAAS,EACT,QAAQ,EAGT,MAAM,eAAe,CAAC;AAGvB,IAAM,cAAc,GAAG,YAAY,CAAC;AAEpC;IAYE,2BAAoB,UAAsB,EAAU,QAAmB;QAAnD,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QACrE,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC;IACrC,CAAC;IAEM,uCAAW,GAAlB,UAAmB,OAAsB;QACvC,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,WAAW,EAAC;YAC/E,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;YACvD,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAC5E,CAAC;;gBAtBF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,IAAI,EAAE;wBACJ,mBAAmB,EAAE,MAAM;qBAC5B;iBACF;;;;gBAfC,UAAU;gBACV,SAAS;;;kCAmBR,KAAK,SAAC,WAAW;;IAcpB,wBAAC;CAAA,AAxBD,IAwBC;SAlBY,iBAAiB;AAoB9B;IAAA;IAMuC,CAAC;;gBANvC,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,IAAI,EAAE;wBACJ,4BAA4B,EAAE,MAAM;qBACrC;iBACF;;IACsC,+BAAC;CAAA,AANxC,IAMwC;SAA3B,wBAAwB;AAErC;IAAA;IAM4C,CAAC;;gBAN5C,SAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,IAAI,EAAE;wBACJ,kCAAkC,EAAE,MAAM;qBAC3C;iBACF;;IAC2C,oCAAC;CAAA,AAN7C,IAM6C;SAAhC,6BAA6B;AAG1C,IAAM,oBAAoB,GAAG,CAAC,iBAAiB,EAAE,wBAAwB,EAAE,6BAA6B,CAAC,CAAC;AAE1G;IAAA;IAYA,CAAC;IANe,sBAAO,GAArB;QACE,OAAO;YACL,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;;gBAXF,QAAQ,SAAC;oBACR,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,oBAAoB;oBAC7B,YAAY,EAAE,oBAAoB;iBACnC;;IAQD,qBAAC;CAAA,AAZD,IAYC;SAPY,cAAc","sourcesContent":["import {\n  Directive,\n  Input,\n  OnChanges,\n  ElementRef,\n  Renderer2,\n  NgModule,\n  ModuleWithProviders,\n  SimpleChanges\n} from '@angular/core';\n\n\nconst DATA_BADE_ATTR = 'data-badge';\n\n@Directive({\n  selector: '[mdl-badge]',\n  host: {\n    '[class.mdl-badge]': 'true'\n  }\n})\nexport class MdlBadgeDirective implements OnChanges {\n\n  private el: HTMLElement;\n\n  @Input('mdl-badge') public mdlBadgeContent: string;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    this.el = elementRef.nativeElement;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (this.mdlBadgeContent === null || typeof this.mdlBadgeContent === 'undefined'){\n      this.renderer.removeAttribute(this.el, DATA_BADE_ATTR);\n      return;\n    }\n    this.renderer.setAttribute(this.el, DATA_BADE_ATTR, this.mdlBadgeContent);\n  }\n\n}\n\n@Directive({\n  selector: '[mdl-badge-overlap]',\n  host: {\n    '[class.mdl-badge--overlap]': 'true'\n  }\n})\nexport class MdlBadgeOverlapDirective {}\n\n@Directive({\n  selector: '[mdl-badge-no-background]',\n  host: {\n    '[class.mdl-badge--no-background]': 'true'\n  }\n})\nexport class MdlBadgeNoBackgroundDirective {}\n\n\nconst MDL_BADGE_DIRECTIVES = [MdlBadgeDirective, MdlBadgeOverlapDirective, MdlBadgeNoBackgroundDirective];\n\n@NgModule({\n  imports: [],\n  exports: MDL_BADGE_DIRECTIVES,\n  declarations: MDL_BADGE_DIRECTIVES,\n})\nexport class MdlBadgeModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlBadgeModule,\n      providers: []\n    };\n  }\n}\n"]}