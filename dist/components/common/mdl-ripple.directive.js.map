{"version":3,"file":"mdl-ripple.directive.js","sourceRoot":"","sources":["../../../src/lib/components/common/mdl-ripple.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  Input,\n  ElementRef,\n  OnChanges,\n  Renderer2,\n  NgModule,\n  ModuleWithProviders,\n  SimpleChanges\n} from '@angular/core';\nimport { MaterialRipple } from './ripple.vendor';\n\n// known bugs: https://github.com/google/material-design-lite/issues/4215\nexport class MdlRippleDirective implements OnChanges {\n\n  private RIPPLE = 'mdl-ripple';\n\n  private rippleContainer: HTMLElement;\n  public el: HTMLElement;\n  private ripple: any;\n\n  public rippleActive: boolean | string = true;\n\n  constructor(\n    private elementRef: ElementRef,\n    public renderer: Renderer2,\n    private cssContainerClasses: string[]) {\n    this.el = elementRef.nativeElement;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n\n      // remove any existing ripple container\n      if (this.rippleContainer) {\n        this.el.removeChild(this.rippleContainer);\n        delete this.rippleContainer;\n        delete this.ripple;\n      }\n\n      // if used as mdl-ripple without property binding it is an empty string\n      // otherwise (e.g. [mdl-ripple] it is a boolean - may be with the default value true.\n      if (this.rippleActive === '' || this.rippleActive) {\n\n        this.rippleContainer = this.renderer.createElement('span');\n        this.cssContainerClasses.forEach( ( cssClass ) => {\n          this.renderer.addClass(this.rippleContainer, cssClass);\n        });\n        const rippleElement = this.renderer.createElement('span');\n        this.renderer.addClass(rippleElement, this.RIPPLE);\n        this.rippleContainer.appendChild(rippleElement);\n        this.el.appendChild(this.rippleContainer);\n\n        this.ripple = new MaterialRipple(this.renderer, this.el);\n\n      }\n  }\n\n}\n\n@Directive({\n  selector: 'mdl-button[mdl-ripple], button[mdl-ripple]'\n})\nexport class MdlButtonRippleDirective extends MdlRippleDirective {\n\n  @Input('mdl-ripple') public rippleActive: boolean | string = true;\n\n  constructor(elementRef: ElementRef, renderer: Renderer2) {\n    super(elementRef, renderer, ['mdl-button__ripple-container']);\n  }\n\n  // AOT is not able to call lifecycle hooks if a base class :(\n  public ngOnChanges(changes: SimpleChanges) {super.ngOnChanges(changes);}\n}\n\n@Directive({\n  selector: 'mdl-checkbox[mdl-ripple]'\n})\nexport class MdlCheckboxRippleDirective extends MdlRippleDirective {\n\n  @Input('mdl-ripple') public rippleActive: boolean | string = true;\n\n  constructor(elementRef: ElementRef, renderer: Renderer2) {\n    super(elementRef, renderer, ['mdl-checkbox__ripple-container', 'mdl-ripple--center']);\n  }\n\n  // AOT is not able to call lifecycle hooks if a base class :(\n  public ngOnChanges(changes: SimpleChanges) {super.ngOnChanges(changes);}\n}\n\n@Directive({\n  selector: 'mdl-radio[mdl-ripple]'\n})\nexport class MdlRadioRippleDirective extends MdlRippleDirective {\n\n  @Input('mdl-ripple') public rippleActive: boolean | string = true;\n\n  constructor(elementRef: ElementRef, renderer: Renderer2) {\n    super(elementRef, renderer, ['mdl-radio__ripple-container', 'mdl-ripple--center']);\n  }\n\n  // AOT is not able to call lifecycle hooks if a base class :(\n  public ngOnChanges(changes: SimpleChanges) {super.ngOnChanges(changes);}\n}\n\n@Directive({\n  selector: 'mdl-icon-toggle[mdl-ripple]'\n})\nexport class MdlIconToggleRippleDirective extends MdlRippleDirective {\n\n  @Input('mdl-ripple') public rippleActive: boolean | string = true;\n\n  constructor(elementRef: ElementRef, renderer: Renderer2) {\n    super(elementRef, renderer, ['mdl-icon-toggle__ripple-container', 'mdl-ripple--center']);\n  }\n\n  // AOT is not able to call lifecycle hooks if a base class :(\n  public ngOnChanges(changes: SimpleChanges) {super.ngOnChanges(changes);}\n\n}\n\n@Directive({\n  selector: 'mdl-switch[mdl-ripple]'\n})\nexport class MdlSwitchRippleDirective extends MdlRippleDirective {\n\n  @Input('mdl-ripple') public rippleActive: boolean | string = true;\n\n  constructor(elementRef: ElementRef, renderer: Renderer2) {\n    super(elementRef, renderer, ['mdl-switch__ripple-container', 'mdl-ripple--center']);\n  }\n\n  // AOT is not able to call lifecycle hooks if a base class :(\n  public ngOnChanges(changes: SimpleChanges) {super.ngOnChanges(changes);}\n}\n\n@Directive({\n  selector: 'mdl-menu-item[mdl-ripple]'\n})\nexport class MdlMenuItemRippleDirective extends MdlRippleDirective {\n\n  @Input('mdl-ripple') public rippleActive: boolean | string = true;\n\n  constructor(elementRef: ElementRef, renderer: Renderer2) {\n    super(elementRef, renderer, ['mdl-menu__item--ripple-container']);\n  }\n\n  // AOT is not able to call lifecycle hooks if a base class :(\n  public ngOnChanges(changes: SimpleChanges) {super.ngOnChanges(changes);}\n}\n\n@Directive({\n  selector: 'a[mdl-ripple],div[mdl-ripple]'\n})\nexport class MdlAnchorRippleDirective extends MdlRippleDirective {\n\n  @Input('mdl-ripple') public rippleActive: boolean | string = true;\n\n  constructor(elementRef: ElementRef, renderer: Renderer2) {\n    super(elementRef, renderer, ['mdl-tabs__ripple-container', 'mdl-layout__tab-ripple-container']);\n  }\n\n  // AOT is not able to call lifecycle hooks if a base class :(\n  public ngOnChanges(changes: SimpleChanges) {super.ngOnChanges(changes);}\n}\n\nconst MDL_COMMON_DIRECTIVES = [\n  MdlCheckboxRippleDirective,\n  MdlButtonRippleDirective,\n  MdlRadioRippleDirective,\n  MdlIconToggleRippleDirective,\n  MdlSwitchRippleDirective,\n  MdlMenuItemRippleDirective,\n  MdlAnchorRippleDirective\n];\n\n@NgModule({\n  imports: [],\n  exports: MDL_COMMON_DIRECTIVES,\n  declarations: MDL_COMMON_DIRECTIVES,\n})\nexport class MdlRippleModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlRippleModule,\n      providers: []\n    };\n  }\n}\n"]}