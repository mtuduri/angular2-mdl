{"version":3,"file":"mdl-menu-item.component.js","sourceRoot":"","sources":["../../../src/lib/components/menu/mdl-menu-item.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,UAAU,EACV,UAAU,EACV,SAAS,EACT,MAAM,EACN,iBAAiB,EAClB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AACvD,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AAGtD;IAmBE,2GAA2G;IAC3G,8BACU,UAAsB,EACtB,QAAmB,EACyB,OAAyB;QAFrE,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;QACyB,YAAO,GAAP,OAAO,CAAkB;QAVvE,cAAS,GAAY,KAAK,CAAC;QAWjC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,aAAa,CAAC;IAC1C,CAAC;IAXD,sBACI,0CAAQ;aADZ,cAC0B,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAClD,UAAa,KAAK,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OADR;IAY3C,sCAAO,GAAd,UAAe,MAAM;QACnB,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;IACnC,CAAC;IAED,oGAAoG;IACpG,sGAAsG;IACtG,qGAAqG;IACrG,yCAAyC;IAClC,sCAAO,GAAd,UAAe,MAAM;QACnB,6CAA6C;QAC7C,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,MAAM,CAAC,cAAc,EAAE,CAAC;QAExB,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,OAAO,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACrD,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;;gBA/CF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,IAAI,EAAE;wBACJ,wBAAwB,EAAE,MAAM;wBAChC,UAAU,EAAE,IAAI;wBAChB,SAAS,EAAE,iBAAiB;wBAC5B,cAAc,EAAE,iBAAiB;qBAClC;oBACD,QAAQ,EAAE,2BAA2B;oBACrC,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC;;;;gBArBC,UAAU;gBAEV,SAAS;gBAIF,gBAAgB,uBA4BpB,MAAM,SAAC,UAAU,CAAC,cAAM,OAAA,gBAAgB,EAAhB,CAAgB,CAAC;;;2BAT3C,KAAK;;IAmCR,2BAAC;CAAA,AAjDD,IAiDC;SAtCY,oBAAoB","sourcesContent":["import {\n  Component,\n  Input,\n  ElementRef,\n  forwardRef,\n  Renderer2,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\nimport { MdlMenuComponent } from './mdl-menu.component';\nimport { toBoolean } from '../common/boolean-property';\nimport { callNative } from '../common/native-support';\n\n\n@Component({\n  selector: 'mdl-menu-item',\n  host: {\n    '[class.mdl-menu__item]': 'true',\n    'tabindex': '-1',\n    '(click)': 'onClick($event)',\n    '(touchstart)': 'onTouch($event)'\n  },\n  template: '<ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdlMenuItemComponent {\n\n  private _disabled: boolean = false;\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = toBoolean(value); }\n\n  public element: HTMLElement;\n  // forwardRef is needed because of he circular dependency menu queries menuitems; menuitem needs the parent\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Inject(forwardRef(() => MdlMenuComponent)) private mdlMenu: MdlMenuComponent) {\n    this.element = elementRef.nativeElement;\n  }\n\n  public onClick($event) {\n    $event.stopPropagation();\n    if (this.disabled) {\n      this.mdlMenu.hide();\n      return;\n    }\n    this.mdlMenu.hideOnItemClicked();\n  }\n\n  // we need to register a touchstart at the window to get informed if the user taps outside the menu.\n  // But if we register a touchstart event - safari will no longer convert touch events to click events.\n  // So we need to convert touch to click and the user still needs to register a (click) listener to be\n  // informed if the menu item has clicked.\n  public onTouch($event) {\n    // ensure that this event is totally consumed\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    let event = new MouseEvent('click', {bubbles: true});\n    callNative(this.element, 'dispatchEvent', event);\n  }\n\n}\n"]}