{"version":3,"file":"mdl-tooltip.directive.js","sourceRoot":"","sources":["../../../src/lib/components/tooltip/mdl-tooltip.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  Input,\n  OnInit,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver,\n  HostListener, OnChanges, SimpleChanges\n} from '@angular/core';\nimport { MdlSimpleTooltipComponent, MdlTooltipComponent } from './mdl-tooltip.component';\n\nexport class AbstractMdlTooltipDirective implements OnInit, OnChanges {\n\n  protected tooltip: string|MdlTooltipComponent;\n  protected position: 'left' | 'right' | 'top' | 'bottom';\n\n  protected tooltipComponent: MdlSimpleTooltipComponent;\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private large: boolean,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private renderer: Renderer2) {\n  }\n\n\n  public ngOnInit() {\n    // if the tooltip is not an instance of MdlTooltipComponent\n    // we create a simpleTooltipComponent on the fly.\n    if (!(this.tooltip instanceof MdlTooltipComponent)) {\n\n      let cFactory = this.componentFactoryResolver.resolveComponentFactory(MdlSimpleTooltipComponent);\n      let cRef: ComponentRef<MdlSimpleTooltipComponent> = this.vcRef.createComponent(cFactory);\n\n      this.tooltipComponent = <MdlSimpleTooltipComponent> cRef.instance;\n      this.tooltipComponent.tooltipText = <string>this.tooltip;\n      this.configureTooltipComponent();\n\n    } else {\n      this.tooltipComponent = <MdlTooltipComponent>this.tooltip;\n      this.configureTooltipComponent();\n    }\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['tooltip'] && !changes['tooltip'].isFirstChange()){\n      if (!(this.tooltip instanceof MdlTooltipComponent)) {\n        this.tooltipComponent.tooltipText = <string>this.tooltip;\n      }\n    }\n  }\n\n\n  private configureTooltipComponent() {\n    this.tooltipComponent.large = this.large;\n    this.tooltipComponent.position = this.position;\n  }\n\n  public onMouseEnter(event) {\n    this.tooltipComponent.mouseEnter(event);\n  }\n\n  @HostListener('window:touchstart')\n  public onMouseLeave() {\n    this.tooltipComponent.mouseLeave();\n  }\n}\n\n\nconst host: { [key: string]: string; } = {\n  '(mouseenter)': 'onMouseEnter($event)',\n  '(touchend)': 'onMouseEnter($event)',\n  '(mouseleave)': 'onMouseLeave()'\n};\n\n\n@Directive({\n  selector: '[mdl-tooltip]',\n  host: host\n})\nexport class MdlTooltipDirective extends AbstractMdlTooltipDirective {\n\n  @Input('mdl-tooltip')           public tooltip: string|MdlTooltipComponent;\n  @Input('mdl-tooltip-position')  public position: 'left' | 'right' | 'top' | 'bottom';\n\n  constructor(\n    vcRef: ViewContainerRef,\n    componentFactoryResolver: ComponentFactoryResolver,\n    renderer: Renderer2) {\n    super(vcRef, false, componentFactoryResolver, renderer);\n  }\n\n  public ngOnInit() { super.ngOnInit(); }\n  public ngOnChanges(changes: SimpleChanges) { super.ngOnChanges(changes)};\n}\n\n@Directive({\n  selector: '[mdl-tooltip-large]',\n  host: host\n})\nexport class MdlTooltipLargeDirective extends AbstractMdlTooltipDirective {\n\n  @Input('mdl-tooltip-large')     public tooltip: string|MdlTooltipComponent;\n  @Input('mdl-tooltip-position')  public position: 'left' | 'right' | 'top' | 'bottom';\n\n  constructor(\n    vcRef: ViewContainerRef,\n    componentFactoryResolver: ComponentFactoryResolver,\n    renderer: Renderer2) {\n    super(vcRef, true, componentFactoryResolver, renderer);\n  }\n\n  public ngOnInit() { super.ngOnInit(); }\n  public ngOnChanges(changes: SimpleChanges) { super.ngOnChanges(changes)};\n}\n"]}