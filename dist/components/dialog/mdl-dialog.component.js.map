{"version":3,"file":"mdl-dialog.component.js","sourceRoot":"","sources":["../../../src/lib/components/dialog/mdl-dialog.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ViewChild,\n  TemplateRef,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nimport { MdlDialogService, MdlDialogReference } from './mdl-dialog.service';\nimport { toBoolean } from './../common/boolean-property';\nimport { IMdlDialogConfiguration } from './mdl-dialog-configuration';\n\n\n\n@Component({\n  selector: 'mdl-dialog',\n  template: `\n    <div *dialogTemplate>\n      <ng-content></ng-content>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdlDialogComponent {\n\n  @ViewChild(TemplateRef) public template: TemplateRef<any>;\n\n  // @deprecated use mdl-dialog-config instead (will be removed in 3.0.0)\n  private _modal: boolean;\n  @Input('mdl-modal')\n  get modal(): boolean { return this._modal; }\n  set modal(value) { this._modal = toBoolean(value); }\n\n  @Input('mdl-dialog-config') public config: IMdlDialogConfiguration;\n  @Output('show') public showEmitter: EventEmitter<MdlDialogReference> = new EventEmitter<MdlDialogReference>();\n  @Output('hide') public hideEmitter: EventEmitter<void> = new EventEmitter<void>();\n\n  private isShown = false;\n  private dialogRef : MdlDialogReference = null;\n\n  constructor(private dialogService: MdlDialogService) {}\n\n\n  public show(): Observable<MdlDialogReference> {\n\n    if(this.isShown){\n      throw new Error('Only one instance of an embedded mdl-dialog can exist!');\n    }\n    this.isShown = true;\n\n    let mergedConfig: IMdlDialogConfiguration = this.config || {};\n\n    // mdl-modal overwrites config.isModal if present\n    mergedConfig.isModal = typeof this.modal !== 'undefined' ? this.modal : mergedConfig.isModal;\n    // default is true\n    if (typeof mergedConfig.isModal === 'undefined'){\n      mergedConfig.isModal = true;\n    }\n\n    let result: Subject<any> = new Subject();\n\n    let p = this.dialogService.showDialogTemplate(this.template, mergedConfig);\n    p.subscribe( (dialogRef: MdlDialogReference) => {\n\n      this.dialogRef = dialogRef;\n\n      this.dialogRef.onVisible().subscribe( () => {\n        this.showEmitter.emit(dialogRef);\n\n        result.next(dialogRef);\n        result.complete();\n\n      });\n\n      this.dialogRef.onHide().subscribe( () => {\n        this.hideEmitter.emit(null);\n        this.dialogRef = null;\n        this.isShown = false;\n      });\n\n    })\n    return result.asObservable();\n  }\n\n  public close() {\n    if (this.dialogRef){\n      this.dialogRef.hide();\n    }\n  }\n}\n"]}